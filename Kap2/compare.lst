
compare.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <start>:
@
@ compare.asm
@
start:	LDR	R0,=0x55555555	@ initiera port D som utport
20000000:	4807      	ldr	r0, [pc, #28]	; (20000020 <main_2+0x4>)
	LDR	R1,=0x40020C00
20000002:	4908      	ldr	r1, [pc, #32]	; (20000024 <main_2+0x8>)
	STR	R0,[R1]
20000004:	6008      	str	r0, [r1, #0]
	LDR	R5,=0x40020C14	@ adressen till port D:s ut-dataregister till R5
20000006:	4d08      	ldr	r5, [pc, #32]	; (20000028 <main_2+0xc>)
	LDR	R6,=0x40021010	@ adressen till port E:s in-dataregister till R6
20000008:	4e08      	ldr	r6, [pc, #32]	; (2000002c <main_2+0x10>)

2000000a <main>:

main:	LDRB	R0,[R6]		@ läs operand 1 till R0
2000000a:	7830      	ldrb	r0, [r6, #0]
	SXTB	R0,R0
2000000c:	b240      	sxtb	r0, r0
	LDRB	R1,[R6,#1]	@ läs operand 2 till R1
2000000e:	7871      	ldrb	r1, [r6, #1]
	SXTB	R1,R1
20000010:	b249      	sxtb	r1, r1
	CMP	R0,R1		@ op1 - op2 -> APSR
20000012:	4288      	cmp	r0, r1
	BGT	main_1		@ hopp om ICKE negative
20000014:	dc01      	bgt.n	2000001a <main_1>
	MOV	R0,#0		
20000016:	2000      	movs	r0, #0
	B	main_2
20000018:	e000      	b.n	2000001c <main_2>

2000001a <main_1>:
	
main_1:	MOV	R0,#0xFF
2000001a:	20ff      	movs	r0, #255	; 0xff

2000001c <main_2>:

main_2:	STRB	R0,[R5]
2000001c:	7028      	strb	r0, [r5, #0]
2000001e:	e7f4      	b.n	2000000a <main>
20000020:	55555555 	.word	0x55555555
20000024:	40020c00 	.word	0x40020c00
20000028:	40020c14 	.word	0x40020c14
2000002c:	40021010 	.word	0x40021010

20000030 <__bss_end__>:
	...

20001000 <heap_low>:
	...

20001800 <heap_top>:
	...