
Debug/7-4:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8a5 	bl	20000152 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <usart_tstchar>:
#define USART1 ((USART*) 0x40011000)
char inbuf;
char outbuf;


char usart_tstchar(void){
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
    char c = inbuf;
20000016:	1dfb      	adds	r3, r7, #7
20000018:	4a05      	ldr	r2, [pc, #20]	; (20000030 <usart_tstchar+0x20>)
2000001a:	7812      	ldrb	r2, [r2, #0]
2000001c:	701a      	strb	r2, [r3, #0]
    inbuf = 0;
2000001e:	4b04      	ldr	r3, [pc, #16]	; (20000030 <usart_tstchar+0x20>)
20000020:	2200      	movs	r2, #0
20000022:	701a      	strb	r2, [r3, #0]
    return c;
20000024:	1dfb      	adds	r3, r7, #7
20000026:	781b      	ldrb	r3, [r3, #0]
}
20000028:	0018      	movs	r0, r3
2000002a:	46bd      	mov	sp, r7
2000002c:	b002      	add	sp, #8
2000002e:	bd80      	pop	{r7, pc}
20000030:	20000188 	andcs	r0, r0, r8, lsl #3

20000034 <usart_irq_routine>:

void usart_irq_routine(void){
20000034:	b580      	push	{r7, lr}
20000036:	af00      	add	r7, sp, #0
    if( USART1->sr & BIT_RXNE ){
20000038:	4b15      	ldr	r3, [pc, #84]	; (20000090 <usart_irq_routine+0x5c>)
2000003a:	881b      	ldrh	r3, [r3, #0]
2000003c:	b29b      	uxth	r3, r3
2000003e:	001a      	movs	r2, r3
20000040:	2320      	movs	r3, #32
20000042:	4013      	ands	r3, r2
20000044:	d005      	beq.n	20000052 <usart_irq_routine+0x1e>
        inbuf = (char) USART1->dr;
20000046:	4b12      	ldr	r3, [pc, #72]	; (20000090 <usart_irq_routine+0x5c>)
20000048:	889b      	ldrh	r3, [r3, #4]
2000004a:	b29b      	uxth	r3, r3
2000004c:	b2da      	uxtb	r2, r3
2000004e:	4b11      	ldr	r3, [pc, #68]	; (20000094 <usart_irq_routine+0x60>)
20000050:	701a      	strb	r2, [r3, #0]
    }
	if( ( ( USART1->cr1 & TXEIE) !=0 ) && ( ( USART1->sr & BIT_TXE) !=0 ) ){
20000052:	4b0f      	ldr	r3, [pc, #60]	; (20000090 <usart_irq_routine+0x5c>)
20000054:	899b      	ldrh	r3, [r3, #12]
20000056:	b29b      	uxth	r3, r3
20000058:	001a      	movs	r2, r3
2000005a:	2380      	movs	r3, #128	; 0x80
2000005c:	4013      	ands	r3, r2
2000005e:	d013      	beq.n	20000088 <usart_irq_routine+0x54>
20000060:	4b0b      	ldr	r3, [pc, #44]	; (20000090 <usart_irq_routine+0x5c>)
20000062:	881b      	ldrh	r3, [r3, #0]
20000064:	b29b      	uxth	r3, r3
20000066:	001a      	movs	r2, r3
20000068:	2380      	movs	r3, #128	; 0x80
2000006a:	4013      	ands	r3, r2
2000006c:	d00c      	beq.n	20000088 <usart_irq_routine+0x54>
		USART1->dr = (unsigned short) outbuf;
2000006e:	4b0a      	ldr	r3, [pc, #40]	; (20000098 <usart_irq_routine+0x64>)
20000070:	781a      	ldrb	r2, [r3, #0]
20000072:	4b07      	ldr	r3, [pc, #28]	; (20000090 <usart_irq_routine+0x5c>)
20000074:	b292      	uxth	r2, r2
20000076:	809a      	strh	r2, [r3, #4]
		USART1->cr1 &= ~TXEIE;	/* Deaktivera avbrott för TXE */
20000078:	4b05      	ldr	r3, [pc, #20]	; (20000090 <usart_irq_routine+0x5c>)
2000007a:	899b      	ldrh	r3, [r3, #12]
2000007c:	b29b      	uxth	r3, r3
2000007e:	4a04      	ldr	r2, [pc, #16]	; (20000090 <usart_irq_routine+0x5c>)
20000080:	2180      	movs	r1, #128	; 0x80
20000082:	438b      	bics	r3, r1
20000084:	b29b      	uxth	r3, r3
20000086:	8193      	strh	r3, [r2, #12]
	}
}
20000088:	46c0      	nop			; (mov r8, r8)
2000008a:	46bd      	mov	sp, r7
2000008c:	bd80      	pop	{r7, pc}
2000008e:	46c0      	nop			; (mov r8, r8)
20000090:	40011000 	andmi	r1, r1, r0
20000094:	20000188 	andcs	r0, r0, r8, lsl #3
20000098:	20000189 	andcs	r0, r0, r9, lsl #3

2000009c <usart_init>:

char usart_init(void){
2000009c:	b580      	push	{r7, lr}
2000009e:	af00      	add	r7, sp, #0
    inbuf = 0;
200000a0:	4b0d      	ldr	r3, [pc, #52]	; (200000d8 <usart_init+0x3c>)
200000a2:	2200      	movs	r2, #0
200000a4:	701a      	strb	r2, [r3, #0]
    *USART1_IRQVEC = usart_irq_routine;
200000a6:	4b0d      	ldr	r3, [pc, #52]	; (200000dc <usart_init+0x40>)
200000a8:	4a0d      	ldr	r2, [pc, #52]	; (200000e0 <usart_init+0x44>)
200000aa:	601a      	str	r2, [r3, #0]
    *NVIC_USART1_ISER |= NVIC_USART1_IRQ_BPOS;
200000ac:	4b0d      	ldr	r3, [pc, #52]	; (200000e4 <usart_init+0x48>)
200000ae:	681a      	ldr	r2, [r3, #0]
200000b0:	4b0c      	ldr	r3, [pc, #48]	; (200000e4 <usart_init+0x48>)
200000b2:	2120      	movs	r1, #32
200000b4:	430a      	orrs	r2, r1
200000b6:	601a      	str	r2, [r3, #0]
    USART1->brr = 0x2D9;
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <usart_init+0x4c>)
200000ba:	4a0c      	ldr	r2, [pc, #48]	; (200000ec <usart_init+0x50>)
200000bc:	811a      	strh	r2, [r3, #8]
    USART1->cr3 = 0;
200000be:	4b0a      	ldr	r3, [pc, #40]	; (200000e8 <usart_init+0x4c>)
200000c0:	2200      	movs	r2, #0
200000c2:	829a      	strh	r2, [r3, #20]
    USART1->cr2 = 0;
200000c4:	4b08      	ldr	r3, [pc, #32]	; (200000e8 <usart_init+0x4c>)
200000c6:	2200      	movs	r2, #0
200000c8:	821a      	strh	r2, [r3, #16]
    USART1->cr1 = BIT_EN | BIT_RXNEIE | BIT_TE | BIT_RE;
200000ca:	4b07      	ldr	r3, [pc, #28]	; (200000e8 <usart_init+0x4c>)
200000cc:	4a08      	ldr	r2, [pc, #32]	; (200000f0 <usart_init+0x54>)
200000ce:	819a      	strh	r2, [r3, #12]

}
200000d0:	46c0      	nop			; (mov r8, r8)
200000d2:	0018      	movs	r0, r3
200000d4:	46bd      	mov	sp, r7
200000d6:	bd80      	pop	{r7, pc}
200000d8:	20000188 	andcs	r0, r0, r8, lsl #3
200000dc:	2001c0d4 	ldrdcs	ip, [r1], -r4
200000e0:	20000035 	andcs	r0, r0, r5, lsr r0
200000e4:	e000e104 	and	lr, r0, r4, lsl #2
200000e8:	40011000 	andmi	r1, r1, r0
200000ec:	000002d9 	ldrdeq	r0, [r0], -r9
200000f0:	0000202c 	andeq	r2, r0, ip, lsr #32

200000f4 <usart_outchar>:

void usart_outchar( char c ){
200000f4:	b580      	push	{r7, lr}
200000f6:	b082      	sub	sp, #8
200000f8:	af00      	add	r7, sp, #0
200000fa:	0002      	movs	r2, r0
200000fc:	1dfb      	adds	r3, r7, #7
200000fe:	701a      	strb	r2, [r3, #0]
	outbuf = c;
20000100:	4b07      	ldr	r3, [pc, #28]	; (20000120 <usart_outchar+0x2c>)
20000102:	1dfa      	adds	r2, r7, #7
20000104:	7812      	ldrb	r2, [r2, #0]
20000106:	701a      	strb	r2, [r3, #0]
	USART1->cr1 |= TXEIE;       /* aktivera avbrott för TXE */
20000108:	4b06      	ldr	r3, [pc, #24]	; (20000124 <usart_outchar+0x30>)
2000010a:	899b      	ldrh	r3, [r3, #12]
2000010c:	b29b      	uxth	r3, r3
2000010e:	4a05      	ldr	r2, [pc, #20]	; (20000124 <usart_outchar+0x30>)
20000110:	2180      	movs	r1, #128	; 0x80
20000112:	430b      	orrs	r3, r1
20000114:	b29b      	uxth	r3, r3
20000116:	8193      	strh	r3, [r2, #12]
}
20000118:	46c0      	nop			; (mov r8, r8)
2000011a:	46bd      	mov	sp, r7
2000011c:	b002      	add	sp, #8
2000011e:	bd80      	pop	{r7, pc}
20000120:	20000189 	andcs	r0, r0, r9, lsl #3
20000124:	40011000 	andmi	r1, r1, r0

20000128 <putstring>:

void putstring(char *s)
{
20000128:	b580      	push	{r7, lr}
2000012a:	b082      	sub	sp, #8
2000012c:	af00      	add	r7, sp, #0
2000012e:	6078      	str	r0, [r7, #4]
	while(*s)
20000130:	e006      	b.n	20000140 <putstring+0x18>
		usart_outchar (*s++);
20000132:	687b      	ldr	r3, [r7, #4]
20000134:	1c5a      	adds	r2, r3, #1
20000136:	607a      	str	r2, [r7, #4]
20000138:	781b      	ldrb	r3, [r3, #0]
2000013a:	0018      	movs	r0, r3
2000013c:	f7ff ffda 	bl	200000f4 <usart_outchar>
	while(*s)
20000140:	687b      	ldr	r3, [r7, #4]
20000142:	781b      	ldrb	r3, [r3, #0]
20000144:	2b00      	cmp	r3, #0
20000146:	d1f4      	bne.n	20000132 <putstring+0xa>
}
20000148:	46c0      	nop			; (mov r8, r8)
2000014a:	46c0      	nop			; (mov r8, r8)
2000014c:	46bd      	mov	sp, r7
2000014e:	b002      	add	sp, #8
20000150:	bd80      	pop	{r7, pc}

20000152 <main>:

void main(void)
{
20000152:	b590      	push	{r4, r7, lr}
20000154:	b083      	sub	sp, #12
20000156:	af00      	add	r7, sp, #0
    char c;
    usart_init();
20000158:	f7ff ffa0 	bl	2000009c <usart_init>
	putstring ("USART program");	/* Skric en textsträng */
2000015c:	4b09      	ldr	r3, [pc, #36]	; (20000184 <main+0x32>)
2000015e:	0018      	movs	r0, r3
20000160:	f7ff ffe2 	bl	20000128 <putstring>
    while (1){
        c = usart_tstchar();
20000164:	1dfc      	adds	r4, r7, #7
20000166:	f7ff ff53 	bl	20000010 <usart_tstchar>
2000016a:	0003      	movs	r3, r0
2000016c:	7023      	strb	r3, [r4, #0]
        if ( c ){
2000016e:	1dfb      	adds	r3, r7, #7
20000170:	781b      	ldrb	r3, [r3, #0]
20000172:	2b00      	cmp	r3, #0
20000174:	d0f6      	beq.n	20000164 <main+0x12>
            usart_outchar(c);
20000176:	1dfb      	adds	r3, r7, #7
20000178:	781b      	ldrb	r3, [r3, #0]
2000017a:	0018      	movs	r0, r3
2000017c:	f7ff ffba 	bl	200000f4 <usart_outchar>
        c = usart_tstchar();
20000180:	e7f0      	b.n	20000164 <main+0x12>
20000182:	46c0      	nop			; (mov r8, r8)
20000184:	2000018c 	andcs	r0, r0, ip, lsl #3

20000188 <inbuf>:
	...

20000189 <outbuf>:
20000189:	55000000 	strpl	r0, [r0, #-0]
2000018d:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
20000191:	6f727020 	svcvs	0x00727020
20000195:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
20000199:	Address 0x20000199 is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000001ea 	andeq	r0, r0, sl, ror #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
  10:	0000e90c 	andeq	lr, r0, ip, lsl #18
  14:	00013700 	andeq	r3, r1, r0, lsl #14
	...
  24:	011a0200 	tsteq	sl, r0, lsl #4
  28:	00d60922 	sbcseq	r0, r6, r2, lsr #18
  2c:	73030000 	movwvc	r0, #12288	; 0x3000
  30:	24010072 	strcs	r0, [r1], #-114	; 0xffffff8e
  34:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  38:	d9040000 	stmdble	r4, {}	; <UNPREDICTABLE>
  3c:	01000000 	mrseq	r0, (UNDEF: 0)
  40:	00dd1d25 	sbcseq	r1, sp, r5, lsr #26
  44:	03020000 	movweq	r0, #8192	; 0x2000
  48:	01007264 	tsteq	r0, r4, ror #4
  4c:	00dd1d26 	sbcseq	r1, sp, r6, lsr #26
  50:	04040000 	streq	r0, [r4], #-0
  54:	000000e1 	andeq	r0, r0, r1, ror #1
  58:	dd1d2701 	ldcle	7, cr2, [sp, #-4]
  5c:	06000000 	streq	r0, [r0], -r0
  60:	72726203 	rsbsvc	r6, r2, #805306368	; 0x30000000
  64:	1d280100 	stfnes	f0, [r8, #-0]
  68:	000000dd 	ldrdeq	r0, [r0], -sp
  6c:	00af0408 	adceq	r0, pc, r8, lsl #8
  70:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
  74:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  78:	63030a00 	movwvs	r0, #14848	; 0x3a00
  7c:	01003172 	tsteq	r0, r2, ror r1
  80:	00dd1d2a 	sbcseq	r1, sp, sl, lsr #26
  84:	040c0000 	streq	r0, [ip], #-0
  88:	00000114 	andeq	r0, r0, r4, lsl r1
  8c:	dd1d2b01 	vldrle	d2, [sp, #-4]
  90:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  94:	32726303 	rsbscc	r6, r2, #201326592	; 0xc000000
  98:	1d2c0100 	stfnes	f0, [ip, #-0]
  9c:	000000dd 	ldrdeq	r0, [r0], -sp
  a0:	011c0410 	tsteq	ip, r0, lsl r4
  a4:	2d010000 	stccs	0, cr0, [r1, #-0]
  a8:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  ac:	63031200 	movwvs	r1, #12800	; 0x3200
  b0:	01003372 	tsteq	r0, r2, ror r3
  b4:	00dd1d2e 	sbcseq	r1, sp, lr, lsr #26
  b8:	04140000 	ldreq	r0, [r4], #-0
  bc:	000000a7 	andeq	r0, r0, r7, lsr #1
  c0:	dd1d2f01 	ldcle	15, cr2, [sp, #-4]
  c4:	16000000 	strne	r0, [r0], -r0
  c8:	0000c204 	andeq	ip, r0, r4, lsl #4
  cc:	1d300100 	ldfnes	f0, [r0, #-0]
  d0:	000000dd 	ldrdeq	r0, [r0], -sp
  d4:	02050018 	andeq	r0, r5, #24
  d8:	00012407 	andeq	r2, r1, r7, lsl #8
  dc:	00d60600 	sbcseq	r0, r6, r0, lsl #12
  e0:	64070000 	strvs	r0, [r7], #-0
  e4:	01000001 	tsteq	r0, r1
  e8:	00250332 	eoreq	r0, r5, r2, lsr r3
  ec:	25080000 	strcs	r0, [r8, #-0]
  f0:	01000000 	mrseq	r0, (UNDEF: 0)
  f4:	01000635 	tsteq	r0, r5, lsr r6
  f8:	03050000 	movweq	r0, #20480	; 0x5000
  fc:	20000188 	andcs	r0, r0, r8, lsl #3
 100:	13080105 	movwne	r0, #33029	; 0x8105
 104:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 108:	0000015d 	andeq	r0, r0, sp, asr r1
 10c:	00063601 	andeq	r3, r6, r1, lsl #12
 110:	05000001 	streq	r0, [r0, #-1]
 114:	00018903 	andeq	r8, r1, r3, lsl #18
 118:	00180920 	andseq	r0, r8, r0, lsr #18
 11c:	5f010000 	svcpl	0x00010000
 120:	00015206 	andeq	r5, r1, r6, lsl #4
 124:	00003620 	andeq	r3, r0, r0, lsr #12
 128:	3d9c0100 	ldfccs	f0, [ip]
 12c:	0a000001 	beq	138 <startup-0x1ffffec8>
 130:	61010063 	tstvs	r1, r3, rrx
 134:	0001000a 	andeq	r0, r1, sl
 138:	6f910200 	svcvs	0x00910200
 13c:	00000900 	andeq	r0, r0, r0, lsl #18
 140:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
 144:	00012806 	andeq	r2, r1, r6, lsl #16
 148:	00002a20 	andeq	r2, r0, r0, lsr #20
 14c:	619c0100 	orrsvs	r0, ip, r0, lsl #2
 150:	0b000001 	bleq	15c <startup-0x1ffffea4>
 154:	59010073 	stmdbpl	r1, {r0, r1, r4, r5, r6}
 158:	00016116 	andeq	r6, r1, r6, lsl r1
 15c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 160:	00040c00 	andeq	r0, r4, r0, lsl #24
 164:	0d000001 	stceq	0, cr0, [r0, #-4]
 168:	0000014f 	andeq	r0, r0, pc, asr #2
 16c:	f4065401 	vst3.8	{d5-d7}, [r6], r1
 170:	34200000 	strtcc	r0, [r0], #-0
 174:	01000000 	mrseq	r0, (UNDEF: 0)
 178:	00018b9c 	muleq	r1, ip, fp
 17c:	00630b00 	rsbeq	r0, r3, r0, lsl #22
 180:	001a5401 	andseq	r5, sl, r1, lsl #8
 184:	02000001 	andeq	r0, r0, #1
 188:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
 18c:	000000b7 	strheq	r0, [r0], -r7
 190:	00064901 	andeq	r4, r6, r1, lsl #18
 194:	9c000001 	stcls	0, cr0, [r0], {1}
 198:	58200000 	stmdapl	r0!, {}	; <UNPREDICTABLE>
 19c:	01000000 	mrseq	r0, (UNDEF: 0)
 1a0:	00c70f9c 	smulleq	r0, r7, ip, pc	; <UNPREDICTABLE>
 1a4:	3f010000 	svccc	0x00010000
 1a8:	00003406 	andeq	r3, r0, r6, lsl #8
 1ac:	00006820 	andeq	r6, r0, r0, lsr #16
 1b0:	109c0100 	addsne	r0, ip, r0, lsl #2
 1b4:	0000000a 	andeq	r0, r0, sl
 1b8:	00063901 	andeq	r3, r6, r1, lsl #18
 1bc:	10000001 	andne	r0, r0, r1
 1c0:	24200000 	strtcs	r0, [r0], #-0
 1c4:	01000000 	mrseq	r0, (UNDEF: 0)
 1c8:	0001db9c 	muleq	r1, ip, fp
 1cc:	00630a00 	rsbeq	r0, r3, r0, lsl #20
 1d0:	000a3a01 	andeq	r3, sl, r1, lsl #20
 1d4:	02000001 	andeq	r0, r0, #1
 1d8:	0f007791 	svceq	0x00007791
 1dc:	0000001d 	andeq	r0, r0, sp, lsl r0
 1e0:	00060601 	andeq	r0, r6, r1, lsl #12
 1e4:	0c200000 	stceq	0, cr0, [r0], #-0
 1e8:	01000000 	mrseq	r0, (UNDEF: 0)
 1ec:	Address 0x000001ec is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0113 	bleq	2c0468 <startup-0x1fd3fb98>
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13010b39 	movwne	r0, #6969	; 0x1b39
  20:	0d030000 	stceq	0, cr0, [r3, #-0]
  24:	3a080300 	bcc	200c2c <startup-0x1fdff3d4>
  28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  2c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  30:	0400000b 	streq	r0, [r0], #-11
  34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  38:	0b3b0b3a 	bleq	ec2d28 <startup-0x1f13d2d8>
  3c:	13490b39 	movtne	r0, #39737	; 0x9b39
  40:	00000b38 	andeq	r0, r0, r8, lsr fp
  44:	0b002405 	bleq	9060 <startup-0x1fff6fa0>
  48:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  4c:	0600000e 	streq	r0, [r0], -lr
  50:	13490035 	movtne	r0, #36917	; 0x9035
  54:	16070000 	strne	r0, [r7], -r0
  58:	3a0e0300 	bcc	380c60 <startup-0x1fc7f3a0>
  5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  60:	0013490b 	andseq	r4, r3, fp, lsl #18
  64:	00340800 	eorseq	r0, r4, r0, lsl #16
  68:	0b3a0e03 	bleq	e8387c <startup-0x1f17c784>
  6c:	0b390b3b 	bleq	e42d60 <startup-0x1f1bd2a0>
  70:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  74:	00001802 	andeq	r1, r0, r2, lsl #16
  78:	3f012e09 	svccc	0x00012e09
  7c:	3a0e0319 	bcc	380ce8 <startup-0x1fc7f318>
  80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  84:	1119270b 	tstne	r9, fp, lsl #14
  88:	40061201 	andmi	r1, r6, r1, lsl #4
  8c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  90:	00001301 	andeq	r1, r0, r1, lsl #6
  94:	0300340a 	movweq	r3, #1034	; 0x40a
  98:	3b0b3a08 	blcc	2ce8c0 <startup-0x1fd31740>
  9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  a0:	00180213 	andseq	r0, r8, r3, lsl r2
  a4:	00050b00 	andeq	r0, r5, r0, lsl #22
  a8:	0b3a0803 	bleq	e820bc <startup-0x1f17df44>
  ac:	0b390b3b 	bleq	e42da0 <startup-0x1f1bd260>
  b0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  b4:	0f0c0000 	svceq	0x000c0000
  b8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  bc:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
  c0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  c4:	0b3a0e03 	bleq	e838d8 <startup-0x1f17c728>
  c8:	0b390b3b 	bleq	e42dbc <startup-0x1f1bd244>
  cc:	01111927 	tsteq	r1, r7, lsr #18
  d0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  d4:	01194297 			; <UNDEFINED> instruction: 0x01194297
  d8:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  dc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  e0:	0b3a0e03 	bleq	e838f4 <startup-0x1f17c70c>
  e4:	0b390b3b 	bleq	e42dd8 <startup-0x1f1bd228>
  e8:	13491927 	movtne	r1, #39207	; 0x9927
  ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
  f0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  f4:	0f000019 	svceq	0x00000019
  f8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  fc:	0b3a0e03 	bleq	e83910 <startup-0x1f17c6f0>
 100:	0b390b3b 	bleq	e42df4 <startup-0x1f1bd20c>
 104:	01111927 	tsteq	r1, r7, lsr #18
 108:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 10c:	00194297 	mulseq	r9, r7, r2
 110:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
 114:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 118:	0b3b0b3a 	bleq	ec2e08 <startup-0x1f13d1f8>
 11c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 120:	01111349 	tsteq	r1, r9, asr #6
 124:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 128:	01194297 			; <UNDEFINED> instruction: 0x01194297
 12c:	00000013 	andeq	r0, r0, r3, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000178 	andeq	r0, r0, r8, ror r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000188 	andcs	r0, r0, r8, lsl #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000011a 	andeq	r0, r0, sl, lsl r1
   4:	00410003 	subeq	r0, r1, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	372f7265 	strcc	r7, [pc, -r5, ror #4]!
  30:	0000342d 	andeq	r3, r0, sp, lsr #8
  34:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
  38:	78725f74 	ldmdavc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
  3c:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
  40:	325f7172 	subscc	r7, pc, #-2147483620	; 0x8000001c
  44:	0100632e 	tsteq	r0, lr, lsr #6
  48:	05000000 	streq	r0, [r0, #-0]
  4c:	02050001 	andeq	r0, r5, #1
  50:	20000000 	andcs	r0, r0, r0
  54:	21211318 			; <UNDEFINED> instruction: 0x21211318
  58:	0302212f 	movweq	r2, #8495	; 0x212f
  5c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  60:	02050019 	andeq	r0, r5, #25
  64:	20000010 	andcs	r0, r0, r0, lsl r0
  68:	05013803 	streq	r3, [r1, #-2051]	; 0xfffff7fd
  6c:	0b053d0a 	bleq	14f49c <startup-0x1feb0b64>
  70:	3d0c054b 	cfstr32cc	mvfx0, [ip, #-300]	; 0xfffffed4
  74:	052f0105 	streq	r0, [pc, #-261]!	; ffffff77 <outbuf+0xdffffdee>
  78:	0f05681d 	svceq	0x0005681d
  7c:	3c14052f 	cfldr32cc	mvfx0, [r4], {47}	; 0x2f
  80:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
  84:	1105211e 	tstne	r5, lr, lsl r1
  88:	200f053c 	andcs	r0, pc, ip, lsr r5	; <UNPREDICTABLE>
  8c:	05301005 	ldreq	r1, [r0, #-5]!
  90:	04053c16 	streq	r3, [r5], #-3094	; 0xfffff3ea
  94:	0032053c 	eorseq	r0, r2, ip, lsr r5
  98:	20010402 	andcs	r0, r1, r2, lsl #8
  9c:	02003705 	andeq	r3, r0, #1310720	; 0x140000
  a0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
  a4:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
  a8:	10053c01 	andne	r3, r5, r1, lsl #24
  ac:	2e090521 	cfsh32cs	mvfx0, mvfx9, #17
  b0:	05201005 	streq	r1, [r0, #-5]!
  b4:	0f05200e 	svceq	0x0005200e
  b8:	84010521 	strhi	r0, [r1], #-1313	; 0xfffffadf
  bc:	05a01605 	streq	r1, [r0, #1541]!	; 0x605
  c0:	05052f0b 	streq	r2, [r5, #-3851]	; 0xfffff0f5
  c4:	2014053d 	andscs	r0, r4, sp, lsr r5
  c8:	052f1705 	streq	r1, [pc, #-1797]!	; fffff9cb <outbuf+0xdffff842>
  cc:	1105670b 	tstne	r5, fp, lsl #14
  d0:	2f0b0520 	svccs	0x000b0520
  d4:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  d8:	11052f0b 	tstne	r5, fp, lsl #30
  dc:	2f0b0520 	svccs	0x000b0520
  e0:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  e4:	1d053001 	stcne	0, cr3, [r5, #-4]
  e8:	09052208 	stmdbeq	r5, {r3, r9, sp}
  ec:	4b0e0567 	blmi	381690 <startup-0x1fc7e970>
  f0:	85830105 	strhi	r0, [r3, #261]	; 0x105
  f4:	054b0705 	strbeq	r0, [fp, #-1797]	; 0xfffff8fb
  f8:	03052114 	movweq	r2, #20756	; 0x5114
  fc:	4908053c 	stmdbmi	r8, {r2, r3, r4, r5, r8, sl}
 100:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 104:	055b3001 	ldrbeq	r3, [fp, #-1]
 108:	02053e05 	andeq	r3, r5, #5, 28	; 0x50
 10c:	4c0d052f 	cfstr32mi	mvfx0, [sp], {47}	; 0x2f
 110:	05590c05 	ldrbeq	r0, [r9, #-3077]	; 0xfffff3fb
 114:	0b054b0d 	bleq	152d50 <startup-0x1fead2b0>
 118:	00040256 	andeq	r0, r4, r6, asr r2
 11c:	Address 0x0000011c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
   4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
   8:	73750067 	cmnvc	r5, #103	; 0x67
   c:	5f747261 	svcpl	0x00747261
  10:	63747374 	cmnvs	r4, #116, 6	; 0xd0000001
  14:	00726168 	rsbseq	r6, r2, r8, ror #2
  18:	6e69616d 	powvsez	f6, f1, #5.0
  1c:	61747300 	cmnvs	r4, r0, lsl #6
  20:	70757472 	rsbsvc	r7, r5, r2, ror r4
  24:	626e6900 	rsbvs	r6, lr, #0, 18
  28:	47006675 	smlsdxmi	r0, r5, r6, r6
  2c:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  30:	39203939 	stmdbcc	r0!, {r0, r3, r4, r5, r8, fp, ip, sp}
  34:	312e322e 			; <UNDEFINED> instruction: 0x312e322e
  38:	31303220 	teqcc	r0, r0, lsr #4
  3c:	32303139 	eorscc	r3, r0, #1073741838	; 0x4000000e
  40:	72282035 	eorvc	r2, r8, #53	; 0x35
  44:	61656c65 	cmnvs	r5, r5, ror #24
  48:	20296573 	eorcs	r6, r9, r3, ror r5
  4c:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
  50:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  54:	622d392d 	eorvs	r3, sp, #737280	; 0xb4000
  58:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  5c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  60:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  64:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  68:	39353737 	ldmdbcc	r5!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
  6c:	2d205d39 	stccs	13, cr5, [r0, #-228]!	; 0xffffff1c
  70:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  74:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  78:	6f6c666d 	svcvs	0x006c666d
  7c:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
  80:	733d6962 	teqvc	sp, #1605632	; 0x188000
  84:	2074666f 	rsbscs	r6, r4, pc, ror #12
  88:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  8c:	613d6863 	teqvs	sp, r3, ror #16
  90:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
  94:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
  98:	4f2d2067 	svcmi	0x002d2067
  9c:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
  a0:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
  a4:	55003939 	strpl	r3, [r0, #-2361]	; 0xfffff6c7
  a8:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
  ac:	55003564 	strpl	r3, [r0, #-1380]	; 0xfffffa9c
  b0:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
  b4:	75003264 	strvc	r3, [r0, #-612]	; 0xfffffd9c
  b8:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
  bc:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
  c0:	74670074 	strbtvc	r0, [r7], #-116	; 0xffffff8c
  c4:	75007270 	strvc	r7, [r0, #-624]	; 0xfffffd90
  c8:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
  cc:	7172695f 	cmnvc	r2, pc, asr r9
  d0:	756f725f 	strbvc	r7, [pc, #-607]!	; fffffe79 <outbuf+0xdffffcf0>
  d4:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0xfffff68c
  d8:	756e5500 	strbvc	r5, [lr, #-1280]!	; 0xfffffb00
  dc:	30646573 	rsbcc	r6, r4, r3, ror r5
  e0:	756e5500 	strbvc	r5, [lr, #-1280]!	; 0xfffffb00
  e4:	31646573 	smccc	18003	; 0x4653
  e8:	2f3a4400 	svccs	0x003a4400
  ec:	2f706f6d 	svccs	0x00706f6d
  f0:	6f62616c 	svcvs	0x0062616c
  f4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
  f8:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
  fc:	342d372f 	strtcc	r3, [sp], #-1839	; 0xfffff8d1
 100:	6173752f 	cmnvs	r3, pc, lsr #10
 104:	725f7472 	subsvc	r7, pc, #1912602624	; 0x72000000
 108:	5f787478 	svcpl	0x00787478
 10c:	5f717269 	svcpl	0x00717269
 110:	00632e32 	rsbeq	r2, r3, r2, lsr lr
 114:	73756e55 	cmnvc	r5, #1360	; 0x550
 118:	00336465 	eorseq	r6, r3, r5, ror #8
 11c:	73756e55 	cmnvc	r5, #1360	; 0x550
 120:	00346465 	eorseq	r6, r4, r5, ror #8
 124:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 128:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
 12c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 130:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 134:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
 138:	6f6d5c3a 	svcvs	0x006d5c3a
 13c:	616c5c70 	smcvs	50624	; 0xc5c0
 140:	61726f62 	cmnvs	r2, r2, ror #30
 144:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 148:	375c7265 	ldrbcc	r7, [ip, -r5, ror #4]
 14c:	7500342d 	strvc	r3, [r0, #-1069]	; 0xfffffbd3
 150:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
 154:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
 158:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 15c:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 160:	00667562 	rsbeq	r7, r6, r2, ror #10
 164:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
 168:	Address 0x00000168 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  3c:	00000007 	andeq	r0, r0, r7
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000034 	andcs	r0, r0, r4, lsr r0
  4c:	00000068 	andeq	r0, r0, r8, rrx
  50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  54:	41018e02 	tstmi	r1, r2, lsl #28
  58:	0000070d 	andeq	r0, r0, sp, lsl #14
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	2000009c 	mulcs	r0, ip, r0
  68:	00000058 	andeq	r0, r0, r8, asr r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0000070d 	andeq	r0, r0, sp, lsl #14
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	200000f4 	strdcs	r0, [r0], -r4
  84:	00000034 	andeq	r0, r0, r4, lsr r0
  88:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  8c:	41018e02 	tstmi	r1, r2, lsl #28
  90:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  94:	00000007 	andeq	r0, r0, r7
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	20000128 	andcs	r0, r0, r8, lsr #2
  a4:	0000002a 	andeq	r0, r0, sl, lsr #32
  a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ac:	41018e02 	tstmi	r1, r2, lsl #28
  b0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b4:	00000007 	andeq	r0, r0, r7
  b8:	0000001c 	andeq	r0, r0, ip, lsl r0
  bc:	00000000 	andeq	r0, r0, r0
  c0:	20000152 	andcs	r0, r0, r2, asr r1
  c4:	00000036 	andeq	r0, r0, r6, lsr r0
  c8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  cc:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  d0:	180e4101 	stmdane	lr, {r0, r8, lr}
  d4:	00070d41 	andeq	r0, r7, r1, asr #26
