
Debug/mop4-3:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8c2 	bl	2000018c <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <irq_handler>:
#define NVIC_EXTI3_IRQ_BPOS	(1<<9)

static volatile int count;

void irq_handler ( void )
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	/* Om avbrott från EXTI3:
		kvittera avbrott från EXTI3 */
	if(   *((unsigned int *) EXTI_PR) & EXTI3_IRQ_BPOS )
20000014:	4b33      	ldr	r3, [pc, #204]	; (200000e4 <irq_handler+0xd4>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	2208      	movs	r2, #8
2000001a:	4013      	ands	r3, r2
2000001c:	d05e      	beq.n	200000dc <irq_handler+0xcc>
	{
		//count++;
		*((unsigned int *) EXTI_PR) |= EXTI3_IRQ_BPOS;
2000001e:	4b31      	ldr	r3, [pc, #196]	; (200000e4 <irq_handler+0xd4>)
20000020:	681a      	ldr	r2, [r3, #0]
20000022:	4b30      	ldr	r3, [pc, #192]	; (200000e4 <irq_handler+0xd4>)
20000024:	2108      	movs	r1, #8
20000026:	430a      	orrs	r2, r1
20000028:	601a      	str	r2, [r3, #0]
		
		if( *GPIO_E_IDR_LOW & 0x1 )
2000002a:	4b2f      	ldr	r3, [pc, #188]	; (200000e8 <irq_handler+0xd8>)
2000002c:	781b      	ldrb	r3, [r3, #0]
2000002e:	b2db      	uxtb	r3, r3
20000030:	001a      	movs	r2, r3
20000032:	2301      	movs	r3, #1
20000034:	4013      	ands	r3, r2
20000036:	d014      	beq.n	20000062 <irq_handler+0x52>
		{
			*GPIO_E_ODR_LOW |= 16;		//10000 ettställ PE4
20000038:	4b2c      	ldr	r3, [pc, #176]	; (200000ec <irq_handler+0xdc>)
2000003a:	781b      	ldrb	r3, [r3, #0]
2000003c:	b2db      	uxtb	r3, r3
2000003e:	4a2b      	ldr	r2, [pc, #172]	; (200000ec <irq_handler+0xdc>)
20000040:	2110      	movs	r1, #16
20000042:	430b      	orrs	r3, r1
20000044:	b2db      	uxtb	r3, r3
20000046:	7013      	strb	r3, [r2, #0]
			*GPIO_E_ODR_LOW &= ~16; 	//01111 nollställ PE4
20000048:	4b28      	ldr	r3, [pc, #160]	; (200000ec <irq_handler+0xdc>)
2000004a:	781b      	ldrb	r3, [r3, #0]
2000004c:	b2db      	uxtb	r3, r3
2000004e:	4a27      	ldr	r2, [pc, #156]	; (200000ec <irq_handler+0xdc>)
20000050:	2110      	movs	r1, #16
20000052:	438b      	bics	r3, r1
20000054:	b2db      	uxtb	r3, r3
20000056:	7013      	strb	r3, [r2, #0]
			count++;
20000058:	4b25      	ldr	r3, [pc, #148]	; (200000f0 <irq_handler+0xe0>)
2000005a:	681b      	ldr	r3, [r3, #0]
2000005c:	1c5a      	adds	r2, r3, #1
2000005e:	4b24      	ldr	r3, [pc, #144]	; (200000f0 <irq_handler+0xe0>)
20000060:	601a      	str	r2, [r3, #0]
		}
		
		if( *GPIO_E_IDR_LOW & 0x2 )
20000062:	4b21      	ldr	r3, [pc, #132]	; (200000e8 <irq_handler+0xd8>)
20000064:	781b      	ldrb	r3, [r3, #0]
20000066:	b2db      	uxtb	r3, r3
20000068:	001a      	movs	r2, r3
2000006a:	2302      	movs	r3, #2
2000006c:	4013      	ands	r3, r2
2000006e:	d012      	beq.n	20000096 <irq_handler+0x86>
		{
			*GPIO_E_ODR_LOW |= 32;		//100000 ettställ PE5
20000070:	4b1e      	ldr	r3, [pc, #120]	; (200000ec <irq_handler+0xdc>)
20000072:	781b      	ldrb	r3, [r3, #0]
20000074:	b2db      	uxtb	r3, r3
20000076:	4a1d      	ldr	r2, [pc, #116]	; (200000ec <irq_handler+0xdc>)
20000078:	2120      	movs	r1, #32
2000007a:	430b      	orrs	r3, r1
2000007c:	b2db      	uxtb	r3, r3
2000007e:	7013      	strb	r3, [r2, #0]
			*GPIO_E_ODR_LOW &= ~32; 	//011111 nollställ PE5
20000080:	4b1a      	ldr	r3, [pc, #104]	; (200000ec <irq_handler+0xdc>)
20000082:	781b      	ldrb	r3, [r3, #0]
20000084:	b2db      	uxtb	r3, r3
20000086:	4a19      	ldr	r2, [pc, #100]	; (200000ec <irq_handler+0xdc>)
20000088:	2120      	movs	r1, #32
2000008a:	438b      	bics	r3, r1
2000008c:	b2db      	uxtb	r3, r3
2000008e:	7013      	strb	r3, [r2, #0]
			count = 0;
20000090:	4b17      	ldr	r3, [pc, #92]	; (200000f0 <irq_handler+0xe0>)
20000092:	2200      	movs	r2, #0
20000094:	601a      	str	r2, [r3, #0]
		}
		
		if( *GPIO_E_IDR_LOW & 0x4 )
20000096:	4b14      	ldr	r3, [pc, #80]	; (200000e8 <irq_handler+0xd8>)
20000098:	781b      	ldrb	r3, [r3, #0]
2000009a:	b2db      	uxtb	r3, r3
2000009c:	001a      	movs	r2, r3
2000009e:	2304      	movs	r3, #4
200000a0:	4013      	ands	r3, r2
200000a2:	d01b      	beq.n	200000dc <irq_handler+0xcc>
		{
			*GPIO_E_ODR_LOW |= 64;		//1000000 ettställ PE6
200000a4:	4b11      	ldr	r3, [pc, #68]	; (200000ec <irq_handler+0xdc>)
200000a6:	781b      	ldrb	r3, [r3, #0]
200000a8:	b2db      	uxtb	r3, r3
200000aa:	4a10      	ldr	r2, [pc, #64]	; (200000ec <irq_handler+0xdc>)
200000ac:	2140      	movs	r1, #64	; 0x40
200000ae:	430b      	orrs	r3, r1
200000b0:	b2db      	uxtb	r3, r3
200000b2:	7013      	strb	r3, [r2, #0]
			*GPIO_E_ODR_LOW &= ~64; 	//0111111 nollställ PE6
200000b4:	4b0d      	ldr	r3, [pc, #52]	; (200000ec <irq_handler+0xdc>)
200000b6:	781b      	ldrb	r3, [r3, #0]
200000b8:	b2db      	uxtb	r3, r3
200000ba:	4a0c      	ldr	r2, [pc, #48]	; (200000ec <irq_handler+0xdc>)
200000bc:	2140      	movs	r1, #64	; 0x40
200000be:	438b      	bics	r3, r1
200000c0:	b2db      	uxtb	r3, r3
200000c2:	7013      	strb	r3, [r2, #0]
			
			if( *GPIO_D_ODR_LOW == 0xFF )
200000c4:	4b0b      	ldr	r3, [pc, #44]	; (200000f4 <irq_handler+0xe4>)
200000c6:	781b      	ldrb	r3, [r3, #0]
200000c8:	b2db      	uxtb	r3, r3
200000ca:	2bff      	cmp	r3, #255	; 0xff
200000cc:	d103      	bne.n	200000d6 <irq_handler+0xc6>
				*GPIO_D_ODR_LOW = 0;
200000ce:	4b09      	ldr	r3, [pc, #36]	; (200000f4 <irq_handler+0xe4>)
200000d0:	2200      	movs	r2, #0
200000d2:	701a      	strb	r2, [r3, #0]
			else
				*GPIO_D_ODR_LOW = 0xFF;
		}
 	}
}
200000d4:	e002      	b.n	200000dc <irq_handler+0xcc>
				*GPIO_D_ODR_LOW = 0xFF;
200000d6:	4b07      	ldr	r3, [pc, #28]	; (200000f4 <irq_handler+0xe4>)
200000d8:	22ff      	movs	r2, #255	; 0xff
200000da:	701a      	strb	r2, [r3, #0]
}
200000dc:	46c0      	nop			; (mov r8, r8)
200000de:	46bd      	mov	sp, r7
200000e0:	bd80      	pop	{r7, pc}
200000e2:	46c0      	nop			; (mov r8, r8)
200000e4:	40013c14 	andmi	r3, r1, r4, lsl ip
200000e8:	40021010 	andmi	r1, r2, r0, lsl r0
200000ec:	40021014 	andmi	r1, r2, r4, lsl r0
200000f0:	200001a8 	andcs	r0, r0, r8, lsr #3
200000f4:	40020c14 	andmi	r0, r2, r4, lsl ip

200000f8 <init_app>:

void init_app( void )
{
200000f8:	b580      	push	{r7, lr}
200000fa:	af00      	add	r7, sp, #0
	* ( (unsigned char *) 0x40020C14) = 0x0;
200000fc:	4b17      	ldr	r3, [pc, #92]	; (2000015c <init_app+0x64>)
200000fe:	2200      	movs	r2, #0
20000100:	701a      	strb	r2, [r3, #0]
	* ( (unsigned short *) 0x40020C00) = 0x5555;  // GPIO MODER D initieras
20000102:	4b17      	ldr	r3, [pc, #92]	; (20000160 <init_app+0x68>)
20000104:	4a17      	ldr	r2, [pc, #92]	; (20000164 <init_app+0x6c>)
20000106:	801a      	strh	r2, [r3, #0]
	* ( (unsigned short *) 0x40021000) = 0x5500;  // GPIO MODER E
20000108:	4b17      	ldr	r3, [pc, #92]	; (20000168 <init_app+0x70>)
2000010a:	22aa      	movs	r2, #170	; 0xaa
2000010c:	01d2      	lsls	r2, r2, #7
2000010e:	801a      	strh	r2, [r3, #0]
	* ( (unsigned char *) 0x40021010) = 0x0;
20000110:	4b16      	ldr	r3, [pc, #88]	; (2000016c <init_app+0x74>)
20000112:	2200      	movs	r2, #0
20000114:	701a      	strb	r2, [r3, #0]
	* ( (unsigned char *) 0x40021014) = 0x0;
20000116:	4b16      	ldr	r3, [pc, #88]	; (20000170 <init_app+0x78>)
20000118:	2200      	movs	r2, #0
2000011a:	701a      	strb	r2, [r3, #0]
	
        
	/* Koppla PE3 till avbrottslina EXTI3 */
	*((unsigned int *) SYSCFG_EXTICR1) |= 0x4000;
2000011c:	4b15      	ldr	r3, [pc, #84]	; (20000174 <init_app+0x7c>)
2000011e:	681a      	ldr	r2, [r3, #0]
20000120:	4b14      	ldr	r3, [pc, #80]	; (20000174 <init_app+0x7c>)
20000122:	2180      	movs	r1, #128	; 0x80
20000124:	01c9      	lsls	r1, r1, #7
20000126:	430a      	orrs	r2, r1
20000128:	601a      	str	r2, [r3, #0]
	
	/* Konfigurera EXTI3 för att generera avbrott */
	*((unsigned int *) EXTI_IMR) |= EXTI3_IRQ_BPOS;
2000012a:	4b13      	ldr	r3, [pc, #76]	; (20000178 <init_app+0x80>)
2000012c:	681a      	ldr	r2, [r3, #0]
2000012e:	4b12      	ldr	r3, [pc, #72]	; (20000178 <init_app+0x80>)
20000130:	2108      	movs	r1, #8
20000132:	430a      	orrs	r2, r1
20000134:	601a      	str	r2, [r3, #0]
	/* Konfigurera för avbrott på positiv flank */
	*((unsigned int *) EXTI_RTSR) |= EXTI3_IRQ_BPOS;
20000136:	4b11      	ldr	r3, [pc, #68]	; (2000017c <init_app+0x84>)
20000138:	681a      	ldr	r2, [r3, #0]
2000013a:	4b10      	ldr	r3, [pc, #64]	; (2000017c <init_app+0x84>)
2000013c:	2108      	movs	r1, #8
2000013e:	430a      	orrs	r2, r1
20000140:	601a      	str	r2, [r3, #0]
	
	/* Sätt upp avbrottsvektor */
	*((void (**) (void) ) EXTI3_IRQVEC ) = irq_handler;
20000142:	4b0f      	ldr	r3, [pc, #60]	; (20000180 <init_app+0x88>)
20000144:	4a0f      	ldr	r2, [pc, #60]	; (20000184 <init_app+0x8c>)
20000146:	601a      	str	r2, [r3, #0]
	
	/* Konfigurera den bit i NVIC som kontrollerar den avbrottslina som EXTI3 kopplas till */
	*((unsigned int *) NVIC_ISER0) |= NVIC_EXTI3_IRQ_BPOS;
20000148:	4b0f      	ldr	r3, [pc, #60]	; (20000188 <init_app+0x90>)
2000014a:	681a      	ldr	r2, [r3, #0]
2000014c:	4b0e      	ldr	r3, [pc, #56]	; (20000188 <init_app+0x90>)
2000014e:	2180      	movs	r1, #128	; 0x80
20000150:	0089      	lsls	r1, r1, #2
20000152:	430a      	orrs	r2, r1
20000154:	601a      	str	r2, [r3, #0]

}
20000156:	46c0      	nop			; (mov r8, r8)
20000158:	46bd      	mov	sp, r7
2000015a:	bd80      	pop	{r7, pc}
2000015c:	40020c14 	andmi	r0, r2, r4, lsl ip
20000160:	40020c00 	andmi	r0, r2, r0, lsl #24
20000164:	00005555 	andeq	r5, r0, r5, asr r5
20000168:	40021000 	andmi	r1, r2, r0
2000016c:	40021010 	andmi	r1, r2, r0, lsl r0
20000170:	40021014 	andmi	r1, r2, r4, lsl r0
20000174:	40013808 	andmi	r3, r1, r8, lsl #16
20000178:	40013c00 	andmi	r3, r1, r0, lsl #24
2000017c:	40013c08 	andmi	r3, r1, r8, lsl #24
20000180:	2001c064 	andcs	ip, r1, r4, rrx
20000184:	20000011 	andcs	r0, r0, r1, lsl r0
20000188:	e000e100 	and	lr, r0, r0, lsl #2

2000018c <main>:



void main(void)
{
2000018c:	b580      	push	{r7, lr}
2000018e:	af00      	add	r7, sp, #0
	init_app();
20000190:	f7ff ffb2 	bl	200000f8 <init_app>
	while( 1 )
	{
		*GPIO_D_ODR_LOW  = count;
20000194:	4b02      	ldr	r3, [pc, #8]	; (200001a0 <main+0x14>)
20000196:	681a      	ldr	r2, [r3, #0]
20000198:	4b02      	ldr	r3, [pc, #8]	; (200001a4 <main+0x18>)
2000019a:	b2d2      	uxtb	r2, r2
2000019c:	701a      	strb	r2, [r3, #0]
2000019e:	e7f9      	b.n	20000194 <main+0x8>
200001a0:	200001a8 	andcs	r0, r0, r8, lsr #3
200001a4:	40020c14 	andmi	r0, r2, r4, lsl ip

200001a8 <count>:
200001a8:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000088 	andeq	r0, r0, r8, lsl #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000001b 	andeq	r0, r0, fp, lsl r0
  10:	0000bf0c 	andeq	fp, r0, ip, lsl #30
	...
  24:	00a80200 	adceq	r0, r8, r0, lsl #4
  28:	1f010000 	svcne	0x00010000
  2c:	00003e15 	andeq	r3, r0, r5, lsl lr
  30:	a8030500 	stmdage	r3, {r8, sl}
  34:	03200001 			; <UNDEFINED> instruction: 0x03200001
  38:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  3c:	37040074 	smlsdxcc	r4, r4, r0, r0
  40:	05000000 	streq	r0, [r0, #-0]
  44:	000000ba 	strheq	r0, [r0], -sl
  48:	8c066001 	stchi	0, cr6, [r6], {1}
  4c:	1c200001 	stcne	0, cr0, [r0], #-4
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	009f069c 	umullseq	r0, pc, ip, r6	; <UNPREDICTABLE>
  58:	45010000 	strmi	r0, [r1, #-0]
  5c:	0000f806 	andeq	pc, r0, r6, lsl #16
  60:	00009420 	andeq	r9, r0, r0, lsr #8
  64:	069c0100 	ldreq	r0, [ip], r0, lsl #2
  68:	000000ae 	andeq	r0, r0, lr, lsr #1
  6c:	10062101 	andne	r2, r6, r1, lsl #2
  70:	e8200000 	stmda	r0!, {}	; <UNPREDICTABLE>
  74:	01000000 	mrseq	r0, (UNDEF: 0)
  78:	0097069c 	umullseq	r0, r7, ip, r6
  7c:	06010000 	streq	r0, [r1], -r0
  80:	00000006 	andeq	r0, r0, r6
  84:	00000c20 	andeq	r0, r0, r0, lsr #24
  88:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	00001802 	andeq	r1, r0, r2, lsl #16
  24:	0b002403 	bleq	9038 <startup-0x1fff6fc8>
  28:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  2c:	04000008 	streq	r0, [r0], #-8
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  38:	03193f00 	tsteq	r9, #0, 30
  3c:	3b0b3a0e 	blcc	2ce87c <startup-0x1fd31784>
  40:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  44:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  48:	96184006 	ldrls	r4, [r8], -r6
  4c:	00001942 	andeq	r1, r0, r2, asr #18
  50:	3f002e06 	svccc	0x00002e06
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  5c:	1119270b 	tstne	r9, fp, lsl #14
  60:	40061201 	andmi	r1, r6, r1, lsl #4
  64:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  68:	Address 0x00000068 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000198 	muleq	r0, r8, r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001a8 	andcs	r0, r0, r8, lsr #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000010e 	andeq	r0, r0, lr, lsl #2
   4:	00440003 	subeq	r0, r4, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	6d2f7265 	sfmvs	f7, 4, [pc, #-404]!	; fffffea0 <count+0xdffffcf8>
  30:	2d34706f 	ldccs	0, cr7, [r4, #-444]!	; 0xfffffe44
  34:	66000033 			; <UNDEFINED> instruction: 0x66000033
  38:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
  3c:	5f706f6c 	svcpl	0x00706f6c
  40:	5f717269 	svcpl	0x00717269
  44:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
  48:	00010063 	andeq	r0, r1, r3, rrx
  4c:	01050000 	mrseq	r0, (UNDEF: 5)
  50:	00020500 	andeq	r0, r2, r0, lsl #10
  54:	18200000 	stmdane	r0!, {}	; <UNPREDICTABLE>
  58:	2f212113 	svccs	0x00212113
  5c:	00030221 	andeq	r0, r3, r1, lsr #4
  60:	01050101 	tsteq	r5, r1, lsl #2
  64:	10020500 	andne	r0, r2, r0, lsl #10
  68:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  6c:	08050121 	stmdaeq	r5, {r0, r5, r8}
  70:	2e240531 	mcrcs	5, 1, r0, cr4, cr1, {1}
  74:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
  78:	0705231f 	smladeq	r5, pc, r3, r2	; <UNPREDICTABLE>
  7c:	3c170568 	cfldr32cc	mvfx0, [r7], {104}	; 0x68
  80:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
  84:	05832214 	streq	r2, [r3, #532]	; 0x214
  88:	07058309 	streq	r8, [r5, -r9, lsl #6]
  8c:	3c17055b 	cfldr32cc	mvfx0, [r7], {91}	; 0x5b
  90:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
  94:	05832214 	streq	r2, [r3, #532]	; 0x214
  98:	0705830a 	streq	r8, [r5, -sl, lsl #6]
  9c:	3c17053f 	cfldr32cc	mvfx0, [r7], {63}	; 0x3f
  a0:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
  a4:	05832214 	streq	r2, [r3, #532]	; 0x214
  a8:	06058408 	streq	r8, [r5], -r8, lsl #8
  ac:	2f05053c 	svccs	0x0005053c
  b0:	05201505 	streq	r1, [r0, #-1285]!	; 0xfffffafb
  b4:	05053301 	streq	r3, [r5, #-769]	; 0xfffffcff
  b8:	2015051d 	andscs	r0, r5, sp, lsl r5
  bc:	d9310105 	ldmdble	r1!, {r0, r2, r8}
  c0:	052f0205 	streq	r0, [pc, #-517]!	; fffffec3 <count+0xdffffd1b>
  c4:	02052024 	andeq	r2, r5, #36	; 0x24
  c8:	2025052f 	eorcs	r0, r5, pc, lsr #10
  cc:	052f0205 	streq	r0, [pc, #-517]!	; fffffecf <count+0xdffffd27>
  d0:	02052025 	andeq	r2, r5, #37	; 0x25
  d4:	2024053d 	eorcs	r0, r4, sp, lsr r5
  d8:	052f0205 	streq	r0, [pc, #-517]!	; fffffedb <count+0xdffffd33>
  dc:	25052024 	strcs	r2, [r5, #-36]	; 0xffffffdc
  e0:	771f0532 			; <UNDEFINED> instruction: 0x771f0532
  e4:	05682005 	strbeq	r2, [r8, #-5]!
  e8:	27056902 	strcs	r6, [r5, -r2, lsl #18]
  ec:	31210520 			; <UNDEFINED> instruction: 0x31210520
  f0:	08760105 	ldmdaeq	r6!, {r0, r2, r8}^
  f4:	2f0205a3 	svccs	0x000205a3
  f8:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
  fc:	05310104 	ldreq	r0, [r1, #-260]!	; 0xfffffefc
 100:	04020003 	streq	r0, [r2], #-3
 104:	14052e01 	strne	r2, [r5], #-3585	; 0xfffff1ff
 108:	01040200 	mrseq	r0, R12_usr
 10c:	00070220 	andeq	r0, r7, r0, lsr #4
 110:	Address 0x00000110 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6d5c3a44 	vldrvs	s7, [ip, #-272]	; 0xfffffef0
   4:	6c5c706f 	mrrcvs	0, 6, r7, ip, cr15
   8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
   c:	6f697461 	svcvs	0x00697461
  10:	5c72656e 	cfldr64pl	mvdx6, [r2], #-440	; 0xfffffe48
  14:	34706f6d 	ldrbtcc	r6, [r0], #-3949	; 0xfffff093
  18:	4700332d 	strmi	r3, [r0, -sp, lsr #6]
  1c:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  20:	39203939 	stmdbcc	r0!, {r0, r3, r4, r5, r8, fp, ip, sp}
  24:	312e322e 			; <UNDEFINED> instruction: 0x312e322e
  28:	31303220 	teqcc	r0, r0, lsr #4
  2c:	32303139 	eorscc	r3, r0, #1073741838	; 0x4000000e
  30:	72282035 	eorvc	r2, r8, #53	; 0x35
  34:	61656c65 	cmnvs	r5, r5, ror #24
  38:	20296573 	eorcs	r6, r9, r3, ror r5
  3c:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
  40:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  44:	622d392d 	eorvs	r3, sp, #737280	; 0xb4000
  48:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  4c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  50:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  54:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  58:	39353737 	ldmdbcc	r5!, {r0, r1, r2, r4, r5, r8, r9, sl, ip, sp}
  5c:	2d205d39 	stccs	13, cr5, [r0, #-228]!	; 0xffffff1c
  60:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  64:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  68:	6f6c666d 	svcvs	0x006c666d
  6c:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
  70:	733d6962 	teqvc	sp, #1605632	; 0x188000
  74:	2074666f 	rsbscs	r6, r4, pc, ror #12
  78:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  7c:	613d6863 	teqvs	sp, r3, ror #16
  80:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
  84:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
  88:	4f2d2067 	svcmi	0x002d2067
  8c:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
  90:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
  94:	73003939 	movwvc	r3, #2361	; 0x939
  98:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  9c:	69007075 	stmdbvs	r0, {r0, r2, r4, r5, r6, ip, sp, lr}
  a0:	5f74696e 	svcpl	0x0074696e
  a4:	00707061 	rsbseq	r7, r0, r1, rrx
  a8:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
  ac:	72690074 	rsbvc	r0, r9, #116	; 0x74
  b0:	61685f71 	smcvs	34289	; 0x85f1
  b4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
  b8:	616d0072 	smcvs	53250	; 0xd002
  bc:	44006e69 	strmi	r6, [r0], #-3689	; 0xfffff197
  c0:	6f6d2f3a 	svcvs	0x006d2f3a
  c4:	616c2f70 	smcvs	49904	; 0xc2f0
  c8:	61726f62 	cmnvs	r2, r2, ror #30
  cc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  d0:	6d2f7265 	sfmvs	f7, 4, [pc, #-404]!	; ffffff44 <count+0xdffffd9c>
  d4:	2d34706f 	ldccs	0, cr7, [r4, #-444]!	; 0xfffffe44
  d8:	6c662f33 	stclvs	15, cr2, [r6], #-204	; 0xffffff34
  dc:	6c667069 	stclvs	0, cr7, [r6], #-420	; 0xfffffe5c
  e0:	695f706f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  e4:	615f7172 	cmpvs	pc, r2, ror r1	; <UNPREDICTABLE>
  e8:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	000000e8 	andeq	r0, r0, r8, ror #1
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	200000f8 	strdcs	r0, [r0], -r8
  48:	00000094 	muleq	r0, r4, r0
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	2000018c 	andcs	r0, r0, ip, lsl #3
  64:	0000001c 	andeq	r0, r0, ip, lsl r0
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
