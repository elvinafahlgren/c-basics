
Debug/7-3:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f890 	bl	20000128 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <usart_tstchar>:
#define USART1 ((USART*) 0x40011000)
char inbuf;
char outbuf;


char usart_tstchar(void){
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
    char c = inbuf;
20000016:	1dfb      	adds	r3, r7, #7
20000018:	4a05      	ldr	r2, [pc, #20]	; (20000030 <usart_tstchar+0x20>)
2000001a:	7812      	ldrb	r2, [r2, #0]
2000001c:	701a      	strb	r2, [r3, #0]
    inbuf = 0;
2000001e:	4b04      	ldr	r3, [pc, #16]	; (20000030 <usart_tstchar+0x20>)
20000020:	2200      	movs	r2, #0
20000022:	701a      	strb	r2, [r3, #0]
    return c;
20000024:	1dfb      	adds	r3, r7, #7
20000026:	781b      	ldrb	r3, [r3, #0]
}
20000028:	0018      	movs	r0, r3
2000002a:	46bd      	mov	sp, r7
2000002c:	b002      	add	sp, #8
2000002e:	bd80      	pop	{r7, pc}
20000030:	20000150 	andcs	r0, r0, r0, asr r1

20000034 <usart_irq_routine>:

void usart_irq_routine(void){
20000034:	b580      	push	{r7, lr}
20000036:	af00      	add	r7, sp, #0
    if( USART1->sr & BIT_RXNE ){
20000038:	4b15      	ldr	r3, [pc, #84]	; (20000090 <usart_irq_routine+0x5c>)
2000003a:	881b      	ldrh	r3, [r3, #0]
2000003c:	b29b      	uxth	r3, r3
2000003e:	001a      	movs	r2, r3
20000040:	2320      	movs	r3, #32
20000042:	4013      	ands	r3, r2
20000044:	d005      	beq.n	20000052 <usart_irq_routine+0x1e>
        inbuf = (char) USART1->dr;
20000046:	4b12      	ldr	r3, [pc, #72]	; (20000090 <usart_irq_routine+0x5c>)
20000048:	889b      	ldrh	r3, [r3, #4]
2000004a:	b29b      	uxth	r3, r3
2000004c:	b2da      	uxtb	r2, r3
2000004e:	4b11      	ldr	r3, [pc, #68]	; (20000094 <usart_irq_routine+0x60>)
20000050:	701a      	strb	r2, [r3, #0]
    }
	if( ( ( USART1->cr1 & TXEIE) !=0 ) && ( ( USART1->sr & BIT_TXE) !=0 ) ){
20000052:	4b0f      	ldr	r3, [pc, #60]	; (20000090 <usart_irq_routine+0x5c>)
20000054:	899b      	ldrh	r3, [r3, #12]
20000056:	b29b      	uxth	r3, r3
20000058:	001a      	movs	r2, r3
2000005a:	2380      	movs	r3, #128	; 0x80
2000005c:	4013      	ands	r3, r2
2000005e:	d013      	beq.n	20000088 <usart_irq_routine+0x54>
20000060:	4b0b      	ldr	r3, [pc, #44]	; (20000090 <usart_irq_routine+0x5c>)
20000062:	881b      	ldrh	r3, [r3, #0]
20000064:	b29b      	uxth	r3, r3
20000066:	001a      	movs	r2, r3
20000068:	2380      	movs	r3, #128	; 0x80
2000006a:	4013      	ands	r3, r2
2000006c:	d00c      	beq.n	20000088 <usart_irq_routine+0x54>
		USART1->dr = (unsigned short) outbuf;
2000006e:	4b0a      	ldr	r3, [pc, #40]	; (20000098 <usart_irq_routine+0x64>)
20000070:	781a      	ldrb	r2, [r3, #0]
20000072:	4b07      	ldr	r3, [pc, #28]	; (20000090 <usart_irq_routine+0x5c>)
20000074:	b292      	uxth	r2, r2
20000076:	809a      	strh	r2, [r3, #4]
		USART1->cr1 &= ~TXEIE;	/* Deaktivera avbrott för TXE */
20000078:	4b05      	ldr	r3, [pc, #20]	; (20000090 <usart_irq_routine+0x5c>)
2000007a:	899b      	ldrh	r3, [r3, #12]
2000007c:	b29b      	uxth	r3, r3
2000007e:	4a04      	ldr	r2, [pc, #16]	; (20000090 <usart_irq_routine+0x5c>)
20000080:	2180      	movs	r1, #128	; 0x80
20000082:	438b      	bics	r3, r1
20000084:	b29b      	uxth	r3, r3
20000086:	8193      	strh	r3, [r2, #12]
	}
}
20000088:	46c0      	nop			; (mov r8, r8)
2000008a:	46bd      	mov	sp, r7
2000008c:	bd80      	pop	{r7, pc}
2000008e:	46c0      	nop			; (mov r8, r8)
20000090:	40011000 	andmi	r1, r1, r0
20000094:	20000150 	andcs	r0, r0, r0, asr r1
20000098:	20000151 	andcs	r0, r0, r1, asr r1

2000009c <usart_init>:

char usart_init(void){
2000009c:	b580      	push	{r7, lr}
2000009e:	af00      	add	r7, sp, #0
    inbuf = 0;
200000a0:	4b0d      	ldr	r3, [pc, #52]	; (200000d8 <usart_init+0x3c>)
200000a2:	2200      	movs	r2, #0
200000a4:	701a      	strb	r2, [r3, #0]
    *USART1_IRQVEC = usart_irq_routine;
200000a6:	4b0d      	ldr	r3, [pc, #52]	; (200000dc <usart_init+0x40>)
200000a8:	4a0d      	ldr	r2, [pc, #52]	; (200000e0 <usart_init+0x44>)
200000aa:	601a      	str	r2, [r3, #0]
    *NVIC_USART1_ISER |= NVIC_USART1_IRQ_BPOS;
200000ac:	4b0d      	ldr	r3, [pc, #52]	; (200000e4 <usart_init+0x48>)
200000ae:	681a      	ldr	r2, [r3, #0]
200000b0:	4b0c      	ldr	r3, [pc, #48]	; (200000e4 <usart_init+0x48>)
200000b2:	2120      	movs	r1, #32
200000b4:	430a      	orrs	r2, r1
200000b6:	601a      	str	r2, [r3, #0]
    USART1->brr = 0x2D9;
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <usart_init+0x4c>)
200000ba:	4a0c      	ldr	r2, [pc, #48]	; (200000ec <usart_init+0x50>)
200000bc:	811a      	strh	r2, [r3, #8]
    USART1->cr3 = 0;
200000be:	4b0a      	ldr	r3, [pc, #40]	; (200000e8 <usart_init+0x4c>)
200000c0:	2200      	movs	r2, #0
200000c2:	829a      	strh	r2, [r3, #20]
    USART1->cr2 = 0;
200000c4:	4b08      	ldr	r3, [pc, #32]	; (200000e8 <usart_init+0x4c>)
200000c6:	2200      	movs	r2, #0
200000c8:	821a      	strh	r2, [r3, #16]
    USART1->cr1 = BIT_EN | BIT_RXNEIE | BIT_TE | BIT_RE;
200000ca:	4b07      	ldr	r3, [pc, #28]	; (200000e8 <usart_init+0x4c>)
200000cc:	4a08      	ldr	r2, [pc, #32]	; (200000f0 <usart_init+0x54>)
200000ce:	819a      	strh	r2, [r3, #12]

}
200000d0:	46c0      	nop			; (mov r8, r8)
200000d2:	0018      	movs	r0, r3
200000d4:	46bd      	mov	sp, r7
200000d6:	bd80      	pop	{r7, pc}
200000d8:	20000150 	andcs	r0, r0, r0, asr r1
200000dc:	2001c0d4 	ldrdcs	ip, [r1], -r4
200000e0:	20000035 	andcs	r0, r0, r5, lsr r0
200000e4:	e000e104 	and	lr, r0, r4, lsl #2
200000e8:	40011000 	andmi	r1, r1, r0
200000ec:	000002d9 	ldrdeq	r0, [r0], -r9
200000f0:	0000202c 	andeq	r2, r0, ip, lsr #32

200000f4 <usart_outchar>:

void usart_outchar( char c ){
200000f4:	b580      	push	{r7, lr}
200000f6:	b082      	sub	sp, #8
200000f8:	af00      	add	r7, sp, #0
200000fa:	0002      	movs	r2, r0
200000fc:	1dfb      	adds	r3, r7, #7
200000fe:	701a      	strb	r2, [r3, #0]
	outbuf = c;
20000100:	4b07      	ldr	r3, [pc, #28]	; (20000120 <usart_outchar+0x2c>)
20000102:	1dfa      	adds	r2, r7, #7
20000104:	7812      	ldrb	r2, [r2, #0]
20000106:	701a      	strb	r2, [r3, #0]
	USART1->cr1 |= TXEIE;       /* aktivera avbrott för TXE */
20000108:	4b06      	ldr	r3, [pc, #24]	; (20000124 <usart_outchar+0x30>)
2000010a:	899b      	ldrh	r3, [r3, #12]
2000010c:	b29b      	uxth	r3, r3
2000010e:	4a05      	ldr	r2, [pc, #20]	; (20000124 <usart_outchar+0x30>)
20000110:	2180      	movs	r1, #128	; 0x80
20000112:	430b      	orrs	r3, r1
20000114:	b29b      	uxth	r3, r3
20000116:	8193      	strh	r3, [r2, #12]
}
20000118:	46c0      	nop			; (mov r8, r8)
2000011a:	46bd      	mov	sp, r7
2000011c:	b002      	add	sp, #8
2000011e:	bd80      	pop	{r7, pc}
20000120:	20000151 	andcs	r0, r0, r1, asr r1
20000124:	40011000 	andmi	r1, r1, r0

20000128 <main>:

void main(void)
{
20000128:	b590      	push	{r4, r7, lr}
2000012a:	b083      	sub	sp, #12
2000012c:	af00      	add	r7, sp, #0
    /*enkel "eko"-funktion*/
    char c;
    usart_init();
2000012e:	f7ff ffb5 	bl	2000009c <usart_init>
    while (1){
        c = usart_tstchar();
20000132:	1dfc      	adds	r4, r7, #7
20000134:	f7ff ff6c 	bl	20000010 <usart_tstchar>
20000138:	0003      	movs	r3, r0
2000013a:	7023      	strb	r3, [r4, #0]
        if ( c ){
2000013c:	1dfb      	adds	r3, r7, #7
2000013e:	781b      	ldrb	r3, [r3, #0]
20000140:	2b00      	cmp	r3, #0
20000142:	d0f6      	beq.n	20000132 <main+0xa>
            usart_outchar(c);
20000144:	1dfb      	adds	r3, r7, #7
20000146:	781b      	ldrb	r3, [r3, #0]
20000148:	0018      	movs	r0, r3
2000014a:	f7ff ffd3 	bl	200000f4 <usart_outchar>
        c = usart_tstchar();
2000014e:	e7f0      	b.n	20000132 <main+0xa>

20000150 <inbuf>:
	...

20000151 <outbuf>:
20000151:	0000      	movs	r0, r0
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000001c0 	andeq	r0, r0, r0, asr #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000004a 	andeq	r0, r0, sl, asr #32
  10:	00000e0c 	andeq	r0, r0, ip, lsl #28
  14:	00012b00 	andeq	r2, r1, r0, lsl #22
	...
  24:	011a0200 	tsteq	sl, r0, lsl #4
  28:	00d60921 	sbcseq	r0, r6, r1, lsr #18
  2c:	73030000 	movwvc	r0, #12288	; 0x3000
  30:	23010072 	movwcs	r0, #4210	; 0x1072
  34:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  38:	f0040000 			; <UNDEFINED> instruction: 0xf0040000
  3c:	01000000 	mrseq	r0, (UNDEF: 0)
  40:	00dd1d24 	sbcseq	r1, sp, r4, lsr #26
  44:	03020000 	movweq	r0, #8192	; 0x2000
  48:	01007264 	tsteq	r0, r4, ror #4
  4c:	00dd1d25 	sbcseq	r1, sp, r5, lsr #26
  50:	04040000 	streq	r0, [r4], #-0
  54:	000000f8 	strdeq	r0, [r0], -r8
  58:	dd1d2601 	ldcle	6, cr2, [sp, #-4]
  5c:	06000000 	streq	r0, [r0], -r0
  60:	72726203 	rsbsvc	r6, r2, #805306368	; 0x30000000
  64:	1d270100 	stfnes	f0, [r7, #-0]
  68:	000000dd 	ldrdeq	r0, [r0], -sp
  6c:	01000408 	tsteq	r0, r8, lsl #8
  70:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
  74:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  78:	63030a00 	movwvs	r0, #14848	; 0x3a00
  7c:	01003172 	tsteq	r0, r2, ror r1
  80:	00dd1d29 	sbcseq	r1, sp, r9, lsr #26
  84:	040c0000 	streq	r0, [ip], #-0
  88:	00000108 	andeq	r0, r0, r8, lsl #2
  8c:	dd1d2a01 	vldrle	s4, [sp, #-4]
  90:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  94:	32726303 	rsbscc	r6, r2, #201326592	; 0xc000000
  98:	1d2b0100 	stfnes	f0, [fp, #-0]
  9c:	000000dd 	ldrdeq	r0, [r0], -sp
  a0:	01100410 	tsteq	r0, r0, lsl r4
  a4:	2c010000 	stccs	0, cr0, [r1], {-0}
  a8:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  ac:	63031200 	movwvs	r1, #12800	; 0x3200
  b0:	01003372 	tsteq	r0, r2, ror r3
  b4:	00dd1d2d 	sbcseq	r1, sp, sp, lsr #26
  b8:	04140000 	ldreq	r0, [r4], #-0
  bc:	000000c6 	andeq	r0, r0, r6, asr #1
  c0:	dd1d2e01 	ldcle	14, cr2, [sp, #-4]
  c4:	16000000 	strne	r0, [r0], -r0
  c8:	0000d904 	andeq	sp, r0, r4, lsl #18
  cc:	1d2f0100 	stfnes	f0, [pc, #-0]	; d4 <startup-0x1fffff2c>
  d0:	000000dd 	ldrdeq	r0, [r0], -sp
  d4:	02050018 	andeq	r0, r5, #24
  d8:	00011807 	andeq	r1, r1, r7, lsl #16
  dc:	00d60600 	sbcseq	r0, r6, r0, lsl #12
  e0:	58070000 	stmdapl	r7, {}	; <UNPREDICTABLE>
  e4:	01000001 	tsteq	r0, r1
  e8:	00250331 	eoreq	r0, r5, r1, lsr r3
  ec:	44080000 	strmi	r0, [r8], #-0
  f0:	01000000 	mrseq	r0, (UNDEF: 0)
  f4:	01000634 	tsteq	r0, r4, lsr r6
  f8:	03050000 	movweq	r0, #20480	; 0x5000
  fc:	20000150 	andcs	r0, r0, r0, asr r1
 100:	09080105 	stmdbeq	r8, {r0, r2, r8}
 104:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 108:	00000151 	andeq	r0, r0, r1, asr r1
 10c:	00063501 	andeq	r3, r6, r1, lsl #10
 110:	05000001 	streq	r0, [r0, #-1]
 114:	00015103 	andeq	r5, r1, r3, lsl #2
 118:	00370920 	eorseq	r0, r7, r0, lsr #18
 11c:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
 120:	00012806 	andeq	r2, r1, r6, lsl #16
 124:	00002820 	andeq	r2, r0, r0, lsr #16
 128:	3d9c0100 	ldfccs	f0, [ip]
 12c:	0a000001 	beq	138 <startup-0x1ffffec8>
 130:	5b010063 	blpl	402c4 <startup-0x1ffbfd3c>
 134:	0001000a 	andeq	r0, r1, sl
 138:	6f910200 	svcvs	0x00910200
 13c:	01430b00 	cmpeq	r3, r0, lsl #22
 140:	53010000 	movwpl	r0, #4096	; 0x1000
 144:	0000f406 	andeq	pc, r0, r6, lsl #8
 148:	00003420 	andeq	r3, r0, r0, lsr #8
 14c:	619c0100 	orrsvs	r0, ip, r0, lsl #2
 150:	0c000001 	stceq	0, cr0, [r0], {1}
 154:	53010063 	movwpl	r0, #4195	; 0x1063
 158:	0001001a 	andeq	r0, r1, sl, lsl r0
 15c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 160:	00ce0d00 	sbceq	r0, lr, r0, lsl #26
 164:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
 168:	00010006 	andeq	r0, r1, r6
 16c:	00009c00 	andeq	r9, r0, r0, lsl #24
 170:	00005820 	andeq	r5, r0, r0, lsr #16
 174:	0e9c0100 	fmleqe	f0, f4, f0
 178:	000000de 	ldrdeq	r0, [r0], -lr
 17c:	34063e01 	strcc	r3, [r6], #-3585	; 0xfffff1ff
 180:	68200000 	stmdavs	r0!, {}	; <UNPREDICTABLE>
 184:	01000000 	mrseq	r0, (UNDEF: 0)
 188:	00000f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
 18c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
 190:	00010006 	andeq	r0, r1, r6
 194:	00001000 	andeq	r1, r0, r0
 198:	00002420 	andeq	r2, r0, r0, lsr #8
 19c:	b19c0100 	orrslt	r0, ip, r0, lsl #2
 1a0:	0a000001 	beq	1ac <startup-0x1ffffe54>
 1a4:	39010063 	stmdbcc	r1, {r0, r1, r5, r6}
 1a8:	0001000a 	andeq	r0, r1, sl
 1ac:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 1b0:	003c0e00 	eorseq	r0, ip, r0, lsl #28
 1b4:	06010000 	streq	r0, [r1], -r0
 1b8:	00000006 	andeq	r0, r0, r6
 1bc:	00000c20 	andeq	r0, r0, r0, lsr #24
 1c0:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0113 	bleq	2c0468 <startup-0x1fd3fb98>
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13010b39 	movwne	r0, #6969	; 0x1b39
  20:	0d030000 	stceq	0, cr0, [r3, #-0]
  24:	3a080300 	bcc	200c2c <startup-0x1fdff3d4>
  28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  2c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  30:	0400000b 	streq	r0, [r0], #-11
  34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  38:	0b3b0b3a 	bleq	ec2d28 <startup-0x1f13d2d8>
  3c:	13490b39 	movtne	r0, #39737	; 0x9b39
  40:	00000b38 	andeq	r0, r0, r8, lsr fp
  44:	0b002405 	bleq	9060 <startup-0x1fff6fa0>
  48:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  4c:	0600000e 	streq	r0, [r0], -lr
  50:	13490035 	movtne	r0, #36917	; 0x9035
  54:	16070000 	strne	r0, [r7], -r0
  58:	3a0e0300 	bcc	380c60 <startup-0x1fc7f3a0>
  5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  60:	0013490b 	andseq	r4, r3, fp, lsl #18
  64:	00340800 	eorseq	r0, r4, r0, lsl #16
  68:	0b3a0e03 	bleq	e8387c <startup-0x1f17c784>
  6c:	0b390b3b 	bleq	e42d60 <startup-0x1f1bd2a0>
  70:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  74:	00001802 	andeq	r1, r0, r2, lsl #16
  78:	3f012e09 	svccc	0x00012e09
  7c:	3a0e0319 	bcc	380ce8 <startup-0x1fc7f318>
  80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  84:	1119270b 	tstne	r9, fp, lsl #14
  88:	40061201 	andmi	r1, r6, r1, lsl #4
  8c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  90:	00001301 	andeq	r1, r0, r1, lsl #6
  94:	0300340a 	movweq	r3, #1034	; 0x40a
  98:	3b0b3a08 	blcc	2ce8c0 <startup-0x1fd31740>
  9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  a0:	00180213 	andseq	r0, r8, r3, lsl r2
  a4:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
  a8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  ac:	0b3b0b3a 	bleq	ec2d9c <startup-0x1f13d264>
  b0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  b4:	06120111 			; <UNDEFINED> instruction: 0x06120111
  b8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  bc:	00130119 	andseq	r0, r3, r9, lsl r1
  c0:	00050c00 	andeq	r0, r5, r0, lsl #24
  c4:	0b3a0803 	bleq	e820d8 <startup-0x1f17df28>
  c8:	0b390b3b 	bleq	e42dbc <startup-0x1f1bd244>
  cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  d0:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
  d4:	03193f00 	tsteq	r9, #0, 30
  d8:	3b0b3a0e 	blcc	2ce918 <startup-0x1fd316e8>
  dc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  e0:	11134919 	tstne	r3, r9, lsl r9
  e4:	40061201 	andmi	r1, r6, r1, lsl #4
  e8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  ec:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
  f0:	03193f00 	tsteq	r9, #0, 30
  f4:	3b0b3a0e 	blcc	2ce934 <startup-0x1fd316cc>
  f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 100:	97184006 	ldrls	r4, [r8, -r6]
 104:	00001942 	andeq	r1, r0, r2, asr #18
 108:	3f012e0f 	svccc	0x00012e0f
 10c:	3a0e0319 	bcc	380d78 <startup-0x1fc7f288>
 110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 114:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 118:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 11c:	97184006 	ldrls	r4, [r8, -r6]
 120:	13011942 	movwne	r1, #6466	; 0x1942
 124:	Address 0x00000124 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000140 	andeq	r0, r0, r0, asr #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000150 	andcs	r0, r0, r0, asr r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000102 	andeq	r0, r0, r2, lsl #2
   4:	003f0003 	eorseq	r0, pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	372f7265 	strcc	r7, [pc, -r5, ror #4]!
  30:	0000332d 	andeq	r3, r0, sp, lsr #6
  34:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
  38:	78725f74 	ldmdavc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
  3c:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
  40:	632e7172 			; <UNDEFINED> instruction: 0x632e7172
  44:	00000100 	andeq	r0, r0, r0, lsl #2
  48:	00010500 	andeq	r0, r1, r0, lsl #10
  4c:	00000205 	andeq	r0, r0, r5, lsl #4
  50:	13182000 	tstne	r8, #0
  54:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
  58:	01000302 	tsteq	r0, r2, lsl #6
  5c:	00190501 	andseq	r0, r9, r1, lsl #10
  60:	00100205 	andseq	r0, r0, r5, lsl #4
  64:	37032000 	strcc	r2, [r3, -r0]
  68:	3d0a0501 	cfstr32cc	mvfx0, [sl, #-4]
  6c:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
  70:	01053d0c 	tsteq	r5, ip, lsl #26
  74:	681d052f 	ldmdavs	sp, {r0, r1, r2, r3, r5, r8, sl}
  78:	052f0f05 	streq	r0, [pc, #-3845]!	; fffff17b <outbuf+0xdffff02a>
  7c:	07053c14 	smladeq	r5, r4, ip, r3
  80:	211e053c 	tstcs	lr, ip, lsr r5
  84:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
  88:	1005200f 	andne	r2, r5, pc
  8c:	3c160530 	cfldr32cc	mvfx0, [r6], {48}	; 0x30
  90:	053c0405 	ldreq	r0, [ip, #-1029]!	; 0xfffffbfb
  94:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
  98:	37052001 	strcc	r2, [r5, -r1]
  9c:	01040200 	mrseq	r0, R12_usr
  a0:	0025053c 	eoreq	r0, r5, ip, lsr r5
  a4:	3c010402 	cfstrscc	mvf0, [r1], {2}
  a8:	05211005 	streq	r1, [r1, #-5]!
  ac:	10052e09 	andne	r2, r5, r9, lsl #28
  b0:	200e0520 	andcs	r0, lr, r0, lsr #10
  b4:	05210f05 	streq	r0, [r1, #-3845]!	; 0xfffff0fb
  b8:	16058401 	strne	r8, [r5], -r1, lsl #8
  bc:	2f0b05a0 	svccs	0x000b05a0
  c0:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
  c4:	17052014 	smladne	r5, r4, r0, r2
  c8:	670b052f 	strvs	r0, [fp, -pc, lsr #10]
  cc:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  d0:	11052f0b 	tstne	r5, fp, lsl #30
  d4:	2f0b0520 	svccs	0x000b0520
  d8:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  dc:	11052f0b 	tstne	r5, fp, lsl #30
  e0:	30010520 	andcc	r0, r1, r0, lsr #10
  e4:	22081d05 	andcs	r1, r8, #320	; 0x140
  e8:	05670905 	strbeq	r0, [r7, #-2309]!	; 0xfffff6fb
  ec:	01054b0e 	tsteq	r5, lr, lsl #22
  f0:	05058583 	streq	r8, [r5, #-1411]	; 0xfffffa7d
  f4:	300d053f 	andcc	r0, sp, pc, lsr r5
  f8:	05590c05 	ldrbeq	r0, [r9, #-3077]	; 0xfffff3fb
  fc:	0b054b0d 	bleq	152d38 <startup-0x1fead2c8>
 100:	00010256 	andeq	r0, r1, r6, asr r2
 104:	Address 0x00000104 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
   4:	73745f74 	cmnvc	r4, #116, 30	; 0x1d0
   8:	61686374 	smcvs	34356	; 0x8634
   c:	3a440072 	bcc	11001dc <startup-0x1eeffe24>
  10:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  14:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
  18:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  1c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  20:	2d372f72 	ldccs	15, cr2, [r7, #-456]!	; 0xfffffe38
  24:	73752f33 	cmnvc	r5, #51, 30	; 0xcc
  28:	5f747261 	svcpl	0x00747261
  2c:	78747872 	ldmdavc	r4!, {r1, r4, r5, r6, fp, ip, sp, lr}^
  30:	7172695f 	cmnvc	r2, pc, asr r9
  34:	6d00632e 	stcvs	3, cr6, [r0, #-184]	; 0xffffff48
  38:	006e6961 	rsbeq	r6, lr, r1, ror #18
  3c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  40:	00707574 	rsbseq	r7, r0, r4, ror r5
  44:	75626e69 	strbvc	r6, [r2, #-3689]!	; 0xfffff197
  48:	4e470066 	cdpmi	0, 4, cr0, cr7, cr6, {3}
  4c:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  50:	2e392039 	mrccs	0, 1, r2, cr9, cr9, {1}
  54:	20312e32 	eorscs	r2, r1, r2, lsr lr
  58:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  5c:	35323031 	ldrcc	r3, [r2, #-49]!	; 0xffffffcf
  60:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  64:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  68:	5b202965 	blpl	80a604 <startup-0x1f7f59fc>
  6c:	2f4d5241 	svccs	0x004d5241
  70:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  74:	72622d39 	rsbvc	r2, r2, #3648	; 0xe40
  78:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  7c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  80:	6f697369 	svcvs	0x00697369
  84:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  88:	39393537 	ldmdbcc	r9!, {r0, r1, r2, r4, r5, r8, sl, ip, sp}
  8c:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  90:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  94:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  98:	616f6c66 	cmnvs	pc, r6, ror #24
  9c:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  a0:	6f733d69 	svcvs	0x00733d69
  a4:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  a8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  ac:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  b0:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  b4:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  b8:	304f2d20 	subcc	r2, pc, r0, lsr #26
  bc:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
  c0:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
  c4:	6e550039 	mrcvs	0, 2, r0, cr5, cr9, {1}
  c8:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
  cc:	73750035 	cmnvc	r5, #53	; 0x35
  d0:	5f747261 	svcpl	0x00747261
  d4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
  d8:	70746700 	rsbsvc	r6, r4, r0, lsl #14
  dc:	73750072 	cmnvc	r5, #114	; 0x72
  e0:	5f747261 	svcpl	0x00747261
  e4:	5f717269 	svcpl	0x00717269
  e8:	74756f72 	ldrbtvc	r6, [r5], #-3954	; 0xfffff08e
  ec:	00656e69 	rsbeq	r6, r5, r9, ror #28
  f0:	73756e55 	cmnvc	r5, #1360	; 0x550
  f4:	00306465 	eorseq	r6, r0, r5, ror #8
  f8:	73756e55 	cmnvc	r5, #1360	; 0x550
  fc:	00316465 	eorseq	r6, r1, r5, ror #8
 100:	73756e55 	cmnvc	r5, #1360	; 0x550
 104:	00326465 	eorseq	r6, r2, r5, ror #8
 108:	73756e55 	cmnvc	r5, #1360	; 0x550
 10c:	00336465 	eorseq	r6, r3, r5, ror #8
 110:	73756e55 	cmnvc	r5, #1360	; 0x550
 114:	00346465 	eorseq	r6, r4, r5, ror #8
 118:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 11c:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
 120:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 124:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 128:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
 12c:	6f6d5c3a 	svcvs	0x006d5c3a
 130:	616c5c70 	smcvs	50624	; 0xc5c0
 134:	61726f62 	cmnvs	r2, r2, ror #30
 138:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 13c:	375c7265 	ldrbcc	r7, [ip, -r5, ror #4]
 140:	7500332d 	strvc	r3, [r0, #-813]	; 0xfffffcd3
 144:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
 148:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
 14c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 150:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 154:	00667562 	rsbeq	r7, r6, r2, ror #10
 158:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
 15c:	Address 0x0000015c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  3c:	00000007 	andeq	r0, r0, r7
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000034 	andcs	r0, r0, r4, lsr r0
  4c:	00000068 	andeq	r0, r0, r8, rrx
  50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  54:	41018e02 	tstmi	r1, r2, lsl #28
  58:	0000070d 	andeq	r0, r0, sp, lsl #14
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	2000009c 	mulcs	r0, ip, r0
  68:	00000058 	andeq	r0, r0, r8, asr r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0000070d 	andeq	r0, r0, sp, lsl #14
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	200000f4 	strdcs	r0, [r0], -r4
  84:	00000034 	andeq	r0, r0, r4, lsr r0
  88:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  8c:	41018e02 	tstmi	r1, r2, lsl #28
  90:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  94:	00000007 	andeq	r0, r0, r7
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	20000128 	andcs	r0, r0, r8, lsr #2
  a4:	00000028 	andeq	r0, r0, r8, lsr #32
  a8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  ac:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  b0:	180e4101 	stmdane	lr, {r0, r8, lr}
  b4:	00070d41 	andeq	r0, r7, r1, asr #26
