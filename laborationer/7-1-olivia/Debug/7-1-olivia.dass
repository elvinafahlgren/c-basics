
Debug/7-1-olivia:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f872 	bl	200000ec <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <usart_tstchar>:

#define USART1 ((USART*) 0x40011000)
char inbuf;


char usart_tstchar(void){
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
    char c = inbuf;
20000016:	1dfb      	adds	r3, r7, #7
20000018:	4a05      	ldr	r2, [pc, #20]	; (20000030 <usart_tstchar+0x20>)
2000001a:	7812      	ldrb	r2, [r2, #0]
2000001c:	701a      	strb	r2, [r3, #0]
    inbuf = 0;
2000001e:	4b04      	ldr	r3, [pc, #16]	; (20000030 <usart_tstchar+0x20>)
20000020:	2200      	movs	r2, #0
20000022:	701a      	strb	r2, [r3, #0]
    return c;
20000024:	1dfb      	adds	r3, r7, #7
20000026:	781b      	ldrb	r3, [r3, #0]
}
20000028:	0018      	movs	r0, r3
2000002a:	46bd      	mov	sp, r7
2000002c:	b002      	add	sp, #8
2000002e:	bd80      	pop	{r7, pc}
20000030:	20000114 	andcs	r0, r0, r4, lsl r1

20000034 <usart_irq_routine>:

void usart_irq_routine(void){
20000034:	b580      	push	{r7, lr}
20000036:	af00      	add	r7, sp, #0
    if( USART1->sr & BIT_RXNE ){
20000038:	4b07      	ldr	r3, [pc, #28]	; (20000058 <usart_irq_routine+0x24>)
2000003a:	881b      	ldrh	r3, [r3, #0]
2000003c:	b29b      	uxth	r3, r3
2000003e:	001a      	movs	r2, r3
20000040:	2320      	movs	r3, #32
20000042:	4013      	ands	r3, r2
20000044:	d005      	beq.n	20000052 <usart_irq_routine+0x1e>
        inbuf = (char) USART1->dr;
20000046:	4b04      	ldr	r3, [pc, #16]	; (20000058 <usart_irq_routine+0x24>)
20000048:	889b      	ldrh	r3, [r3, #4]
2000004a:	b29b      	uxth	r3, r3
2000004c:	b2da      	uxtb	r2, r3
2000004e:	4b03      	ldr	r3, [pc, #12]	; (2000005c <usart_irq_routine+0x28>)
20000050:	701a      	strb	r2, [r3, #0]
    }
}
20000052:	46c0      	nop			; (mov r8, r8)
20000054:	46bd      	mov	sp, r7
20000056:	bd80      	pop	{r7, pc}
20000058:	40011000 	andmi	r1, r1, r0
2000005c:	20000114 	andcs	r0, r0, r4, lsl r1

20000060 <usart_init>:

char usart_init(void){
20000060:	b580      	push	{r7, lr}
20000062:	af00      	add	r7, sp, #0
    inbuf = 0;
20000064:	4b0d      	ldr	r3, [pc, #52]	; (2000009c <usart_init+0x3c>)
20000066:	2200      	movs	r2, #0
20000068:	701a      	strb	r2, [r3, #0]
    *USART1_IRQVEC = usart_irq_routine;
2000006a:	4b0d      	ldr	r3, [pc, #52]	; (200000a0 <usart_init+0x40>)
2000006c:	4a0d      	ldr	r2, [pc, #52]	; (200000a4 <usart_init+0x44>)
2000006e:	601a      	str	r2, [r3, #0]
    *NVIC_USART1_ISER |= NVIC_USART1_IRQ_BPOS;
20000070:	4b0d      	ldr	r3, [pc, #52]	; (200000a8 <usart_init+0x48>)
20000072:	681a      	ldr	r2, [r3, #0]
20000074:	4b0c      	ldr	r3, [pc, #48]	; (200000a8 <usart_init+0x48>)
20000076:	2120      	movs	r1, #32
20000078:	430a      	orrs	r2, r1
2000007a:	601a      	str	r2, [r3, #0]
    USART1->brr = 0x2D9;
2000007c:	4b0b      	ldr	r3, [pc, #44]	; (200000ac <usart_init+0x4c>)
2000007e:	4a0c      	ldr	r2, [pc, #48]	; (200000b0 <usart_init+0x50>)
20000080:	811a      	strh	r2, [r3, #8]
    USART1->cr3 = 0;
20000082:	4b0a      	ldr	r3, [pc, #40]	; (200000ac <usart_init+0x4c>)
20000084:	2200      	movs	r2, #0
20000086:	829a      	strh	r2, [r3, #20]
    USART1->cr2 = 0;
20000088:	4b08      	ldr	r3, [pc, #32]	; (200000ac <usart_init+0x4c>)
2000008a:	2200      	movs	r2, #0
2000008c:	821a      	strh	r2, [r3, #16]
    USART1->cr1 = BIT_EN | BIT_RXNEIE | BIT_TE | BIT_RE;
2000008e:	4b07      	ldr	r3, [pc, #28]	; (200000ac <usart_init+0x4c>)
20000090:	4a08      	ldr	r2, [pc, #32]	; (200000b4 <usart_init+0x54>)
20000092:	819a      	strh	r2, [r3, #12]

}
20000094:	46c0      	nop			; (mov r8, r8)
20000096:	0018      	movs	r0, r3
20000098:	46bd      	mov	sp, r7
2000009a:	bd80      	pop	{r7, pc}
2000009c:	20000114 	andcs	r0, r0, r4, lsl r1
200000a0:	2001c0d4 	ldrdcs	ip, [r1], -r4
200000a4:	20000035 	andcs	r0, r0, r5, lsr r0
200000a8:	e000e104 	and	lr, r0, r4, lsl #2
200000ac:	40011000 	andmi	r1, r1, r0
200000b0:	000002d9 	ldrdeq	r0, [r0], -r9
200000b4:	0000202c 	andeq	r2, r0, ip, lsr #32

200000b8 <_outchar>:

void _outchar(char c){
200000b8:	b580      	push	{r7, lr}
200000ba:	b082      	sub	sp, #8
200000bc:	af00      	add	r7, sp, #0
200000be:	0002      	movs	r2, r0
200000c0:	1dfb      	adds	r3, r7, #7
200000c2:	701a      	strb	r2, [r3, #0]
    while ( (USART1->sr & BIT_TXE) == 0 );
200000c4:	46c0      	nop			; (mov r8, r8)
200000c6:	4b08      	ldr	r3, [pc, #32]	; (200000e8 <_outchar+0x30>)
200000c8:	881b      	ldrh	r3, [r3, #0]
200000ca:	b29b      	uxth	r3, r3
200000cc:	001a      	movs	r2, r3
200000ce:	2380      	movs	r3, #128	; 0x80
200000d0:	4013      	ands	r3, r2
200000d2:	d0f8      	beq.n	200000c6 <_outchar+0xe>
    USART1->dr = (unsigned short) c;
200000d4:	4a04      	ldr	r2, [pc, #16]	; (200000e8 <_outchar+0x30>)
200000d6:	1dfb      	adds	r3, r7, #7
200000d8:	781b      	ldrb	r3, [r3, #0]
200000da:	b29b      	uxth	r3, r3
200000dc:	8093      	strh	r3, [r2, #4]
}
200000de:	46c0      	nop			; (mov r8, r8)
200000e0:	46bd      	mov	sp, r7
200000e2:	b002      	add	sp, #8
200000e4:	bd80      	pop	{r7, pc}
200000e6:	46c0      	nop			; (mov r8, r8)
200000e8:	40011000 	andmi	r1, r1, r0

200000ec <main>:

void main(void)
{
200000ec:	b590      	push	{r4, r7, lr}
200000ee:	b083      	sub	sp, #12
200000f0:	af00      	add	r7, sp, #0
    /*enkel "eko"-funktion*/
    char c;
    usart_init();
200000f2:	f7ff ffb5 	bl	20000060 <usart_init>
    while (1){
        c = usart_tstchar();
200000f6:	1dfc      	adds	r4, r7, #7
200000f8:	f7ff ff8a 	bl	20000010 <usart_tstchar>
200000fc:	0003      	movs	r3, r0
200000fe:	7023      	strb	r3, [r4, #0]
        if ( c ){
20000100:	1dfb      	adds	r3, r7, #7
20000102:	781b      	ldrb	r3, [r3, #0]
20000104:	2b00      	cmp	r3, #0
20000106:	d0f6      	beq.n	200000f6 <main+0xa>
            _outchar(c);
20000108:	1dfb      	adds	r3, r7, #7
2000010a:	781b      	ldrb	r3, [r3, #0]
2000010c:	0018      	movs	r0, r3
2000010e:	f7ff ffd3 	bl	200000b8 <_outchar>
        c = usart_tstchar();
20000112:	e7f0      	b.n	200000f6 <main+0xa>

20000114 <inbuf>:
20000114:	0000      	movs	r0, r0
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000001ae 	andeq	r0, r0, lr, lsr #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	00012a0c 	andeq	r2, r1, ip, lsl #20
  14:	0000d000 	andeq	sp, r0, r0
	...
  24:	011a0200 	tsteq	sl, r0, lsl #4
  28:	00d6091c 	sbcseq	r0, r6, ip, lsl r9
  2c:	73030000 	movwvc	r0, #12288	; 0x3000
  30:	1e010072 	mcrne	0, 0, r0, cr1, cr2, {3}
  34:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  38:	ef040000 	svc	0x00040000
  3c:	01000000 	mrseq	r0, (UNDEF: 0)
  40:	00dd1d1f 	sbcseq	r1, sp, pc, lsl sp
  44:	03020000 	movweq	r0, #8192	; 0x2000
  48:	01007264 	tsteq	r0, r4, ror #4
  4c:	00dd1d20 	sbcseq	r1, sp, r0, lsr #26
  50:	04040000 	streq	r0, [r4], #-0
  54:	000000f7 	strdeq	r0, [r0], -r7
  58:	dd1d2101 	ldfles	f2, [sp, #-4]
  5c:	06000000 	streq	r0, [r0], -r0
  60:	72726203 	rsbsvc	r6, r2, #805306368	; 0x30000000
  64:	1d220100 	stfnes	f0, [r2, #-0]
  68:	000000dd 	ldrdeq	r0, [r0], -sp
  6c:	00ff0408 	rscseq	r0, pc, r8, lsl #8
  70:	23010000 	movwcs	r0, #4096	; 0x1000
  74:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  78:	63030a00 	movwvs	r0, #14848	; 0x3a00
  7c:	01003172 	tsteq	r0, r2, ror r1
  80:	00dd1d24 	sbcseq	r1, sp, r4, lsr #26
  84:	040c0000 	streq	r0, [ip], #-0
  88:	00000107 	andeq	r0, r0, r7, lsl #2
  8c:	dd1d2501 	cfldr32le	mvfx2, [sp, #-4]
  90:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  94:	32726303 	rsbscc	r6, r2, #201326592	; 0xc000000
  98:	1d260100 	stfnes	f0, [r6, #-0]
  9c:	000000dd 	ldrdeq	r0, [r0], -sp
  a0:	010f0410 	tsteq	pc, r0, lsl r4	; <UNPREDICTABLE>
  a4:	27010000 	strcs	r0, [r1, -r0]
  a8:	0000dd1d 	andeq	sp, r0, sp, lsl sp
  ac:	63031200 	movwvs	r1, #12800	; 0x3200
  b0:	01003372 	tsteq	r0, r2, ror r3
  b4:	00dd1d28 	sbcseq	r1, sp, r8, lsr #26
  b8:	04140000 	ldreq	r0, [r4], #-0
  bc:	000000a6 	andeq	r0, r0, r6, lsr #1
  c0:	dd1d2901 	vldrle.16	s4, [sp, #-2]	; <UNPREDICTABLE>
  c4:	16000000 	strne	r0, [r0], -r0
  c8:	0000cb04 	andeq	ip, r0, r4, lsl #22
  cc:	1d2a0100 	stfnes	f0, [sl, #-0]
  d0:	000000dd 	ldrdeq	r0, [r0], -sp
  d4:	02050018 	andeq	r0, r5, #24
  d8:	00011707 	andeq	r1, r1, r7, lsl #14
  dc:	00d60600 	sbcseq	r0, r6, r0, lsl #12
  e0:	53070000 	movwpl	r0, #28672	; 0x7000
  e4:	01000001 	tsteq	r0, r1
  e8:	0025032c 	eoreq	r0, r5, ip, lsr #6
  ec:	24080000 	strcs	r0, [r8], #-0
  f0:	01000000 	mrseq	r0, (UNDEF: 0)
  f4:	0100062f 	tsteq	r0, pc, lsr #12
  f8:	03050000 	movweq	r0, #20480	; 0x5000
  fc:	20000114 	andcs	r0, r0, r4, lsl r1
 100:	09080105 	stmdbeq	r8, {r0, r2, r8}
 104:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 108:	00000017 	andeq	r0, r0, r7, lsl r0
 10c:	ec064e01 	stc	14, cr4, [r6], {1}
 110:	28200000 	stmdacs	r0!, {}	; <UNPREDICTABLE>
 114:	01000000 	mrseq	r0, (UNDEF: 0)
 118:	00012b9c 	muleq	r1, ip, fp
 11c:	00630a00 	rsbeq	r0, r3, r0, lsl #20
 120:	000a5101 	andeq	r5, sl, r1, lsl #2
 124:	02000001 	andeq	r0, r0, #1
 128:	0b006f91 	bleq	1bf74 <startup-0x1ffe408c>
 12c:	0000000e 	andeq	r0, r0, lr
 130:	b8064901 	stmdalt	r6, {r0, r8, fp, lr}
 134:	34200000 	strtcc	r0, [r0], #-0
 138:	01000000 	mrseq	r0, (UNDEF: 0)
 13c:	00014f9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
 140:	00630c00 	rsbeq	r0, r3, r0, lsl #24
 144:	00144901 	andseq	r4, r4, r1, lsl #18
 148:	02000001 	andeq	r0, r0, #1
 14c:	0d007791 	stceq	7, cr7, [r0, #-580]	; 0xfffffdbc
 150:	000000c0 	andeq	r0, r0, r0, asr #1
 154:	00063e01 	andeq	r3, r6, r1, lsl #28
 158:	60000001 	andvs	r0, r0, r1
 15c:	58200000 	stmdapl	r0!, {}	; <UNPREDICTABLE>
 160:	01000000 	mrseq	r0, (UNDEF: 0)
 164:	00ae0e9c 	umlaleq	r0, lr, ip, lr
 168:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
 16c:	00003406 	andeq	r3, r0, r6, lsl #8
 170:	00002c20 	andeq	r2, r0, r0, lsr #24
 174:	0f9c0100 	svceq	0x009c0100
 178:	00000000 	andeq	r0, r0, r0
 17c:	00063201 	andeq	r3, r6, r1, lsl #4
 180:	10000001 	andne	r0, r0, r1
 184:	24200000 	strtcs	r0, [r0], #-0
 188:	01000000 	mrseq	r0, (UNDEF: 0)
 18c:	00019f9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
 190:	00630a00 	rsbeq	r0, r3, r0, lsl #20
 194:	000a3301 	andeq	r3, sl, r1, lsl #6
 198:	02000001 	andeq	r0, r0, #1
 19c:	0e007791 	mcreq	7, 0, r7, cr0, cr1, {4}
 1a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a4:	00060701 	andeq	r0, r6, r1, lsl #14
 1a8:	0c200000 	stceq	0, cr0, [r0], #-0
 1ac:	01000000 	mrseq	r0, (UNDEF: 0)
 1b0:	Address 0x000001b0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0113 	bleq	2c0468 <startup-0x1fd3fb98>
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13010b39 	movwne	r0, #6969	; 0x1b39
  20:	0d030000 	stceq	0, cr0, [r3, #-0]
  24:	3a080300 	bcc	200c2c <startup-0x1fdff3d4>
  28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  2c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  30:	0400000b 	streq	r0, [r0], #-11
  34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  38:	0b3b0b3a 	bleq	ec2d28 <startup-0x1f13d2d8>
  3c:	13490b39 	movtne	r0, #39737	; 0x9b39
  40:	00000b38 	andeq	r0, r0, r8, lsr fp
  44:	0b002405 	bleq	9060 <startup-0x1fff6fa0>
  48:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  4c:	0600000e 	streq	r0, [r0], -lr
  50:	13490035 	movtne	r0, #36917	; 0x9035
  54:	16070000 	strne	r0, [r7], -r0
  58:	3a0e0300 	bcc	380c60 <startup-0x1fc7f3a0>
  5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  60:	0013490b 	andseq	r4, r3, fp, lsl #18
  64:	00340800 	eorseq	r0, r4, r0, lsl #16
  68:	0b3a0e03 	bleq	e8387c <startup-0x1f17c784>
  6c:	0b390b3b 	bleq	e42d60 <startup-0x1f1bd2a0>
  70:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  74:	00001802 	andeq	r1, r0, r2, lsl #16
  78:	3f012e09 	svccc	0x00012e09
  7c:	3a0e0319 	bcc	380ce8 <startup-0x1fc7f318>
  80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  84:	1119270b 	tstne	r9, fp, lsl #14
  88:	40061201 	andmi	r1, r6, r1, lsl #4
  8c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  90:	00001301 	andeq	r1, r0, r1, lsl #6
  94:	0300340a 	movweq	r3, #1034	; 0x40a
  98:	3b0b3a08 	blcc	2ce8c0 <startup-0x1fd31740>
  9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  a0:	00180213 	andseq	r0, r8, r3, lsl r2
  a4:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
  a8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  ac:	0b3b0b3a 	bleq	ec2d9c <startup-0x1f13d264>
  b0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  b4:	06120111 			; <UNDEFINED> instruction: 0x06120111
  b8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  bc:	00130119 	andseq	r0, r3, r9, lsl r1
  c0:	00050c00 	andeq	r0, r5, r0, lsl #24
  c4:	0b3a0803 	bleq	e820d8 <startup-0x1f17df28>
  c8:	0b390b3b 	bleq	e42dbc <startup-0x1f1bd244>
  cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  d0:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
  d4:	03193f00 	tsteq	r9, #0, 30
  d8:	3b0b3a0e 	blcc	2ce918 <startup-0x1fd316e8>
  dc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  e0:	11134919 	tstne	r3, r9, lsl r9
  e4:	40061201 	andmi	r1, r6, r1, lsl #4
  e8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  ec:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
  f0:	03193f00 	tsteq	r9, #0, 30
  f4:	3b0b3a0e 	blcc	2ce934 <startup-0x1fd316cc>
  f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 100:	97184006 	ldrls	r4, [r8, -r6]
 104:	00001942 	andeq	r1, r0, r2, asr #18
 108:	3f012e0f 	svccc	0x00012e0f
 10c:	3a0e0319 	bcc	380d78 <startup-0x1fc7f288>
 110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 114:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 118:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 11c:	97184006 	ldrls	r4, [r8, -r6]
 120:	13011942 	movwne	r1, #6466	; 0x1942
 124:	Address 0x00000124 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000104 	andeq	r0, r0, r4, lsl #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000114 	andcs	r0, r0, r4, lsl r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000ee 	andeq	r0, r0, lr, ror #1
   4:	003f0003 	eorseq	r0, pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	372f7265 	strcc	r7, [pc, -r5, ror #4]!
  30:	6f2d312d 	svcvs	0x002d312d
  34:	6976696c 	ldmdbvs	r6!, {r2, r3, r5, r6, r8, fp, sp, lr}^
  38:	73000061 	movwvc	r0, #97	; 0x61
  3c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  40:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  44:	00000100 	andeq	r0, r0, r0, lsl #2
  48:	00010500 	andeq	r0, r1, r0, lsl #10
  4c:	00000205 	andeq	r0, r0, r5, lsl #4
  50:	13192000 	tstne	r9, #0
  54:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
  58:	01000302 	tsteq	r0, r2, lsl #6
  5c:	00190501 	andseq	r0, r9, r1, lsl #10
  60:	00100205 	andseq	r0, r0, r5, lsl #4
  64:	31032000 	mrscc	r2, (UNDEF: 3)
  68:	3d0a0501 	cfstr32cc	mvfx0, [sl, #-4]
  6c:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
  70:	01053d0c 	tsteq	r5, ip, lsl #26
  74:	681d052f 	ldmdavs	sp, {r0, r1, r2, r3, r5, r8, sl}
  78:	052f0f05 	streq	r0, [pc, #-3845]!	; fffff17b <inbuf+0xdffff067>
  7c:	07053c14 	smladeq	r5, r4, ip, r3
  80:	211e053c 	tstcs	lr, ip, lsr r5
  84:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
  88:	0105200f 	tsteq	r5, pc
  8c:	76160530 			; <UNDEFINED> instruction: 0x76160530
  90:	052f0b05 	streq	r0, [pc, #-2821]!	; fffff593 <inbuf+0xdffff47f>
  94:	14053d05 	strne	r3, [r5], #-3333	; 0xfffff2fb
  98:	2f170520 	svccs	0x00170520
  9c:	05670b05 	strbeq	r0, [r7, #-2821]!	; 0xfffff4fb
  a0:	0b052011 	bleq	1480ec <startup-0x1feb7f14>
  a4:	2011052f 	andscs	r0, r1, pc, lsr #10
  a8:	052f0b05 	streq	r0, [pc, #-2821]!	; fffff5ab <inbuf+0xdffff497>
  ac:	0b052011 	bleq	1480f8 <startup-0x1feb7f08>
  b0:	2011052f 	andscs	r0, r1, pc, lsr #10
  b4:	05300105 	ldreq	r0, [r0, #-261]!	; 0xfffffefb
  b8:	05220816 	streq	r0, [r2, #-2070]!	; 0xfffff7ea
  bc:	1405670b 	strne	r6, [r5], #-1803	; 0xfffff8f5
  c0:	01040200 	mrseq	r0, R12_usr
  c4:	00190520 	andseq	r0, r9, r0, lsr #10
  c8:	3c010402 	cfstrscc	mvf0, [r1], {2}
  cc:	02000b05 	andeq	r0, r0, #5120	; 0x1400
  d0:	213c0104 	teqcs	ip, r4, lsl #2
  d4:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
  d8:	01053c10 	tsteq	r5, r0, lsl ip
  dc:	05057721 	streq	r7, [r5, #-1825]	; 0xfffff8df
  e0:	300d053f 	andcc	r0, sp, pc, lsr r5
  e4:	05590c05 	ldrbeq	r0, [r9, #-3077]	; 0xfffff3fb
  e8:	0b054b0d 	bleq	152d24 <startup-0x1fead2dc>
  ec:	00010256 	andeq	r0, r1, r6, asr r2
  f0:	Address 0x000000f0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
   4:	73745f74 	cmnvc	r4, #116, 30	; 0x1d0
   8:	61686374 	smcvs	34356	; 0x8634
   c:	6f5f0072 	svcvs	0x005f0072
  10:	68637475 	stmdavs	r3!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
  14:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
  18:	006e6961 	rsbeq	r6, lr, r1, ror #18
  1c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  20:	00707574 	rsbseq	r7, r0, r4, ror r5
  24:	75626e69 	strbvc	r6, [r2, #-3689]!	; 0xfffff197
  28:	4e470066 	cdpmi	0, 4, cr0, cr7, cr6, {3}
  2c:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  30:	2e392039 	mrccs	0, 1, r2, cr9, cr9, {1}
  34:	20312e32 	eorscs	r2, r1, r2, lsr lr
  38:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
  3c:	35323031 	ldrcc	r3, [r2, #-49]!	; 0xffffffcf
  40:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  44:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  48:	5b202965 	blpl	80a5e4 <startup-0x1f7f5a1c>
  4c:	2f4d5241 	svccs	0x004d5241
  50:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  54:	72622d39 	rsbvc	r2, r2, #3648	; 0xe40
  58:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  5c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  60:	6f697369 	svcvs	0x00697369
  64:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
  68:	39393537 	ldmdbcc	r9!, {r0, r1, r2, r4, r5, r8, sl, ip, sp}
  6c:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  70:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  74:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  78:	616f6c66 	cmnvs	pc, r6, ror #24
  7c:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  80:	6f733d69 	svcvs	0x00733d69
  84:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  88:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  8c:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  90:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  94:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  98:	304f2d20 	subcc	r2, pc, r0, lsr #26
  9c:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
  a0:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
  a4:	6e550039 	mrcvs	0, 2, r0, cr5, cr9, {1}
  a8:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
  ac:	73750035 	cmnvc	r5, #53	; 0x35
  b0:	5f747261 	svcpl	0x00747261
  b4:	5f717269 	svcpl	0x00717269
  b8:	74756f72 	ldrbtvc	r6, [r5], #-3954	; 0xfffff08e
  bc:	00656e69 	rsbeq	r6, r5, r9, ror #28
  c0:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
  c4:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
  c8:	67007469 	strvs	r7, [r0, -r9, ror #8]
  cc:	00727074 	rsbseq	r7, r2, r4, ror r0
  d0:	6d5c3a44 	vldrvs	s7, [ip, #-272]	; 0xfffffef0
  d4:	6c5c706f 	mrrcvs	0, 6, r7, ip, cr15
  d8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  dc:	6f697461 	svcvs	0x00697461
  e0:	5c72656e 	cfldr64pl	mvdx6, [r2], #-440	; 0xfffffe48
  e4:	2d312d37 	ldccs	13, cr2, [r1, #-220]!	; 0xffffff24
  e8:	76696c6f 	strbtvc	r6, [r9], -pc, ror #24
  ec:	55006169 	strpl	r6, [r0, #-361]	; 0xfffffe97
  f0:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
  f4:	55003064 	strpl	r3, [r0, #-100]	; 0xffffff9c
  f8:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
  fc:	55003164 	strpl	r3, [r0, #-356]	; 0xfffffe9c
 100:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 104:	55003264 	strpl	r3, [r0, #-612]	; 0xfffffd9c
 108:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 10c:	55003364 	strpl	r3, [r0, #-868]	; 0xfffffc9c
 110:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
 114:	73003464 	movwvc	r3, #1124	; 0x464
 118:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
 11c:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
 120:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 124:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
 128:	3a440074 	bcc	1100300 <startup-0x1eeffd00>
 12c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 130:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 134:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 138:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 13c:	2d372f72 	ldccs	15, cr2, [r7, #-456]!	; 0xfffffe38
 140:	6c6f2d31 	stclvs	13, cr2, [pc], #-196	; 84 <startup-0x1fffff7c>
 144:	61697669 	cmnvs	r9, r9, ror #12
 148:	6174732f 	cmnvs	r4, pc, lsr #6
 14c:	70757472 	rsbsvc	r7, r5, r2, ror r4
 150:	5500632e 	strpl	r6, [r0, #-814]	; 0xfffffcd2
 154:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  3c:	00000007 	andeq	r0, r0, r7
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000034 	andcs	r0, r0, r4, lsr r0
  4c:	0000002c 	andeq	r0, r0, ip, lsr #32
  50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  54:	41018e02 	tstmi	r1, r2, lsl #28
  58:	0000070d 	andeq	r0, r0, sp, lsl #14
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000060 	andcs	r0, r0, r0, rrx
  68:	00000058 	andeq	r0, r0, r8, asr r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0000070d 	andeq	r0, r0, sp, lsl #14
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	200000b8 	strhcs	r0, [r0], -r8
  84:	00000034 	andeq	r0, r0, r4, lsr r0
  88:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  8c:	41018e02 	tstmi	r1, r2, lsl #28
  90:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  94:	00000007 	andeq	r0, r0, r7
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	200000ec 	andcs	r0, r0, ip, ror #1
  a4:	00000028 	andeq	r0, r0, r8, lsr #32
  a8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  ac:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  b0:	180e4101 	stmdane	lr, {r0, r8, lr}
  b4:	00070d41 	andeq	r0, r7, r1, asr #26
