
Debug/4-1:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8ec 	bl	200001e0 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:
#define GPIO_MODER ((volatile unsigned long *) 0x40020C00)
#define GPIO_OTYPER ((volatile unsigned short *) 0x40020C04)
#define GPIO_PUPDR ((volatile unsigned long *)0x40020C0C


void app_init(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    
    * ( (unsigned char *) 0x40020C15) = 0x0;
20000014:	4b15      	ldr	r3, [pc, #84]	; (2000006c <app_init+0x5c>)
20000016:	2200      	movs	r2, #0
20000018:	701a      	strb	r2, [r3, #0]
	* ( (unsigned char *) 0x40020C14) = 0x0;
2000001a:	4b15      	ldr	r3, [pc, #84]	; (20000070 <app_init+0x60>)
2000001c:	2200      	movs	r2, #0
2000001e:	701a      	strb	r2, [r3, #0]
    * ( (unsigned char *) 0x40020C11) = 0x0;
20000020:	4b14      	ldr	r3, [pc, #80]	; (20000074 <app_init+0x64>)
20000022:	2200      	movs	r2, #0
20000024:	701a      	strb	r2, [r3, #0]
    
    * ( (unsigned long *) 0x40020C00) &= 0x0000FFFF;  // GPIO_MODER nollställs
20000026:	4b14      	ldr	r3, [pc, #80]	; (20000078 <app_init+0x68>)
20000028:	681a      	ldr	r2, [r3, #0]
2000002a:	4b13      	ldr	r3, [pc, #76]	; (20000078 <app_init+0x68>)
2000002c:	0412      	lsls	r2, r2, #16
2000002e:	0c12      	lsrs	r2, r2, #16
20000030:	601a      	str	r2, [r3, #0]
    * ( (unsigned long *) 0x40020C00) |= 0x55005555;  // GPIO_MODER initieras
20000032:	4b11      	ldr	r3, [pc, #68]	; (20000078 <app_init+0x68>)
20000034:	681a      	ldr	r2, [r3, #0]
20000036:	4b10      	ldr	r3, [pc, #64]	; (20000078 <app_init+0x68>)
20000038:	4910      	ldr	r1, [pc, #64]	; (2000007c <app_init+0x6c>)
2000003a:	430a      	orrs	r2, r1
2000003c:	601a      	str	r2, [r3, #0]
    * ( (unsigned short *) 0x40020C04) &= 0x00FF;       // GPIO_OTYPER nollställs & initieras
2000003e:	4b10      	ldr	r3, [pc, #64]	; (20000080 <app_init+0x70>)
20000040:	881b      	ldrh	r3, [r3, #0]
20000042:	4a0f      	ldr	r2, [pc, #60]	; (20000080 <app_init+0x70>)
20000044:	21ff      	movs	r1, #255	; 0xff
20000046:	400b      	ands	r3, r1
20000048:	b29b      	uxth	r3, r3
2000004a:	8013      	strh	r3, [r2, #0]
    
    * ( (unsigned long *) 0x40020C0C) &= 0x0000FFFF;       // GPIO_PUPDR nollställs
2000004c:	4b0d      	ldr	r3, [pc, #52]	; (20000084 <app_init+0x74>)
2000004e:	681a      	ldr	r2, [r3, #0]
20000050:	4b0c      	ldr	r3, [pc, #48]	; (20000084 <app_init+0x74>)
20000052:	0412      	lsls	r2, r2, #16
20000054:	0c12      	lsrs	r2, r2, #16
20000056:	601a      	str	r2, [r3, #0]
    * ( (unsigned long *) 0x40020C0C) |= 0x00AA0000;       // GPIO_PUPDR initieras
20000058:	4b0a      	ldr	r3, [pc, #40]	; (20000084 <app_init+0x74>)
2000005a:	681a      	ldr	r2, [r3, #0]
2000005c:	4b09      	ldr	r3, [pc, #36]	; (20000084 <app_init+0x74>)
2000005e:	21aa      	movs	r1, #170	; 0xaa
20000060:	0409      	lsls	r1, r1, #16
20000062:	430a      	orrs	r2, r1
20000064:	601a      	str	r2, [r3, #0]

    
}
20000066:	46c0      	nop			; (mov r8, r8)
20000068:	46bd      	mov	sp, r7
2000006a:	bd80      	pop	{r7, pc}
2000006c:	40020c15 	andmi	r0, r2, r5, lsl ip
20000070:	40020c14 	andmi	r0, r2, r4, lsl ip
20000074:	40020c11 	andmi	r0, r2, r1, lsl ip
20000078:	40020c00 	andmi	r0, r2, r0, lsl #24
2000007c:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000080:	40020c04 	andmi	r0, r2, r4, lsl #24
20000084:	40020c0c 	andmi	r0, r2, ip, lsl #24

20000088 <ActivateRow>:


void ActivateRow(unsigned int row){
20000088:	b580      	push	{r7, lr}
2000008a:	b082      	sub	sp, #8
2000008c:	af00      	add	r7, sp, #0
2000008e:	6078      	str	r0, [r7, #4]
    switch (row) {
20000090:	687b      	ldr	r3, [r7, #4]
20000092:	2b04      	cmp	r3, #4
20000094:	d01b      	beq.n	200000ce <ActivateRow+0x46>
20000096:	687b      	ldr	r3, [r7, #4]
20000098:	2b04      	cmp	r3, #4
2000009a:	d81c      	bhi.n	200000d6 <ActivateRow+0x4e>
2000009c:	687b      	ldr	r3, [r7, #4]
2000009e:	2b03      	cmp	r3, #3
200000a0:	d011      	beq.n	200000c6 <ActivateRow+0x3e>
200000a2:	687b      	ldr	r3, [r7, #4]
200000a4:	2b03      	cmp	r3, #3
200000a6:	d816      	bhi.n	200000d6 <ActivateRow+0x4e>
200000a8:	687b      	ldr	r3, [r7, #4]
200000aa:	2b01      	cmp	r3, #1
200000ac:	d003      	beq.n	200000b6 <ActivateRow+0x2e>
200000ae:	687b      	ldr	r3, [r7, #4]
200000b0:	2b02      	cmp	r3, #2
200000b2:	d004      	beq.n	200000be <ActivateRow+0x36>
200000b4:	e00f      	b.n	200000d6 <ActivateRow+0x4e>
        case 1: * GPIO_ODR_HIGH = 0x10; break;
200000b6:	4b0c      	ldr	r3, [pc, #48]	; (200000e8 <ActivateRow+0x60>)
200000b8:	2210      	movs	r2, #16
200000ba:	701a      	strb	r2, [r3, #0]
200000bc:	e00f      	b.n	200000de <ActivateRow+0x56>
        case 2: * GPIO_ODR_HIGH = 0x20; break;
200000be:	4b0a      	ldr	r3, [pc, #40]	; (200000e8 <ActivateRow+0x60>)
200000c0:	2220      	movs	r2, #32
200000c2:	701a      	strb	r2, [r3, #0]
200000c4:	e00b      	b.n	200000de <ActivateRow+0x56>
        case 3: * GPIO_ODR_HIGH = 0x40; break;
200000c6:	4b08      	ldr	r3, [pc, #32]	; (200000e8 <ActivateRow+0x60>)
200000c8:	2240      	movs	r2, #64	; 0x40
200000ca:	701a      	strb	r2, [r3, #0]
200000cc:	e007      	b.n	200000de <ActivateRow+0x56>
        case 4: * GPIO_ODR_HIGH = 0x80; break;
200000ce:	4b06      	ldr	r3, [pc, #24]	; (200000e8 <ActivateRow+0x60>)
200000d0:	2280      	movs	r2, #128	; 0x80
200000d2:	701a      	strb	r2, [r3, #0]
200000d4:	e003      	b.n	200000de <ActivateRow+0x56>
        default: *GPIO_ODR_HIGH = 0;
200000d6:	4b04      	ldr	r3, [pc, #16]	; (200000e8 <ActivateRow+0x60>)
200000d8:	2200      	movs	r2, #0
200000da:	701a      	strb	r2, [r3, #0]
    }
}  
200000dc:	46c0      	nop			; (mov r8, r8)
200000de:	46c0      	nop			; (mov r8, r8)
200000e0:	46bd      	mov	sp, r7
200000e2:	b002      	add	sp, #8
200000e4:	bd80      	pop	{r7, pc}
200000e6:	46c0      	nop			; (mov r8, r8)
200000e8:	40020c15 	andmi	r0, r2, r5, lsl ip

200000ec <ReadColumn>:

int ReadColumn(void){
200000ec:	b580      	push	{r7, lr}
200000ee:	b082      	sub	sp, #8
200000f0:	af00      	add	r7, sp, #0
    unsigned char c;
    c = * GPIO_IDR_HIGH;
200000f2:	4a12      	ldr	r2, [pc, #72]	; (2000013c <ReadColumn+0x50>)
200000f4:	1dfb      	adds	r3, r7, #7
200000f6:	7812      	ldrb	r2, [r2, #0]
200000f8:	701a      	strb	r2, [r3, #0]
    if ( c & 0x8 ) 
200000fa:	1dfb      	adds	r3, r7, #7
200000fc:	781b      	ldrb	r3, [r3, #0]
200000fe:	2208      	movs	r2, #8
20000100:	4013      	ands	r3, r2
20000102:	d001      	beq.n	20000108 <ReadColumn+0x1c>
        return 0x4;
20000104:	2304      	movs	r3, #4
20000106:	e015      	b.n	20000134 <ReadColumn+0x48>
    if ( c & 0x4 ) 
20000108:	1dfb      	adds	r3, r7, #7
2000010a:	781b      	ldrb	r3, [r3, #0]
2000010c:	2204      	movs	r2, #4
2000010e:	4013      	ands	r3, r2
20000110:	d001      	beq.n	20000116 <ReadColumn+0x2a>
        return 0x3;
20000112:	2303      	movs	r3, #3
20000114:	e00e      	b.n	20000134 <ReadColumn+0x48>
    if ( c & 0x2 ) 
20000116:	1dfb      	adds	r3, r7, #7
20000118:	781b      	ldrb	r3, [r3, #0]
2000011a:	2202      	movs	r2, #2
2000011c:	4013      	ands	r3, r2
2000011e:	d001      	beq.n	20000124 <ReadColumn+0x38>
        return 0x2;
20000120:	2302      	movs	r3, #2
20000122:	e007      	b.n	20000134 <ReadColumn+0x48>
    if ( c & 0x1 ) 
20000124:	1dfb      	adds	r3, r7, #7
20000126:	781b      	ldrb	r3, [r3, #0]
20000128:	2201      	movs	r2, #1
2000012a:	4013      	ands	r3, r2
2000012c:	d001      	beq.n	20000132 <ReadColumn+0x46>
        return 0x1;
2000012e:	2301      	movs	r3, #1
20000130:	e000      	b.n	20000134 <ReadColumn+0x48>
    return 0;
20000132:	2300      	movs	r3, #0
}      
20000134:	0018      	movs	r0, r3
20000136:	46bd      	mov	sp, r7
20000138:	b002      	add	sp, #8
2000013a:	bd80      	pop	{r7, pc}
2000013c:	40020c11 	andmi	r0, r2, r1, lsl ip

20000140 <keyb>:


unsigned char keyb(void){
20000140:	b590      	push	{r4, r7, lr}
20000142:	b087      	sub	sp, #28
20000144:	af00      	add	r7, sp, #0
    unsigned char key[] = {1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
20000146:	003b      	movs	r3, r7
20000148:	4a16      	ldr	r2, [pc, #88]	; (200001a4 <keyb+0x64>)
2000014a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000014c:	c313      	stmia	r3!, {r0, r1, r4}
2000014e:	6812      	ldr	r2, [r2, #0]
20000150:	601a      	str	r2, [r3, #0]
    unsigned int row, col;
    for (int row = 1; row <= 4; row++){
20000152:	2301      	movs	r3, #1
20000154:	617b      	str	r3, [r7, #20]
20000156:	e01a      	b.n	2000018e <keyb+0x4e>
        ActivateRow(row);
20000158:	697b      	ldr	r3, [r7, #20]
2000015a:	0018      	movs	r0, r3
2000015c:	f7ff ff94 	bl	20000088 <ActivateRow>
        col = ReadColumn();
20000160:	f7ff ffc4 	bl	200000ec <ReadColumn>
20000164:	0003      	movs	r3, r0
20000166:	613b      	str	r3, [r7, #16]
        if  (col != 0 ){
20000168:	693b      	ldr	r3, [r7, #16]
2000016a:	2b00      	cmp	r3, #0
2000016c:	d00c      	beq.n	20000188 <keyb+0x48>
            ActivateRow(0);
2000016e:	2000      	movs	r0, #0
20000170:	f7ff ff8a 	bl	20000088 <ActivateRow>
            return key [ 4 * (row-1) + (col-1) ];
20000174:	697b      	ldr	r3, [r7, #20]
20000176:	3b01      	subs	r3, #1
20000178:	009b      	lsls	r3, r3, #2
2000017a:	001a      	movs	r2, r3
2000017c:	693b      	ldr	r3, [r7, #16]
2000017e:	18d3      	adds	r3, r2, r3
20000180:	3b01      	subs	r3, #1
20000182:	003a      	movs	r2, r7
20000184:	5cd3      	ldrb	r3, [r2, r3]
20000186:	e009      	b.n	2000019c <keyb+0x5c>
    for (int row = 1; row <= 4; row++){
20000188:	697b      	ldr	r3, [r7, #20]
2000018a:	3301      	adds	r3, #1
2000018c:	617b      	str	r3, [r7, #20]
2000018e:	697b      	ldr	r3, [r7, #20]
20000190:	2b04      	cmp	r3, #4
20000192:	dde1      	ble.n	20000158 <keyb+0x18>
        }
    }
    ActivateRow(0);
20000194:	2000      	movs	r0, #0
20000196:	f7ff ff77 	bl	20000088 <ActivateRow>
    return 0xFF;
2000019a:	23ff      	movs	r3, #255	; 0xff
}
2000019c:	0018      	movs	r0, r3
2000019e:	46bd      	mov	sp, r7
200001a0:	b007      	add	sp, #28
200001a2:	bd90      	pop	{r4, r7, pc}
200001a4:	20000208 	andcs	r0, r0, r8, lsl #4

200001a8 <out7seg>:

void out7seg( unsigned char c ){
200001a8:	b580      	push	{r7, lr}
200001aa:	b082      	sub	sp, #8
200001ac:	af00      	add	r7, sp, #0
200001ae:	0002      	movs	r2, r0
200001b0:	1dfb      	adds	r3, r7, #7
200001b2:	701a      	strb	r2, [r3, #0]
    static unsigned char segCode[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x67,0x77,0x7C,0x39,0x5E,0x79,0x71};
    if ( c > 15 ) {
200001b4:	1dfb      	adds	r3, r7, #7
200001b6:	781b      	ldrb	r3, [r3, #0]
200001b8:	2b0f      	cmp	r3, #15
200001ba:	d903      	bls.n	200001c4 <out7seg+0x1c>
        * GPIO_ODR_LOW = 0;
200001bc:	4b06      	ldr	r3, [pc, #24]	; (200001d8 <out7seg+0x30>)
200001be:	2200      	movs	r2, #0
200001c0:	701a      	strb	r2, [r3, #0]
        return;
200001c2:	e005      	b.n	200001d0 <out7seg+0x28>
    }
    * GPIO_ODR_LOW = segCode[c];
200001c4:	1dfb      	adds	r3, r7, #7
200001c6:	781b      	ldrb	r3, [r3, #0]
200001c8:	4903      	ldr	r1, [pc, #12]	; (200001d8 <out7seg+0x30>)
200001ca:	4a04      	ldr	r2, [pc, #16]	; (200001dc <out7seg+0x34>)
200001cc:	5cd3      	ldrb	r3, [r2, r3]
200001ce:	700b      	strb	r3, [r1, #0]
}
200001d0:	46bd      	mov	sp, r7
200001d2:	b002      	add	sp, #8
200001d4:	bd80      	pop	{r7, pc}
200001d6:	46c0      	nop			; (mov r8, r8)
200001d8:	40020c14 	andmi	r0, r2, r4, lsl ip
200001dc:	200001f8 	strdcs	r0, [r0], -r8

200001e0 <main>:
    
void main(void)
{
200001e0:	b580      	push	{r7, lr}
200001e2:	af00      	add	r7, sp, #0
    app_init();
200001e4:	f7ff ff14 	bl	20000010 <app_init>
    //unsigned char * key[] = {1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};
    while (1) {
        out7seg( keyb() );
200001e8:	f7ff ffaa 	bl	20000140 <keyb>
200001ec:	0003      	movs	r3, r0
200001ee:	0018      	movs	r0, r3
200001f0:	f7ff ffda 	bl	200001a8 <out7seg>
200001f4:	e7f8      	b.n	200001e8 <main+0x8>
200001f6:	46c0      	nop			; (mov r8, r8)

200001f8 <segCode.4000>:
200001f8:	4f5b063f 	svcmi	0x005b063f
200001fc:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
20000200:	7c77677f 	ldclvc	7, cr6, [r7], #-508	; 0xfffffe04
20000204:	71795e39 	cmnvc	r9, r9, lsr lr
20000208:	0a030201 	beq	200c0a14 <segCode.4000+0xc081c>
2000020c:	0b060504 	bleq	20181624 <segCode.4000+0x18142c>
20000210:	0c090807 	stceq	8, cr0, [r9], {7}
20000214:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001e4 <main+0x4>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000015f 	andeq	r0, r0, pc, asr r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000d00c 	andeq	sp, r0, ip
  14:	00010e00 	andeq	r0, r1, r0, lsl #28
	...
  24:	00cb0200 	sbceq	r0, fp, r0, lsl #4
  28:	5a010000 	bpl	40030 <startup-0x1ffbffd0>
  2c:	0001e006 	andeq	lr, r1, r6
  30:	00001620 	andeq	r1, r0, r0, lsr #12
  34:	039c0100 	orrseq	r0, ip, #0, 2
  38:	000000ad 	andeq	r0, r0, sp, lsr #1
  3c:	a8065101 	stmdage	r6, {r0, r8, ip, lr}
  40:	38200001 	stmdacc	r0!, {r0}
  44:	01000000 	mrseq	r0, (UNDEF: 0)
  48:	00006d9c 	muleq	r0, ip, sp
  4c:	00630400 	rsbeq	r0, r3, r0, lsl #8
  50:	6d1d5101 	ldfvss	f5, [sp, #-4]
  54:	02000000 	andeq	r0, r0, #0
  58:	a5057791 	strge	r7, [r5, #-1937]	; 0xfffff86f
  5c:	01000000 	mrseq	r0, (UNDEF: 0)
  60:	00741a52 	rsbseq	r1, r4, r2, asr sl
  64:	03050000 	movweq	r0, #20480	; 0x5000
  68:	200001f8 	strdcs	r0, [r0], -r8
  6c:	08010600 	stmdaeq	r1, {r9, sl}
  70:	000000bd 	strheq	r0, [r0], -sp
  74:	00006d07 	andeq	r6, r0, r7, lsl #26
  78:	00008400 	andeq	r8, r0, r0, lsl #8
  7c:	00840800 	addeq	r0, r4, r0, lsl #16
  80:	000f0000 	andeq	r0, pc, r0
  84:	7c070406 	cfstrsvc	mvf0, [r7], {6}
  88:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  8c:	00000089 	andeq	r0, r0, r9, lsl #1
  90:	6d0f4201 	sfmvs	f4, 4, [pc, #-4]	; 94 <startup-0x1fffff6c>
  94:	40000000 	andmi	r0, r0, r0
  98:	68200001 	stmdavs	r0!, {r0}
  9c:	01000000 	mrseq	r0, (UNDEF: 0)
  a0:	0000e99c 	muleq	r0, ip, r9
  a4:	656b0a00 	strbvs	r0, [fp, #-2560]!	; 0xfffff600
  a8:	43010079 	movwmi	r0, #4217	; 0x1079
  ac:	00007413 	andeq	r7, r0, r3, lsl r4
  b0:	58910200 	ldmpl	r1, {r9}
  b4:	776f720b 	strbvc	r7, [pc, -fp, lsl #4]!
  b8:	12440100 	subne	r0, r4, #0, 2
  bc:	00000084 	andeq	r0, r0, r4, lsl #1
  c0:	6c6f630a 	stclvs	3, cr6, [pc], #-40	; a0 <startup-0x1fffff60>
  c4:	17440100 	strbne	r0, [r4, -r0, lsl #2]
  c8:	00000084 	andeq	r0, r0, r4, lsl #1
  cc:	0c689102 	stfeqp	f1, [r8], #-8
  d0:	20000152 	andcs	r0, r0, r2, asr r1
  d4:	00000042 	andeq	r0, r0, r2, asr #32
  d8:	776f720a 	strbvc	r7, [pc, -sl, lsl #4]!
  dc:	0e450100 	dvfeqs	f0, f5, f0
  e0:	000000e9 	andeq	r0, r0, r9, ror #1
  e4:	006c9102 	rsbeq	r9, ip, r2, lsl #2
  e8:	05040d00 	streq	r0, [r4, #-3328]	; 0xfffff300
  ec:	00746e69 	rsbseq	r6, r4, r9, ror #28
  f0:	00009a0e 	andeq	r9, r0, lr, lsl #20
  f4:	05330100 	ldreq	r0, [r3, #-256]!	; 0xffffff00
  f8:	000000e9 	andeq	r0, r0, r9, ror #1
  fc:	200000ec 	andcs	r0, r0, ip, ror #1
 100:	00000054 	andeq	r0, r0, r4, asr r0
 104:	01189c01 	tsteq	r8, r1, lsl #24
 108:	630a0000 	movwvs	r0, #40960	; 0xa000
 10c:	13340100 	teqne	r4, #0, 2
 110:	0000006d 	andeq	r0, r0, sp, rrx
 114:	00779102 	rsbseq	r9, r7, r2, lsl #2
 118:	00008e03 	andeq	r8, r0, r3, lsl #28
 11c:	06290100 	strteq	r0, [r9], -r0, lsl #2
 120:	20000088 	andcs	r0, r0, r8, lsl #1
 124:	00000064 	andeq	r0, r0, r4, rrx
 128:	013e9c01 	teqeq	lr, r1, lsl #24
 12c:	72040000 	andvc	r0, r4, #0
 130:	0100776f 	tsteq	r0, pc, ror #14
 134:	00841f29 	addeq	r1, r4, r9, lsr #30
 138:	91020000 	mrsls	r0, (UNDEF: 2)
 13c:	420f0074 	andmi	r0, pc, #116	; 0x74
 140:	01000001 	tsteq	r0, r1
 144:	00100618 	andseq	r0, r0, r8, lsl r6
 148:	00782000 	rsbseq	r2, r8, r0
 14c:	9c010000 	stcls	0, cr0, [r1], {-0}
 150:	0000b50f 	andeq	fp, r0, pc, lsl #10
 154:	06080100 	streq	r0, [r8], -r0, lsl #2
 158:	20000000 	andcs	r0, r0, r0
 15c:	0000000c 	andeq	r0, r0, ip
 160:	Address 0x0000000000000160 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	00194296 	mulseq	r9, r6, r2
  2c:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
  30:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  3c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  40:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  44:	00130119 	andseq	r0, r3, r9, lsl r1
  48:	00050400 	andeq	r0, r5, r0, lsl #8
  4c:	0b3a0803 	bleq	e82060 <startup-0x1f17dfa0>
  50:	0b390b3b 	bleq	e42d44 <startup-0x1f1bd2bc>
  54:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  58:	34050000 	strcc	r0, [r5], #-0
  5c:	3a0e0300 	bcc	380c64 <startup-0x1fc7f39c>
  60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  64:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  68:	06000018 			; <UNDEFINED> instruction: 0x06000018
  6c:	0b0b0024 	bleq	2c0104 <startup-0x1fd3fefc>
  70:	0e030b3e 	vmoveq.16	d3[0], r0
  74:	01070000 	mrseq	r0, (UNDEF: 7)
  78:	01134901 	tsteq	r3, r1, lsl #18
  7c:	08000013 	stmdaeq	r0, {r0, r1, r4}
  80:	13490021 	movtne	r0, #36897	; 0x9021
  84:	00000b2f 	andeq	r0, r0, pc, lsr #22
  88:	3f012e09 	svccc	0x00012e09
  8c:	3a0e0319 	bcc	380cf8 <startup-0x1fc7f308>
  90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  94:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  98:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  9c:	96184006 	ldrls	r4, [r8], -r6
  a0:	13011942 	movwne	r1, #6466	; 0x1942
  a4:	340a0000 	strcc	r0, [sl], #-0
  a8:	3a080300 	bcc	200cb0 <startup-0x1fdff350>
  ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  b4:	0b000018 	bleq	11c <startup-0x1ffffee4>
  b8:	08030034 	stmdaeq	r3, {r2, r4, r5}
  bc:	0b3b0b3a 	bleq	ec2dac <startup-0x1f13d254>
  c0:	13490b39 	movtne	r0, #39737	; 0x9b39
  c4:	0b0c0000 	bleq	3000cc <startup-0x1fcfff34>
  c8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
  cc:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
  d0:	0b0b0024 	bleq	2c0168 <startup-0x1fd3fe98>
  d4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  d8:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
  dc:	03193f01 	tsteq	r9, #1, 30
  e0:	3b0b3a0e 	blcc	2ce920 <startup-0x1fd316e0>
  e4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  e8:	11134919 	tstne	r3, r9, lsl r9
  ec:	40061201 	andmi	r1, r6, r1, lsl #4
  f0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  f4:	00001301 	andeq	r1, r0, r1, lsl #6
  f8:	3f002e0f 	svccc	0x00002e0f
  fc:	3a0e0319 	bcc	380d68 <startup-0x1fc7f298>
 100:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 104:	1119270b 	tstne	r9, fp, lsl #14
 108:	40061201 	andmi	r1, r6, r1, lsl #4
 10c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 110:	Address 0x0000000000000110 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001e6 	andeq	r0, r0, r6, ror #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001f6 	strdcs	r0, [r0], -r6
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000016a 	andeq	r0, r0, sl, ror #2
   4:	00540003 	subseq	r0, r4, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	766c652f 	strbtvc	r6, [ip], -pc, lsr #10
  24:	2f616e69 	svccs	0x00616e69
  28:	756b6f44 	strbvc	r6, [fp, #-3908]!	; 0xfffff0bc
  2c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  30:	504f4d2f 	subpl	r4, pc, pc, lsr #26
  34:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
  38:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  3c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  40:	616c2f72 	smcvs	49906	; 0xc2f2
  44:	61726f62 	cmnvs	r2, r2, ror #30
  48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  4c:	00007265 	andeq	r7, r0, r5, ror #4
  50:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  54:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  58:	00010063 	andeq	r0, r1, r3, rrx
  5c:	01050000 	mrseq	r0, (UNDEF: 5)
  60:	00020500 	andeq	r0, r2, r0, lsl #10
  64:	1a200000 	bne	80006c <startup-0x1f7fff94>
  68:	2f212113 	svccs	0x00212113
  6c:	00030221 	andeq	r0, r3, r1, lsr #4
  70:	14050101 	strne	r0, [r5], #-257	; 0xfffffeff
  74:	10020500 	andne	r0, r2, r0, lsl #10
  78:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  7c:	05050117 	streq	r0, [r5, #-279]	; 0xfffffee9
  80:	20270530 	eorcs	r0, r7, r0, lsr r5
  84:	052f0205 	streq	r0, [pc, #-517]!	; fffffe87 <segCode.4000+0xdffffc8f>
  88:	05052024 	streq	r2, [r5, #-36]	; 0xffffffdc
  8c:	2027052f 	eorcs	r0, r7, pc, lsr #10
  90:	28056730 	stmdacs	r5, {r4, r5, r8, r9, sl, sp, lr}
  94:	76270567 	strtvc	r0, [r7], -r7, ror #10
  98:	77010567 	strvc	r0, [r1, -r7, ror #10]
  9c:	15082305 	strne	r2, [r8, #-773]	; 0xfffffcfb
  a0:	054b0505 	strbeq	r0, [fp, #-1285]	; 0xfffffafb
  a4:	052f0811 	streq	r0, [pc, #-2065]!	; fffff89b <segCode.4000+0xdffff6a3>
  a8:	09052021 	stmdbeq	r5, {r0, r5, sp}
  ac:	2111052e 	tstcs	r1, lr, lsr #10
  b0:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
  b4:	11052e09 	tstne	r5, r9, lsl #28
  b8:	20210521 	eorcs	r0, r1, r1, lsr #10
  bc:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
  c0:	21052111 	tstcs	r5, r1, lsl r1
  c4:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
  c8:	05211205 	streq	r1, [r1, #-517]!	; 0xfffffdfb
  cc:	01052021 	tsteq	r5, r1, lsr #32
  d0:	84150530 	ldrhi	r0, [r5], #-1328	; 0xfffffad0
  d4:	053e0905 	ldreq	r0, [lr, #-2309]!	; 0xfffff6fb
  d8:	0c052007 	stceq	0, cr2, [r5], {7}
  dc:	4a08053d 	bmi	2015d8 <startup-0x1fdfea28>
  e0:	05211005 	streq	r1, [r1, #-5]!
  e4:	08052f0c 	stmdaeq	r5, {r2, r3, r8, r9, sl, fp, sp}
  e8:	2110054a 	tstcs	r0, sl, asr #10
  ec:	052f0c05 	streq	r0, [pc, #-3077]!	; fffff4ef <segCode.4000+0xdffff2f7>
  f0:	10054a08 	andne	r4, r5, r8, lsl #20
  f4:	2f0c0521 	svccs	0x000c0521
  f8:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
  fc:	0c052110 	stfeqs	f2, [r5], {16}
 100:	2101052f 	tstcs	r1, pc, lsr #10
 104:	05691905 	strbeq	r1, [r9, #-2309]!	; 0xfffff6fb
 108:	0e053d13 	mcreq	13, 0, r3, cr5, cr3, {0}
 10c:	2e050568 	cfsh32cs	mvfx0, mvfx5, #56
 110:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
 114:	0d054b0f 	vstreq	d4, [r5, #-60]	; 0xffffffc4
 118:	053d213c 	ldreq	r2, [sp, #-316]!	; 0xfffffec4
 11c:	1c053d22 	stcne	13, cr3, [r5], {34}	; 0x22
 120:	2026052e 	eorcs	r0, r6, lr, lsr #10
 124:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
 128:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
 12c:	05053702 	streq	r3, [r5, #-1794]	; 0xfffff8fe
 130:	01040200 	mrseq	r0, R12_usr
 134:	0c05443c 	cfstrseq	mvf4, [r5], {60}	; 0x3c
 138:	0001053d 	andeq	r0, r1, sp, lsr r5
 13c:	21010402 	tstcs	r1, r2, lsl #8
 140:	05682005 	strbeq	r2, [r8, #-5]!
 144:	09056808 	stmdbeq	r5, {r3, fp, sp, lr}
 148:	2018054b 	andscs	r0, r8, fp, asr #10
 14c:	052f0905 	streq	r0, [pc, #-2309]!	; fffff84f <segCode.4000+0xdffff657>
 150:	0505221d 	streq	r2, [r5, #-541]	; 0xfffffde3
 154:	201d052e 	andscs	r0, sp, lr, lsr #10
 158:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
 15c:	05852101 	streq	r2, [r5, #257]	; 0x101
 160:	09052f05 	stmdbeq	r5, {r0, r2, r8, r9, sl, fp, sp}
 164:	01040200 	mrseq	r0, R12_usr
 168:	00070231 	andeq	r0, r7, r1, lsr r2
 16c:	Address 0x000000000000016c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  8c:	63410062 	movtvs	r0, #4194	; 0x1062
  90:	61766974 	cmnvs	r6, r4, ror r9
  94:	6f526574 	svcvs	0x00526574
  98:	65520077 	ldrbvs	r0, [r2, #-119]	; 0xffffff89
  9c:	6f436461 	svcvs	0x00436461
  a0:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
  a4:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
  a8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
  ac:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
  b0:	67657337 			; <UNDEFINED> instruction: 0x67657337
  b4:	61747300 	cmnvs	r4, r0, lsl #6
  b8:	70757472 	rsbsvc	r7, r5, r2, ror r4
  bc:	736e7500 	cmnvc	lr, #0, 10
  c0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  c4:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  c8:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
  cc:	006e6961 	rsbeq	r6, lr, r1, ror #18
  d0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1c <startup-0x1fffffe4>
  d4:	6c652f65 	stclvs	15, cr2, [r5], #-404	; 0xfffffe6c
  d8:	616e6976 	smcvs	59030	; 0xe696
  dc:	6b6f442f 	blvs	1bd11a0 <startup-0x1e42ee60>
  e0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  e4:	4f4d2f74 	svcmi	0x004d2f74
  e8:	616c2f50 	cmnvs	ip, r0, asr pc
  ec:	61726f62 	cmnvs	r2, r2, ror #30
  f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  f4:	6c2f7265 	sfmvs	f7, 4, [pc], #-404	; ffffff68 <segCode.4000+0xdffffd70>
  f8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  fc:	6f697461 	svcvs	0x00697461
 100:	2f72656e 	svccs	0x0072656e
 104:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 108:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
 10c:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
 110:	2f656d6f 	svccs	0x00656d6f
 114:	69766c65 	ldmdbvs	r6!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 118:	442f616e 	strtmi	r6, [pc], #-366	; 120 <startup-0x1ffffee0>
 11c:	6d756b6f 	fldmdbxvs	r5!, {d22-d76}	;@ Deprecated
 120:	2f746e65 	svccs	0x00746e65
 124:	2f504f4d 	svccs	0x00504f4d
 128:	6f62616c 	svcvs	0x0062616c
 12c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 130:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
 134:	62616c2f 	rsbvs	r6, r1, #12032	; 0x2f00
 138:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
 13c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
 140:	70610072 	rsbvc	r0, r1, r2, ror r0
 144:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
 148:	Address 0x0000000000000148 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000078 	andeq	r0, r0, r8, ror r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000088 	andcs	r0, r0, r8, lsl #1
  48:	00000064 	andeq	r0, r0, r4, rrx
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000ec 	andcs	r0, r0, ip, ror #1
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	20000140 	andcs	r0, r0, r0, asr #2
  88:	00000068 	andeq	r0, r0, r8, rrx
  8c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  90:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  94:	280e4101 	stmdacs	lr, {r0, r8, lr}
  98:	00070d41 	andeq	r0, r7, r1, asr #26
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	200001a8 	andcs	r0, r0, r8, lsr #3
  a8:	00000038 	andeq	r0, r0, r8, lsr r0
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	200001e0 	andcs	r0, r0, r0, ror #3
  c8:	00000016 	andeq	r0, r0, r6, lsl r0
  cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  d0:	41018e02 	tstmi	r1, r2, lsl #28
  d4:	0000070d 	andeq	r0, r0, sp, lsl #14
