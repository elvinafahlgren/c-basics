
Debug/200605_uppg3_exti_irq:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
  * 
  */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f886 	bl	20000114 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:
/* EXTI1 är multiplexsignal */

void irq_handler( void );
/* initieringar */
void init_app(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	* GPIO_D_BASE = 0x55555555;	// port d ingång
20000014:	4b14      	ldr	r3, [pc, #80]	; (20000068 <init_app+0x58>)
20000016:	4a15      	ldr	r2, [pc, #84]	; (2000006c <init_app+0x5c>)
20000018:	601a      	str	r2, [r3, #0]
	* GPIO_E_BASE = 0;			// port e utgång
2000001a:	4b15      	ldr	r3, [pc, #84]	; (20000070 <init_app+0x60>)
2000001c:	2200      	movs	r2, #0
2000001e:	601a      	str	r2, [r3, #0]
	
    /* koppla PE till EXTI1*/
    *SYSCFG_EXTICR1 |= 0x0040;
20000020:	4b14      	ldr	r3, [pc, #80]	; (20000074 <init_app+0x64>)
20000022:	681a      	ldr	r2, [r3, #0]
20000024:	4b13      	ldr	r3, [pc, #76]	; (20000074 <init_app+0x64>)
20000026:	2140      	movs	r1, #64	; 0x40
20000028:	430a      	orrs	r2, r1
2000002a:	601a      	str	r2, [r3, #0]

    /* Konfigurera EXTI1 för att generera avbrott */
    * EXTI_IMR |= EXTI1_IRQ_BPOS;
2000002c:	4b12      	ldr	r3, [pc, #72]	; (20000078 <init_app+0x68>)
2000002e:	681a      	ldr	r2, [r3, #0]
20000030:	4b11      	ldr	r3, [pc, #68]	; (20000078 <init_app+0x68>)
20000032:	2102      	movs	r1, #2
20000034:	430a      	orrs	r2, r1
20000036:	601a      	str	r2, [r3, #0]
    * EXTI_RTSR |= EXTI1_IRQ_BPOS;
20000038:	4b10      	ldr	r3, [pc, #64]	; (2000007c <init_app+0x6c>)
2000003a:	681a      	ldr	r2, [r3, #0]
2000003c:	4b0f      	ldr	r3, [pc, #60]	; (2000007c <init_app+0x6c>)
2000003e:	2102      	movs	r1, #2
20000040:	430a      	orrs	r2, r1
20000042:	601a      	str	r2, [r3, #0]
	* EXTI_FTSR |= EXTI1_IRQ_BPOS;
20000044:	4b0e      	ldr	r3, [pc, #56]	; (20000080 <init_app+0x70>)
20000046:	681a      	ldr	r2, [r3, #0]
20000048:	4b0d      	ldr	r3, [pc, #52]	; (20000080 <init_app+0x70>)
2000004a:	2102      	movs	r1, #2
2000004c:	430a      	orrs	r2, r1
2000004e:	601a      	str	r2, [r3, #0]
	
	/* Sätt upp avbrottsvektor */
    * EXTI1_IRQVEC = irq_handler;
20000050:	4b0c      	ldr	r3, [pc, #48]	; (20000084 <init_app+0x74>)
20000052:	4a0d      	ldr	r2, [pc, #52]	; (20000088 <init_app+0x78>)
20000054:	601a      	str	r2, [r3, #0]

    /* konfig den bit i NVIC som kontrollerarar den avbrottslina som EXTI kopplats till */
    * NVIC_ISER0 |= NVIC_EXTI1_IRQ_BPOS;
20000056:	4b0d      	ldr	r3, [pc, #52]	; (2000008c <init_app+0x7c>)
20000058:	681a      	ldr	r2, [r3, #0]
2000005a:	4b0c      	ldr	r3, [pc, #48]	; (2000008c <init_app+0x7c>)
2000005c:	2180      	movs	r1, #128	; 0x80
2000005e:	430a      	orrs	r2, r1
20000060:	601a      	str	r2, [r3, #0]

}
20000062:	46c0      	nop			; (mov r8, r8)
20000064:	46bd      	mov	sp, r7
20000066:	bd80      	pop	{r7, pc}
20000068:	40020c00 	andmi	r0, r2, r0, lsl #24
2000006c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000070:	40021000 	andmi	r1, r2, r0
20000074:	40013808 	andmi	r3, r1, r8, lsl #16
20000078:	40013c00 	andmi	r3, r1, r0, lsl #24
2000007c:	40013c08 	andmi	r3, r1, r8, lsl #24
20000080:	40013c0c 	andmi	r3, r1, ip, lsl #24
20000084:	2001c05c 	andcs	ip, r1, ip, asr r0
20000088:	20000091 	mulcs	r0, r1, r0
2000008c:	e000e100 	and	lr, r0, r0, lsl #2

20000090 <irq_handler>:

void irq_handler ( void )
{
20000090:	b580      	push	{r7, lr}
20000092:	af00      	add	r7, sp, #0
    /* Om avbrott från EXTI1:*/
    if( *EXTI_PR & EXTI1_IRQ_BPOS )
20000094:	4b1a      	ldr	r3, [pc, #104]	; (20000100 <irq_handler+0x70>)
20000096:	681b      	ldr	r3, [r3, #0]
20000098:	2202      	movs	r2, #2
2000009a:	4013      	ands	r3, r2
2000009c:	d02d      	beq.n	200000fa <irq_handler+0x6a>
    {        
		/* om s1 är hög */
		if(*GPIO_E_IDR_LOW & 1)
2000009e:	4b19      	ldr	r3, [pc, #100]	; (20000104 <irq_handler+0x74>)
200000a0:	781b      	ldrb	r3, [r3, #0]
200000a2:	b2db      	uxtb	r3, r3
200000a4:	001a      	movs	r2, r3
200000a6:	2301      	movs	r3, #1
200000a8:	4013      	ands	r3, r2
200000aa:	d012      	beq.n	200000d2 <irq_handler+0x42>
		{
			/* och s2 är hög */
			if(*GPIO_E_IDR_LOW & 2){
200000ac:	4b15      	ldr	r3, [pc, #84]	; (20000104 <irq_handler+0x74>)
200000ae:	781b      	ldrb	r3, [r3, #0]
200000b0:	b2db      	uxtb	r3, r3
200000b2:	001a      	movs	r2, r3
200000b4:	2302      	movs	r3, #2
200000b6:	4013      	ands	r3, r2
200000b8:	d005      	beq.n	200000c6 <irq_handler+0x36>
				/* Visa D8-15*/
				*GPIO_D_ODR_HIGH = *GPIO_E_IDR_HIGH;
200000ba:	4a13      	ldr	r2, [pc, #76]	; (20000108 <irq_handler+0x78>)
200000bc:	4b13      	ldr	r3, [pc, #76]	; (2000010c <irq_handler+0x7c>)
200000be:	7812      	ldrb	r2, [r2, #0]
200000c0:	b2d2      	uxtb	r2, r2
200000c2:	701a      	strb	r2, [r3, #0]
200000c4:	e013      	b.n	200000ee <irq_handler+0x5e>
			}
			else{
				/* Om s2 är låg visa D0-7*/
				*GPIO_D_ODR_LOW = *GPIO_E_IDR_HIGH;
200000c6:	4a10      	ldr	r2, [pc, #64]	; (20000108 <irq_handler+0x78>)
200000c8:	4b11      	ldr	r3, [pc, #68]	; (20000110 <irq_handler+0x80>)
200000ca:	7812      	ldrb	r2, [r2, #0]
200000cc:	b2d2      	uxtb	r2, r2
200000ce:	701a      	strb	r2, [r3, #0]
200000d0:	e00d      	b.n	200000ee <irq_handler+0x5e>
			}
		}else{
			/* om s1 är låg och s2 är hög */
			if(*GPIO_E_IDR_LOW & 2){
200000d2:	4b0c      	ldr	r3, [pc, #48]	; (20000104 <irq_handler+0x74>)
200000d4:	781b      	ldrb	r3, [r3, #0]
200000d6:	b2db      	uxtb	r3, r3
200000d8:	001a      	movs	r2, r3
200000da:	2302      	movs	r3, #2
200000dc:	4013      	ands	r3, r2
200000de:	d003      	beq.n	200000e8 <irq_handler+0x58>
				/* släck d0-7 */
				*GPIO_D_ODR_HIGH = 0xFF;
200000e0:	4b0a      	ldr	r3, [pc, #40]	; (2000010c <irq_handler+0x7c>)
200000e2:	22ff      	movs	r2, #255	; 0xff
200000e4:	701a      	strb	r2, [r3, #0]
200000e6:	e002      	b.n	200000ee <irq_handler+0x5e>
			}
			else{
				/* och både s1 och s2 är låga släck d8-15 */
				*GPIO_D_ODR_LOW = 0xFF;
200000e8:	4b09      	ldr	r3, [pc, #36]	; (20000110 <irq_handler+0x80>)
200000ea:	22ff      	movs	r2, #255	; 0xff
200000ec:	701a      	strb	r2, [r3, #0]
			}
		}
		/* kvittera avbrott från EXTI1 */
        *EXTI_PR |= EXTI1_IRQ_BPOS;
200000ee:	4b04      	ldr	r3, [pc, #16]	; (20000100 <irq_handler+0x70>)
200000f0:	681a      	ldr	r2, [r3, #0]
200000f2:	4b03      	ldr	r3, [pc, #12]	; (20000100 <irq_handler+0x70>)
200000f4:	2102      	movs	r1, #2
200000f6:	430a      	orrs	r2, r1
200000f8:	601a      	str	r2, [r3, #0]
    }
}
200000fa:	46c0      	nop			; (mov r8, r8)
200000fc:	46bd      	mov	sp, r7
200000fe:	bd80      	pop	{r7, pc}
20000100:	40013c14 	andmi	r3, r1, r4, lsl ip
20000104:	40021010 	andmi	r1, r2, r0, lsl r0
20000108:	40021011 	andmi	r1, r2, r1, lsl r0
2000010c:	40020c15 	andmi	r0, r2, r5, lsl ip
20000110:	40020c14 	andmi	r0, r2, r4, lsl ip

20000114 <main>:



void main(void)
{
20000114:	b580      	push	{r7, lr}
20000116:	af00      	add	r7, sp, #0
	init_app();
20000118:	f7ff ff7a 	bl	20000010 <init_app>
	while(1);
2000011c:	e7fe      	b.n	2000011c <main+0x8>
2000011e:	46c0      	nop			; (mov r8, r8)

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000006a 	andeq	r0, r0, sl, rrx
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000034 	andeq	r0, r0, r4, lsr r0
  10:	0000000c 	andeq	r0, r0, ip
  14:	0000d200 	andeq	sp, r0, r0, lsl #4
	...
  24:	00b00200 	adcseq	r0, r0, r0, lsl #4
  28:	66010000 	strvs	r0, [r1], -r0
  2c:	00011406 	andeq	r1, r1, r6, lsl #8
  30:	00000a20 	andeq	r0, r0, r0, lsr #20
  34:	039c0100 	orrseq	r0, ip, #0, 2
  38:	000000bd 	strheq	r0, [r0], -sp
  3c:	90064301 	andls	r4, r6, r1, lsl #6
  40:	84200000 	strthi	r0, [r0], #-0
  44:	01000000 	mrseq	r0, (UNDEF: 0)
  48:	00c9039c 	smulleq	r0, r9, ip, r3
  4c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
  50:	00001006 	andeq	r1, r0, r6
  54:	00008020 	andeq	r8, r0, r0, lsr #32
  58:	039c0100 	orrseq	r0, ip, #0, 2
  5c:	000000b5 	strheq	r0, [r0], -r5
  60:	00060901 	andeq	r0, r6, r1, lsl #18
  64:	0c200000 	stceq	0, cr0, [r0], #-0
  68:	01000000 	mrseq	r0, (UNDEF: 0)
  6c:	Address 0x0000006c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	00194296 	mulseq	r9, r6, r2
  2c:	002e0300 	eoreq	r0, lr, r0, lsl #6
  30:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  3c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  40:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  44:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000010e 	andeq	r0, r0, lr, lsl #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000011e 	andcs	r0, r0, lr, lsl r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000f6 	strdeq	r0, [r0], -r6
   4:	004a0003 	subeq	r0, sl, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	322f7265 	eorcc	r7, pc, #1342177286	; 0x50000006
  30:	30363030 	eorscc	r3, r6, r0, lsr r0
  34:	70755f35 	rsbsvc	r5, r5, r5, lsr pc
  38:	5f336770 	svcpl	0x00336770
  3c:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  40:	7172695f 	cmnvc	r2, pc, asr r9
  44:	74730000 	ldrbtvc	r0, [r3], #-0
  48:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  4c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  50:	00000001 	andeq	r0, r0, r1
  54:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  58:	00000002 	andeq	r0, r0, r2
  5c:	01090320 	tsteq	r9, r0, lsr #6
  60:	2f212113 	svccs	0x00212113
  64:	00030221 	andeq	r0, r3, r1, lsr #4
  68:	01050101 	tsteq	r5, r1, lsl #2
  6c:	10020500 	andne	r0, r2, r0, lsl #10
  70:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  74:	0205012e 	andeq	r0, r5, #-2147483637	; 0x8000000b
  78:	2010052f 	andscs	r0, r0, pc, lsr #10
  7c:	052f0205 	streq	r0, [pc, #-517]!	; fffffe7f <main+0xdffffd6b>
  80:	15052010 	strne	r2, [r5, #-16]
  84:	69100531 	ldmdbvs	r0, {r0, r4, r5, r8, sl}
  88:	05671105 	strbeq	r1, [r7, #-261]!	; 0xfffffefb
  8c:	0505670e 	streq	r6, [r5, #-1806]	; 0xfffff8f2
  90:	20140569 	andscs	r0, r4, r9, ror #10
  94:	05311205 	ldreq	r1, [r1, #-517]!	; 0xfffffdfb
  98:	69086801 	stmdbvs	r8, {r0, fp, sp, lr}
  9c:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
  a0:	07052e12 	smladeq	r5, r2, lr, r2
  a4:	2306052e 	movwcs	r0, #25902	; 0x652e
  a8:	053c1605 	ldreq	r1, [ip, #-1541]!	; 0xfffff9fb
  ac:	07053c05 	streq	r3, [r5, -r5, lsl #24]
  b0:	3c170523 	cfldr32cc	mvfx0, [r7], {35}	; 0x23
  b4:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
  b8:	05052218 	streq	r2, [r5, #-536]	; 0xfffffde8
  bc:	20180520 	andscs	r0, r8, r0, lsr #10
  c0:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
  c4:	05053217 	streq	r3, [r5, #-535]	; 0xfffffde9
  c8:	20170520 	andscs	r0, r7, r0, lsr #10
  cc:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
  d0:	17053207 	strne	r3, [r5, -r7, lsl #4]
  d4:	3c06053c 	cfstr32cc	mvfx0, [r6], {60}	; 0x3c
  d8:	05220505 	streq	r0, [r2, #-1285]!	; 0xfffffafb
  dc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
  e0:	20150540 	andscs	r0, r5, r0, asr #10
  e4:	05321205 	ldreq	r1, [r2, #-517]!	; 0xfffffdfb
  e8:	05cd6801 	strbeq	r6, [sp, #2049]	; 0x801
  ec:	07052f02 	streq	r2, [r5, -r2, lsl #30]
  f0:	01040200 	mrseq	r0, R12_usr
  f4:	0001022f 	andeq	r0, r1, pc, lsr #4
  f8:	Address 0x000000f8 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6d2f3a44 	vstmdbvs	pc!, {s6-s73}
   4:	6c2f706f 	stcvs	0, cr7, [pc], #-444	; fffffe50 <main+0xdffffd3c>
   8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
   c:	6f697461 	svcvs	0x00697461
  10:	2f72656e 	svccs	0x0072656e
  14:	36303032 			; <UNDEFINED> instruction: 0x36303032
  18:	755f3530 	ldrbvc	r3, [pc, #-1328]	; fffffaf0 <main+0xdffff9dc>
  1c:	33677070 	cmncc	r7, #112	; 0x70
  20:	7478655f 	ldrbtvc	r6, [r8], #-1375	; 0xfffffaa1
  24:	72695f69 	rsbvc	r5, r9, #420	; 0x1a4
  28:	74732f71 	ldrbtvc	r2, [r3], #-3953	; 0xfffff08f
  2c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  30:	00632e70 	rsbeq	r2, r3, r0, ror lr
  34:	20554e47 	subscs	r4, r5, r7, asr #28
  38:	20393943 	eorscs	r3, r9, r3, asr #18
  3c:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
  40:	30322031 	eorscc	r2, r2, r1, lsr r0
  44:	30313931 	eorscc	r3, r1, r1, lsr r9
  48:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  4c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  50:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  54:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  58:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  5c:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  60:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  64:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  68:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  6c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  70:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  74:	205d3939 	subscs	r3, sp, r9, lsr r9
  78:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  7c:	20626d75 	rsbcs	r6, r2, r5, ror sp
  80:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  84:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  88:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  8c:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  90:	616d2d20 	cmnvs	sp, r0, lsr #26
  94:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  98:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  9c:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  a0:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  a4:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  a8:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  ac:	00393963 	eorseq	r3, r9, r3, ror #18
  b0:	6e69616d 	powvsez	f6, f1, #5.0
  b4:	61747300 	cmnvs	r4, r0, lsl #6
  b8:	70757472 	rsbsvc	r7, r5, r2, ror r4
  bc:	71726900 	cmnvc	r2, r0, lsl #18
  c0:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
  c4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
  c8:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
  cc:	70615f74 	rsbvc	r5, r1, r4, ror pc
  d0:	3a440070 	bcc	1100298 <startup-0x1eeffd68>
  d4:	706f6d5c 	rsbvc	r6, pc, ip, asr sp	; <UNPREDICTABLE>
  d8:	62616c5c 	rsbvs	r6, r1, #92, 24	; 0x5c00
  dc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  e0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  e4:	30325c72 	eorscc	r5, r2, r2, ror ip
  e8:	35303630 	ldrcc	r3, [r0, #-1584]!	; 0xfffff9d0
  ec:	7070755f 	rsbsvc	r7, r0, pc, asr r5
  f0:	655f3367 	ldrbvs	r3, [pc, #-871]	; fffffd91 <main+0xdffffc7d>
  f4:	5f697478 	svcpl	0x00697478
  f8:	00717269 	rsbseq	r7, r1, r9, ror #4

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000080 	andeq	r0, r0, r0, lsl #1
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000090 	mulcs	r0, r0, r0
  48:	00000084 	andeq	r0, r0, r4, lsl #1
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000114 	andcs	r0, r0, r4, lsl r1
  64:	0000000a 	andeq	r0, r0, sl
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
