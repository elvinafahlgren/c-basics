
Debug/200316_1_bitconverter:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f83c 	bl	20000080 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <bitconvert>:

unsigned int bitconvert(int method, unsigned int value)
{
20000010:	b580      	push	{r7, lr}
20000012:	b084      	sub	sp, #16
20000014:	af00      	add	r7, sp, #0
20000016:	6078      	str	r0, [r7, #4]
20000018:	6039      	str	r1, [r7, #0]
	unsigned int rv;
	switch( method & 3 )
2000001a:	687b      	ldr	r3, [r7, #4]
2000001c:	2203      	movs	r2, #3
2000001e:	4013      	ands	r3, r2
20000020:	2b03      	cmp	r3, #3
20000022:	d015      	beq.n	20000050 <bitconvert+0x40>
20000024:	dc23      	bgt.n	2000006e <bitconvert+0x5e>
20000026:	2b02      	cmp	r3, #2
20000028:	d00e      	beq.n	20000048 <bitconvert+0x38>
2000002a:	dc20      	bgt.n	2000006e <bitconvert+0x5e>
2000002c:	2b00      	cmp	r3, #0
2000002e:	d002      	beq.n	20000036 <bitconvert+0x26>
20000030:	2b01      	cmp	r3, #1
20000032:	d005      	beq.n	20000040 <bitconvert+0x30>
20000034:	e01b      	b.n	2000006e <bitconvert+0x5e>
	{
		/*om method (b1b0) = 00, returnera bitvis and av value */
		case 0: rv = 0x20000207 & value; break;
20000036:	683b      	ldr	r3, [r7, #0]
20000038:	4a0f      	ldr	r2, [pc, #60]	; (20000078 <bitconvert+0x68>)
2000003a:	4013      	ands	r3, r2
2000003c:	60fb      	str	r3, [r7, #12]
2000003e:	e016      	b.n	2000006e <bitconvert+0x5e>
		/*om method (b1b0) = 01, returnera bitvis komplement av value */
		case 1: rv = ~value; break;											// or rv = ( value ^ 0xFFFFFFFF )
20000040:	683b      	ldr	r3, [r7, #0]
20000042:	43db      	mvns	r3, r3
20000044:	60fb      	str	r3, [r7, #12]
20000046:	e012      	b.n	2000006e <bitconvert+0x5e>
		/*om method (b1b0) = 10, returnera de 16 mest signifikanta bitarna av value */
		case 2: rv = ( value >> 16 ); break;
20000048:	683b      	ldr	r3, [r7, #0]
2000004a:	0c1b      	lsrs	r3, r3, #16
2000004c:	60fb      	str	r3, [r7, #12]
2000004e:	e00e      	b.n	2000006e <bitconvert+0x5e>
		/*om method (b1b0) = 10, returnera det 32-bitars tal som bildas från det 16 bitars 
		 * teckenutvidgade extraherade tal från b24-b8 hos value */
		case 3: rv = ( (value >> 8) & 0xFFFF);
20000050:	683b      	ldr	r3, [r7, #0]
20000052:	0a1b      	lsrs	r3, r3, #8
20000054:	041b      	lsls	r3, r3, #16
20000056:	0c1b      	lsrs	r3, r3, #16
20000058:	60fb      	str	r3, [r7, #12]
				if(rv & 0x8000 )
2000005a:	68fa      	ldr	r2, [r7, #12]
2000005c:	2380      	movs	r3, #128	; 0x80
2000005e:	021b      	lsls	r3, r3, #8
20000060:	4013      	ands	r3, r2
20000062:	d003      	beq.n	2000006c <bitconvert+0x5c>
					rv = (rv | 0xFFFF0000 );
20000064:	68fb      	ldr	r3, [r7, #12]
20000066:	4a05      	ldr	r2, [pc, #20]	; (2000007c <bitconvert+0x6c>)
20000068:	4313      	orrs	r3, r2
2000006a:	60fb      	str	r3, [r7, #12]
				break;
2000006c:	46c0      	nop			; (mov r8, r8)
	}
	return rv;
2000006e:	68fb      	ldr	r3, [r7, #12]
}
20000070:	0018      	movs	r0, r3
20000072:	46bd      	mov	sp, r7
20000074:	b004      	add	sp, #16
20000076:	bd80      	pop	{r7, pc}
20000078:	20000207 	andcs	r0, r0, r7, lsl #4
2000007c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000

20000080 <main>:

void main(void)
{
20000080:	b580      	push	{r7, lr}
20000082:	af00      	add	r7, sp, #0
}
20000084:	46c0      	nop			; (mov r8, r8)
20000086:	46bd      	mov	sp, r7
20000088:	bd80      	pop	{r7, pc}
2000008a:	46c0      	nop			; (mov r8, r8)

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000009b 	muleq	r0, fp, r0
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000900c 	andeq	r9, r0, ip
  14:	0000d700 	andeq	sp, r0, r0, lsl #14
	...
  24:	00d20200 	sbcseq	r0, r2, r0, lsl #4
  28:	23010000 	movwcs	r0, #4096	; 0x1000
  2c:	00008006 	andeq	r8, r0, r6
  30:	00000a20 	andeq	r0, r0, r0, lsr #20
  34:	039c0100 	orrseq	r0, ip, #0, 2
  38:	00000101 	andeq	r0, r0, r1, lsl #2
  3c:	7e0e0e01 	cdpvc	14, 0, cr0, cr14, cr1, {0}
  40:	10000000 	andne	r0, r0, r0
  44:	70200000 	eorvc	r0, r0, r0
  48:	01000000 	mrseq	r0, (UNDEF: 0)
  4c:	00007e9c 	muleq	r0, ip, lr
  50:	00890400 	addeq	r0, r9, r0, lsl #8
  54:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
  58:	0000851d 	andeq	r8, r0, sp, lsl r5
  5c:	6c910200 	lfmvs	f0, 4, [r1], {0}
  60:	0000c404 	andeq	ip, r0, r4, lsl #8
  64:	320e0100 	andcc	r0, lr, #0, 2
  68:	0000007e 	andeq	r0, r0, lr, ror r0
  6c:	05689102 	strbeq	r9, [r8, #-258]!	; 0xfffffefe
  70:	01007672 	tsteq	r0, r2, ror r6
  74:	007e0f10 	rsbseq	r0, lr, r0, lsl pc
  78:	91020000 	mrsls	r0, (UNDEF: 2)
  7c:	04060074 	streq	r0, [r6], #-116	; 0xffffff8c
  80:	00007c07 	andeq	r7, r0, r7, lsl #24
  84:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
  88:	00746e69 	rsbseq	r6, r4, r9, ror #28
  8c:	0000ca02 	andeq	ip, r0, r2, lsl #20
  90:	06060100 	streq	r0, [r6], -r0, lsl #2
  94:	20000000 	andcs	r0, r0, r0
  98:	0000000c 	andeq	r0, r0, ip
  9c:	Address 0x0000009c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	00194297 	mulseq	r9, r7, r2
  2c:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
  30:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  3c:	01111349 	tsteq	r1, r9, asr #6
  40:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  44:	01194297 			; <UNDEFINED> instruction: 0x01194297
  48:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  4c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
  50:	0b3b0b3a 	bleq	ec2d40 <startup-0x1f13d2c0>
  54:	13490b39 	movtne	r0, #39737	; 0x9b39
  58:	00001802 	andeq	r1, r0, r2, lsl #16
  5c:	03003405 	movweq	r3, #1029	; 0x405
  60:	3b0b3a08 	blcc	2ce888 <startup-0x1fd31778>
  64:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  68:	00180213 	andseq	r0, r8, r3, lsl r2
  6c:	00240600 	eoreq	r0, r4, r0, lsl #12
  70:	0b3e0b0b 	bleq	f82ca4 <startup-0x1f07d35c>
  74:	00000e03 	andeq	r0, r0, r3, lsl #28
  78:	0b002407 	bleq	909c <startup-0x1fff6f64>
  7c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  80:	00000008 	andeq	r0, r0, r8

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000007a 	andeq	r0, r0, sl, ror r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000008a 	andcs	r0, r0, sl, lsl #1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000a7 	andeq	r0, r0, r7, lsr #1
   4:	004a0003 	subeq	r0, sl, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	322f7265 	eorcc	r7, pc, #1342177286	; 0x50000006
  30:	31333030 	teqcc	r3, r0, lsr r0
  34:	5f315f36 	svcpl	0x00315f36
  38:	63746962 	cmnvs	r4, #1605632	; 0x188000
  3c:	65766e6f 	ldrbvs	r6, [r6, #-3695]!	; 0xfffff191
  40:	72657472 	rsbvc	r7, r5, #1912602624	; 0x72000000
  44:	74730000 	ldrbtvc	r0, [r3], #-0
  48:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  4c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  50:	00000001 	andeq	r0, r0, r1
  54:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  58:	00000002 	andeq	r0, r0, r2
  5c:	21131820 	tstcs	r3, r0, lsr #16
  60:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
  64:	01010003 	tsteq	r1, r3
  68:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  6c:	00001002 	andeq	r1, r0, r2
  70:	010e0320 	tsteq	lr, r0, lsr #6
  74:	055a1105 	ldrbeq	r1, [sl, #-261]	; 0xfffffefb
  78:	0e053c02 	cdpeq	12, 0, cr3, cr5, cr2, {0}
  7c:	4a0305af 	bmi	c1740 <startup-0x1ff3e8c0>
  80:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
  84:	0e053c03 	cdpeq	12, 0, cr3, cr5, cr3, {0}
  88:	3c030522 	cfstr32cc	mvfx0, [r3], {34}	; 0x22
  8c:	05231905 	streq	r1, [r3, #-2309]!	; 0xfffff6fb
  90:	0b052e0e 	bleq	14b8d0 <startup-0x1feb4730>
  94:	4a07053d 	bmi	1c1590 <startup-0x1fe3ea70>
  98:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
  9c:	09054b05 	stmdbeq	r5, {r0, r2, r8, r9, fp, lr}
  a0:	21010522 	tstcs	r1, r2, lsr #10
  a4:	03022f85 	movweq	r2, #12165	; 0x2f85
  a8:	Address 0x000000a8 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	74656d00 	strbtvc	r6, [r5], #-3328	; 0xfffff300
  8c:	00646f68 	rsbeq	r6, r4, r8, ror #30
  90:	6d2f3a44 	vstmdbvs	pc!, {s6-s73}
  94:	6c2f706f 	stcvs	0, cr7, [pc], #-444	; fffffee0 <main+0xdffffe60>
  98:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
  9c:	6f697461 	svcvs	0x00697461
  a0:	2f72656e 	svccs	0x0072656e
  a4:	33303032 	teqcc	r0, #50	; 0x32
  a8:	315f3631 	cmpcc	pc, r1, lsr r6	; <UNPREDICTABLE>
  ac:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  b0:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
  b4:	65747265 	ldrbvs	r7, [r4, #-613]!	; 0xfffffd9b
  b8:	74732f72 	ldrbtvc	r2, [r3], #-3954	; 0xfffff08e
  bc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  c0:	00632e70 	rsbeq	r2, r3, r0, ror lr
  c4:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
  c8:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
  cc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  d0:	616d0070 	smcvs	53248	; 0xd000
  d4:	44006e69 	strmi	r6, [r0], #-3689	; 0xfffff197
  d8:	6f6d5c3a 	svcvs	0x006d5c3a
  dc:	616c5c70 	smcvs	50624	; 0xc5c0
  e0:	61726f62 	cmnvs	r2, r2, ror #30
  e4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  e8:	325c7265 	subscc	r7, ip, #1342177286	; 0x50000006
  ec:	31333030 	teqcc	r3, r0, lsr r0
  f0:	5f315f36 	svcpl	0x00315f36
  f4:	63746962 	cmnvs	r4, #1605632	; 0x188000
  f8:	65766e6f 	ldrbvs	r6, [r6, #-3695]!	; 0xfffff191
  fc:	72657472 	rsbvc	r7, r5, #1912602624	; 0x72000000
 100:	74696200 	strbtvc	r6, [r9], #-512	; 0xfffffe00
 104:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
 108:	00747265 	rsbseq	r7, r4, r5, ror #4

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000070 	andeq	r0, r0, r0, ror r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  3c:	00000007 	andeq	r0, r0, r7
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000080 	andcs	r0, r0, r0, lsl #1
  4c:	0000000a 	andeq	r0, r0, sl
  50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  54:	41018e02 	tstmi	r1, r2, lsl #28
  58:	0000070d 	andeq	r0, r0, sp, lsl #14
