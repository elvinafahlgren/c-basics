
Debug/mop4-4:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f924 	bl	20000250 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <irq_handler0>:
#define EXTI0_IRQ_BPOS          (1<<0)

static volatile int count;

void irq_handler0 ( void )
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    /* Om avbrott från EXTI0:
     * kvittera avbrott från EXTI0 */
    if( *EXTI_PR & EXTI0_IRQ_BPOS )
20000014:	4b14      	ldr	r3, [pc, #80]	; (20000068 <irq_handler0+0x58>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	2201      	movs	r2, #1
2000001a:	4013      	ands	r3, r2
2000001c:	d021      	beq.n	20000062 <irq_handler0+0x52>
    {
        //count++;
        * EXTI_PR |= EXTI0_IRQ_BPOS;
2000001e:	4b12      	ldr	r3, [pc, #72]	; (20000068 <irq_handler0+0x58>)
20000020:	681a      	ldr	r2, [r3, #0]
20000022:	4b11      	ldr	r3, [pc, #68]	; (20000068 <irq_handler0+0x58>)
20000024:	2101      	movs	r1, #1
20000026:	430a      	orrs	r2, r1
20000028:	601a      	str	r2, [r3, #0]
        
        if ( *GPIO_E_IDR_LOW & 0x1 ){  //0001
2000002a:	4b10      	ldr	r3, [pc, #64]	; (2000006c <irq_handler0+0x5c>)
2000002c:	781b      	ldrb	r3, [r3, #0]
2000002e:	b2db      	uxtb	r3, r3
20000030:	001a      	movs	r2, r3
20000032:	2301      	movs	r3, #1
20000034:	4013      	ands	r3, r2
20000036:	d014      	beq.n	20000062 <irq_handler0+0x52>
            *GPIO_E_ODR_LOW |= 16;  //              ettställ PE4
20000038:	4b0d      	ldr	r3, [pc, #52]	; (20000070 <irq_handler0+0x60>)
2000003a:	781b      	ldrb	r3, [r3, #0]
2000003c:	b2db      	uxtb	r3, r3
2000003e:	4a0c      	ldr	r2, [pc, #48]	; (20000070 <irq_handler0+0x60>)
20000040:	2110      	movs	r1, #16
20000042:	430b      	orrs	r3, r1
20000044:	b2db      	uxtb	r3, r3
20000046:	7013      	strb	r3, [r2, #0]
            *GPIO_E_ODR_LOW &= ~16; // 10000 01111  nollställ PE4
20000048:	4b09      	ldr	r3, [pc, #36]	; (20000070 <irq_handler0+0x60>)
2000004a:	781b      	ldrb	r3, [r3, #0]
2000004c:	b2db      	uxtb	r3, r3
2000004e:	4a08      	ldr	r2, [pc, #32]	; (20000070 <irq_handler0+0x60>)
20000050:	2110      	movs	r1, #16
20000052:	438b      	bics	r3, r1
20000054:	b2db      	uxtb	r3, r3
20000056:	7013      	strb	r3, [r2, #0]
            count++;
20000058:	4b06      	ldr	r3, [pc, #24]	; (20000074 <irq_handler0+0x64>)
2000005a:	681b      	ldr	r3, [r3, #0]
2000005c:	1c5a      	adds	r2, r3, #1
2000005e:	4b05      	ldr	r3, [pc, #20]	; (20000074 <irq_handler0+0x64>)
20000060:	601a      	str	r2, [r3, #0]
        }
    }
}
20000062:	46c0      	nop			; (mov r8, r8)
20000064:	46bd      	mov	sp, r7
20000066:	bd80      	pop	{r7, pc}
20000068:	40013c14 	andmi	r3, r1, r4, lsl ip
2000006c:	40021010 	andmi	r1, r2, r0, lsl r0
20000070:	40021014 	andmi	r1, r2, r4, lsl r0
20000074:	2000026c 	andcs	r0, r0, ip, ror #4

20000078 <irq_handler1>:

void irq_handler1 ( void )
{
20000078:	b580      	push	{r7, lr}
2000007a:	af00      	add	r7, sp, #0
    /* Om avbrott från EXTI1:
     * kvittera avbrott från EXTI1 */
    if( *EXTI_PR & EXTI1_IRQ_BPOS )
2000007c:	4b13      	ldr	r3, [pc, #76]	; (200000cc <irq_handler1+0x54>)
2000007e:	681b      	ldr	r3, [r3, #0]
20000080:	2202      	movs	r2, #2
20000082:	4013      	ands	r3, r2
20000084:	d01f      	beq.n	200000c6 <irq_handler1+0x4e>
    {
        //count++;
        * EXTI_PR |= EXTI1_IRQ_BPOS;
20000086:	4b11      	ldr	r3, [pc, #68]	; (200000cc <irq_handler1+0x54>)
20000088:	681a      	ldr	r2, [r3, #0]
2000008a:	4b10      	ldr	r3, [pc, #64]	; (200000cc <irq_handler1+0x54>)
2000008c:	2102      	movs	r1, #2
2000008e:	430a      	orrs	r2, r1
20000090:	601a      	str	r2, [r3, #0]

        if ( *GPIO_E_IDR_LOW & 0x2){   //0010
20000092:	4b0f      	ldr	r3, [pc, #60]	; (200000d0 <irq_handler1+0x58>)
20000094:	781b      	ldrb	r3, [r3, #0]
20000096:	b2db      	uxtb	r3, r3
20000098:	001a      	movs	r2, r3
2000009a:	2302      	movs	r3, #2
2000009c:	4013      	ands	r3, r2
2000009e:	d012      	beq.n	200000c6 <irq_handler1+0x4e>
            *GPIO_E_ODR_LOW |= 32;  // 100000        ettställ PE5
200000a0:	4b0c      	ldr	r3, [pc, #48]	; (200000d4 <irq_handler1+0x5c>)
200000a2:	781b      	ldrb	r3, [r3, #0]
200000a4:	b2db      	uxtb	r3, r3
200000a6:	4a0b      	ldr	r2, [pc, #44]	; (200000d4 <irq_handler1+0x5c>)
200000a8:	2120      	movs	r1, #32
200000aa:	430b      	orrs	r3, r1
200000ac:	b2db      	uxtb	r3, r3
200000ae:	7013      	strb	r3, [r2, #0]
            *GPIO_E_ODR_LOW &= ~32; // 100000 011111 nollställ PE5
200000b0:	4b08      	ldr	r3, [pc, #32]	; (200000d4 <irq_handler1+0x5c>)
200000b2:	781b      	ldrb	r3, [r3, #0]
200000b4:	b2db      	uxtb	r3, r3
200000b6:	4a07      	ldr	r2, [pc, #28]	; (200000d4 <irq_handler1+0x5c>)
200000b8:	2120      	movs	r1, #32
200000ba:	438b      	bics	r3, r1
200000bc:	b2db      	uxtb	r3, r3
200000be:	7013      	strb	r3, [r2, #0]
            count = 0;
200000c0:	4b05      	ldr	r3, [pc, #20]	; (200000d8 <irq_handler1+0x60>)
200000c2:	2200      	movs	r2, #0
200000c4:	601a      	str	r2, [r3, #0]
        }
    }
}
200000c6:	46c0      	nop			; (mov r8, r8)
200000c8:	46bd      	mov	sp, r7
200000ca:	bd80      	pop	{r7, pc}
200000cc:	40013c14 	andmi	r3, r1, r4, lsl ip
200000d0:	40021010 	andmi	r1, r2, r0, lsl r0
200000d4:	40021014 	andmi	r1, r2, r4, lsl r0
200000d8:	2000026c 	andcs	r0, r0, ip, ror #4

200000dc <irq_handler2>:
void irq_handler2 ( void )
{
200000dc:	b580      	push	{r7, lr}
200000de:	af00      	add	r7, sp, #0
    /* Om avbrott från EXTI2:
     * kvittera avbrott från EXTI2 */
    if( *EXTI_PR & EXTI2_IRQ_BPOS )
200000e0:	4b18      	ldr	r3, [pc, #96]	; (20000144 <irq_handler2+0x68>)
200000e2:	681b      	ldr	r3, [r3, #0]
200000e4:	2204      	movs	r2, #4
200000e6:	4013      	ands	r3, r2
200000e8:	d028      	beq.n	2000013c <irq_handler2+0x60>
    {
        //count++;
        * EXTI_PR |= EXTI2_IRQ_BPOS;
200000ea:	4b16      	ldr	r3, [pc, #88]	; (20000144 <irq_handler2+0x68>)
200000ec:	681a      	ldr	r2, [r3, #0]
200000ee:	4b15      	ldr	r3, [pc, #84]	; (20000144 <irq_handler2+0x68>)
200000f0:	2104      	movs	r1, #4
200000f2:	430a      	orrs	r2, r1
200000f4:	601a      	str	r2, [r3, #0]

        if ( *GPIO_E_IDR_LOW & 0x4){   //0100
200000f6:	4b14      	ldr	r3, [pc, #80]	; (20000148 <irq_handler2+0x6c>)
200000f8:	781b      	ldrb	r3, [r3, #0]
200000fa:	b2db      	uxtb	r3, r3
200000fc:	001a      	movs	r2, r3
200000fe:	2304      	movs	r3, #4
20000100:	4013      	ands	r3, r2
20000102:	d01b      	beq.n	2000013c <irq_handler2+0x60>
            *GPIO_E_ODR_LOW |= 64;  // 1000000         ettställ PE6
20000104:	4b11      	ldr	r3, [pc, #68]	; (2000014c <irq_handler2+0x70>)
20000106:	781b      	ldrb	r3, [r3, #0]
20000108:	b2db      	uxtb	r3, r3
2000010a:	4a10      	ldr	r2, [pc, #64]	; (2000014c <irq_handler2+0x70>)
2000010c:	2140      	movs	r1, #64	; 0x40
2000010e:	430b      	orrs	r3, r1
20000110:	b2db      	uxtb	r3, r3
20000112:	7013      	strb	r3, [r2, #0]
            *GPIO_E_ODR_LOW &= ~64; // 1000000 0111111 nollställ PE5
20000114:	4b0d      	ldr	r3, [pc, #52]	; (2000014c <irq_handler2+0x70>)
20000116:	781b      	ldrb	r3, [r3, #0]
20000118:	b2db      	uxtb	r3, r3
2000011a:	4a0c      	ldr	r2, [pc, #48]	; (2000014c <irq_handler2+0x70>)
2000011c:	2140      	movs	r1, #64	; 0x40
2000011e:	438b      	bics	r3, r1
20000120:	b2db      	uxtb	r3, r3
20000122:	7013      	strb	r3, [r2, #0]
            
            if ( *GPIO_D_ODR_LOW == 0xFF ){
20000124:	4b0a      	ldr	r3, [pc, #40]	; (20000150 <irq_handler2+0x74>)
20000126:	781b      	ldrb	r3, [r3, #0]
20000128:	b2db      	uxtb	r3, r3
2000012a:	2bff      	cmp	r3, #255	; 0xff
2000012c:	d103      	bne.n	20000136 <irq_handler2+0x5a>
                *GPIO_D_ODR_LOW = 0;
2000012e:	4b08      	ldr	r3, [pc, #32]	; (20000150 <irq_handler2+0x74>)
20000130:	2200      	movs	r2, #0
20000132:	701a      	strb	r2, [r3, #0]
            else {
                *GPIO_D_ODR_LOW = 0xFF;
            }
        }
    }
}
20000134:	e002      	b.n	2000013c <irq_handler2+0x60>
                *GPIO_D_ODR_LOW = 0xFF;
20000136:	4b06      	ldr	r3, [pc, #24]	; (20000150 <irq_handler2+0x74>)
20000138:	22ff      	movs	r2, #255	; 0xff
2000013a:	701a      	strb	r2, [r3, #0]
}
2000013c:	46c0      	nop			; (mov r8, r8)
2000013e:	46bd      	mov	sp, r7
20000140:	bd80      	pop	{r7, pc}
20000142:	46c0      	nop			; (mov r8, r8)
20000144:	40013c14 	andmi	r3, r1, r4, lsl ip
20000148:	40021010 	andmi	r1, r2, r0, lsl r0
2000014c:	40021014 	andmi	r1, r2, r4, lsl r0
20000150:	40020c14 	andmi	r0, r2, r4, lsl ip

20000154 <init_app>:

void init_app(void){
20000154:	b580      	push	{r7, lr}
20000156:	af00      	add	r7, sp, #0
    
    * ( (unsigned short *) 0x40021000) = 0x5500;        // GPIO_MODER E 
20000158:	4b2c      	ldr	r3, [pc, #176]	; (2000020c <init_app+0xb8>)
2000015a:	22aa      	movs	r2, #170	; 0xaa
2000015c:	01d2      	lsls	r2, r2, #7
2000015e:	801a      	strh	r2, [r3, #0]
    * ( (unsigned char *) 0x40021010) = 0x0;        // GPIO_E_IDR_LOW
20000160:	4b2b      	ldr	r3, [pc, #172]	; (20000210 <init_app+0xbc>)
20000162:	2200      	movs	r2, #0
20000164:	701a      	strb	r2, [r3, #0]
    * ( (unsigned char *) 0x40021014) = 0x0;        // GPIO_E_ODR_LOW
20000166:	4b2b      	ldr	r3, [pc, #172]	; (20000214 <init_app+0xc0>)
20000168:	2200      	movs	r2, #0
2000016a:	701a      	strb	r2, [r3, #0]


    * ( (unsigned char *) 0x40020C14) = 0x0;
2000016c:	4b2a      	ldr	r3, [pc, #168]	; (20000218 <init_app+0xc4>)
2000016e:	2200      	movs	r2, #0
20000170:	701a      	strb	r2, [r3, #0]
    * ( (unsigned long *) 0x40020C00) = 0x00005555;  // GPIO_MODER D initieras
20000172:	4b2a      	ldr	r3, [pc, #168]	; (2000021c <init_app+0xc8>)
20000174:	4a2a      	ldr	r2, [pc, #168]	; (20000220 <init_app+0xcc>)
20000176:	601a      	str	r2, [r3, #0]

    /* koppla PE0, PE1, PE2 till EXTI*/
    *SYSCFG_EXTICR1 |= 0x0444;
20000178:	4b2a      	ldr	r3, [pc, #168]	; (20000224 <init_app+0xd0>)
2000017a:	681a      	ldr	r2, [r3, #0]
2000017c:	4b29      	ldr	r3, [pc, #164]	; (20000224 <init_app+0xd0>)
2000017e:	492a      	ldr	r1, [pc, #168]	; (20000228 <init_app+0xd4>)
20000180:	430a      	orrs	r2, r1
20000182:	601a      	str	r2, [r3, #0]

    /* Konfigurera EXTI2, EXTI1, EXTI0 för att generera avbrott */
    * EXTI_IMR |= EXTI2_IRQ_BPOS;   
20000184:	4b29      	ldr	r3, [pc, #164]	; (2000022c <init_app+0xd8>)
20000186:	681a      	ldr	r2, [r3, #0]
20000188:	4b28      	ldr	r3, [pc, #160]	; (2000022c <init_app+0xd8>)
2000018a:	2104      	movs	r1, #4
2000018c:	430a      	orrs	r2, r1
2000018e:	601a      	str	r2, [r3, #0]
    * EXTI_IMR |= EXTI1_IRQ_BPOS;  
20000190:	4b26      	ldr	r3, [pc, #152]	; (2000022c <init_app+0xd8>)
20000192:	681a      	ldr	r2, [r3, #0]
20000194:	4b25      	ldr	r3, [pc, #148]	; (2000022c <init_app+0xd8>)
20000196:	2102      	movs	r1, #2
20000198:	430a      	orrs	r2, r1
2000019a:	601a      	str	r2, [r3, #0]
    * EXTI_IMR |= EXTI0_IRQ_BPOS;   
2000019c:	4b23      	ldr	r3, [pc, #140]	; (2000022c <init_app+0xd8>)
2000019e:	681a      	ldr	r2, [r3, #0]
200001a0:	4b22      	ldr	r3, [pc, #136]	; (2000022c <init_app+0xd8>)
200001a2:	2101      	movs	r1, #1
200001a4:	430a      	orrs	r2, r1
200001a6:	601a      	str	r2, [r3, #0]
 

    * EXTI_RTSR |= EXTI2_IRQ_BPOS;
200001a8:	4b21      	ldr	r3, [pc, #132]	; (20000230 <init_app+0xdc>)
200001aa:	681a      	ldr	r2, [r3, #0]
200001ac:	4b20      	ldr	r3, [pc, #128]	; (20000230 <init_app+0xdc>)
200001ae:	2104      	movs	r1, #4
200001b0:	430a      	orrs	r2, r1
200001b2:	601a      	str	r2, [r3, #0]
    * EXTI_RTSR |= EXTI1_IRQ_BPOS;
200001b4:	4b1e      	ldr	r3, [pc, #120]	; (20000230 <init_app+0xdc>)
200001b6:	681a      	ldr	r2, [r3, #0]
200001b8:	4b1d      	ldr	r3, [pc, #116]	; (20000230 <init_app+0xdc>)
200001ba:	2102      	movs	r1, #2
200001bc:	430a      	orrs	r2, r1
200001be:	601a      	str	r2, [r3, #0]
    * EXTI_RTSR |= EXTI0_IRQ_BPOS;
200001c0:	4b1b      	ldr	r3, [pc, #108]	; (20000230 <init_app+0xdc>)
200001c2:	681a      	ldr	r2, [r3, #0]
200001c4:	4b1a      	ldr	r3, [pc, #104]	; (20000230 <init_app+0xdc>)
200001c6:	2101      	movs	r1, #1
200001c8:	430a      	orrs	r2, r1
200001ca:	601a      	str	r2, [r3, #0]

    * EXTI0_IRQVEC = irq_handler0;             //sätt upp avbrottsvektor 0
200001cc:	4b19      	ldr	r3, [pc, #100]	; (20000234 <init_app+0xe0>)
200001ce:	4a1a      	ldr	r2, [pc, #104]	; (20000238 <init_app+0xe4>)
200001d0:	601a      	str	r2, [r3, #0]
    * EXTI1_IRQVEC = irq_handler1;             //sätt upp avbrottsvektor 1
200001d2:	4b1a      	ldr	r3, [pc, #104]	; (2000023c <init_app+0xe8>)
200001d4:	4a1a      	ldr	r2, [pc, #104]	; (20000240 <init_app+0xec>)
200001d6:	601a      	str	r2, [r3, #0]
    * EXTI2_IRQVEC = irq_handler2;             //sätt upp avbrottsvektor 2
200001d8:	4b1a      	ldr	r3, [pc, #104]	; (20000244 <init_app+0xf0>)
200001da:	4a1b      	ldr	r2, [pc, #108]	; (20000248 <init_app+0xf4>)
200001dc:	601a      	str	r2, [r3, #0]

    /* konfig den bit i NVIC som kontrollerarar den avbrottslina som EXTI2 EXTI1 EXTI0 kopplats till */
    * NVIC_ISER0 |= NVIC_EXTI2_IRQ_BPOS;
200001de:	4b1b      	ldr	r3, [pc, #108]	; (2000024c <init_app+0xf8>)
200001e0:	681a      	ldr	r2, [r3, #0]
200001e2:	4b1a      	ldr	r3, [pc, #104]	; (2000024c <init_app+0xf8>)
200001e4:	2180      	movs	r1, #128	; 0x80
200001e6:	0049      	lsls	r1, r1, #1
200001e8:	430a      	orrs	r2, r1
200001ea:	601a      	str	r2, [r3, #0]
    * NVIC_ISER0 |= NVIC_EXTI1_IRQ_BPOS;
200001ec:	4b17      	ldr	r3, [pc, #92]	; (2000024c <init_app+0xf8>)
200001ee:	681a      	ldr	r2, [r3, #0]
200001f0:	4b16      	ldr	r3, [pc, #88]	; (2000024c <init_app+0xf8>)
200001f2:	2180      	movs	r1, #128	; 0x80
200001f4:	430a      	orrs	r2, r1
200001f6:	601a      	str	r2, [r3, #0]
    * NVIC_ISER0 |= NVIC_EXTI0_IRQ_BPOS;
200001f8:	4b14      	ldr	r3, [pc, #80]	; (2000024c <init_app+0xf8>)
200001fa:	681a      	ldr	r2, [r3, #0]
200001fc:	4b13      	ldr	r3, [pc, #76]	; (2000024c <init_app+0xf8>)
200001fe:	2140      	movs	r1, #64	; 0x40
20000200:	430a      	orrs	r2, r1
20000202:	601a      	str	r2, [r3, #0]

}
20000204:	46c0      	nop			; (mov r8, r8)
20000206:	46bd      	mov	sp, r7
20000208:	bd80      	pop	{r7, pc}
2000020a:	46c0      	nop			; (mov r8, r8)
2000020c:	40021000 	andmi	r1, r2, r0
20000210:	40021010 	andmi	r1, r2, r0, lsl r0
20000214:	40021014 	andmi	r1, r2, r4, lsl r0
20000218:	40020c14 	andmi	r0, r2, r4, lsl ip
2000021c:	40020c00 	andmi	r0, r2, r0, lsl #24
20000220:	00005555 	andeq	r5, r0, r5, asr r5
20000224:	40013808 	andmi	r3, r1, r8, lsl #16
20000228:	00000444 	andeq	r0, r0, r4, asr #8
2000022c:	40013c00 	andmi	r3, r1, r0, lsl #24
20000230:	40013c08 	andmi	r3, r1, r8, lsl #24
20000234:	2001c058 	andcs	ip, r1, r8, asr r0
20000238:	20000011 	andcs	r0, r0, r1, lsl r0
2000023c:	2001c05c 	andcs	ip, r1, ip, asr r0
20000240:	20000079 	andcs	r0, r0, r9, ror r0
20000244:	2001c060 	andcs	ip, r1, r0, rrx
20000248:	200000dd 	ldrdcs	r0, [r0], -sp
2000024c:	e000e100 	and	lr, r0, r0, lsl #2

20000250 <main>:
void main(void)
{
20000250:	b580      	push	{r7, lr}
20000252:	af00      	add	r7, sp, #0
    init_app();
20000254:	f7ff ff7e 	bl	20000154 <init_app>
    while(1){
        * GPIO_D_ODR_LOW = count;
20000258:	4b02      	ldr	r3, [pc, #8]	; (20000264 <main+0x14>)
2000025a:	681a      	ldr	r2, [r3, #0]
2000025c:	4b02      	ldr	r3, [pc, #8]	; (20000268 <main+0x18>)
2000025e:	b2d2      	uxtb	r2, r2
20000260:	701a      	strb	r2, [r3, #0]
20000262:	e7f9      	b.n	20000258 <main+0x8>
20000264:	2000026c 	andcs	r0, r0, ip, ror #4
20000268:	40020c14 	andmi	r0, r2, r4, lsl ip

2000026c <count>:
2000026c:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000ac 	andeq	r0, r0, ip, lsr #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000cd0c 	andeq	ip, r0, ip, lsl #26
  14:	0000b200 	andeq	fp, r0, r0, lsl #4
	...
  24:	00a70200 	adceq	r0, r7, r0, lsl #4
  28:	2d010000 	stccs	0, cr0, [r1, #-0]
  2c:	00003e15 	andeq	r3, r0, r5, lsl lr
  30:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
  34:	03200002 			; <UNDEFINED> instruction: 0x03200002
  38:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  3c:	37040074 	smlsdxcc	r4, r4, r0, r0
  40:	05000000 	streq	r0, [r0, #-0]
  44:	000000ad 	andeq	r0, r0, sp, lsr #1
  48:	50068801 	andpl	r8, r6, r1, lsl #16
  4c:	1c200002 	stcne	0, cr0, [r0], #-8
  50:	01000000 	mrseq	r0, (UNDEF: 0)
  54:	0096069c 	umullseq	r0, r6, ip, r6
  58:	67010000 	strvs	r0, [r1, -r0]
  5c:	00015406 	andeq	r5, r1, r6, lsl #8
  60:	0000fc20 	andeq	pc, r0, r0, lsr #24
  64:	069c0100 	ldreq	r0, [ip], r0, lsl #2
  68:	0000007c 	andeq	r0, r0, ip, ror r0
  6c:	dc065001 	stcle	0, cr5, [r6], {1}
  70:	78200000 	stmdavc	r0!, {}	; <UNPREDICTABLE>
  74:	01000000 	mrseq	r0, (UNDEF: 0)
  78:	0089069c 	umulleq	r0, r9, ip, r6
  7c:	40010000 	andmi	r0, r1, r0
  80:	00007806 	andeq	r7, r0, r6, lsl #16
  84:	00006420 	andeq	r6, r0, r0, lsr #8
  88:	069c0100 	ldreq	r0, [ip], r0, lsl #2
  8c:	00000100 	andeq	r0, r0, r0, lsl #2
  90:	10062f01 	andne	r2, r6, r1, lsl #30
  94:	68200000 	stmdavs	r0!, {}	; <UNPREDICTABLE>
  98:	01000000 	mrseq	r0, (UNDEF: 0)
  9c:	009f069c 	umullseq	r0, pc, ip, r6	; <UNPREDICTABLE>
  a0:	06010000 	streq	r0, [r1], -r0
  a4:	00000006 	andeq	r0, r0, r6
  a8:	00000c20 	andeq	r0, r0, r0, lsr #24
  ac:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	00001802 	andeq	r1, r0, r2, lsl #16
  24:	0b002403 	bleq	9038 <startup-0x1fff6fc8>
  28:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  2c:	04000008 	streq	r0, [r0], #-8
  30:	13490035 	movtne	r0, #36917	; 0x9035
  34:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  38:	03193f00 	tsteq	r9, #0, 30
  3c:	3b0b3a0e 	blcc	2ce87c <startup-0x1fd31784>
  40:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  44:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  48:	96184006 	ldrls	r4, [r8], -r6
  4c:	00001942 	andeq	r1, r0, r2, asr #18
  50:	3f002e06 	svccc	0x00002e06
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  5c:	1119270b 	tstne	r9, fp, lsl #14
  60:	40061201 	andmi	r1, r6, r1, lsl #4
  64:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  68:	Address 0x00000068 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000025c 	andeq	r0, r0, ip, asr r2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000026c 	andcs	r0, r0, ip, ror #4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000148 	andeq	r0, r0, r8, asr #2
   4:	00490003 	subeq	r0, r9, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f6d2f3a 	svcvs	0x006d2f3a
  20:	616c2f70 	smcvs	49904	; 0xc2f0
  24:	61726f62 	cmnvs	r2, r2, ror #30
  28:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  2c:	6d2f7265 	sfmvs	f7, 4, [pc, #-404]!	; fffffea0 <count+0xdffffc34>
  30:	2d34706f 	ldccs	0, cr7, [r4, #-444]!	; 0xfffffe44
  34:	66000034 			; <UNDEFINED> instruction: 0x66000034
  38:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
  3c:	5f706f6c 	svcpl	0x00706f6c
  40:	5f717269 	svcpl	0x00717269
  44:	74636576 	strbtvc	r6, [r3], #-1398	; 0xfffffa8a
  48:	6465726f 	strbtvs	r7, [r5], #-623	; 0xfffffd91
  4c:	0100632e 	tsteq	r0, lr, lsr #6
  50:	05000000 	streq	r0, [r0, #-0]
  54:	02050001 	andeq	r0, r5, #1
  58:	20000000 	andcs	r0, r0, r0
  5c:	21211318 			; <UNDEFINED> instruction: 0x21211318
  60:	0302212f 	movweq	r2, #8495	; 0x212f
  64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  68:	02050001 	andeq	r0, r5, #1
  6c:	20000010 	andcs	r0, r0, r0, lsl r0
  70:	05012f03 	streq	r2, [r1, #-3843]	; 0xfffff0fd
  74:	12053109 	andne	r3, r5, #1073741826	; 0x40000002
  78:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
  7c:	05231305 	streq	r1, [r3, #-773]!	; 0xfffffcfb
  80:	1e05680e 	cdpne	8, 0, cr6, cr5, cr14, {0}
  84:	3c0c053c 	cfstr32cc	mvfx0, [ip], {60}	; 0x3c
  88:	83211d05 			; <UNDEFINED> instruction: 0x83211d05
  8c:	05831205 	streq	r1, [r3, #517]	; 0x205
  90:	05af5b01 	streq	r5, [pc, #2817]!	; b99 <startup-0x1ffff467>
  94:	12053109 	andne	r3, r5, #1073741826	; 0x40000002
  98:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
  9c:	05231305 	streq	r1, [r3, #-773]!	; 0xfffffcfb
  a0:	1e05680e 	cdpne	8, 0, cr6, cr5, cr14, {0}
  a4:	3c0c053c 	cfstr32cc	mvfx0, [ip], {60}	; 0x3c
  a8:	83211d05 			; <UNDEFINED> instruction: 0x83211d05
  ac:	05831305 	streq	r1, [r3, #773]	; 0x305
  b0:	05ae3f01 	streq	r3, [lr, #3841]!	; 0xf01
  b4:	12053109 	andne	r3, r5, #1073741826	; 0x40000002
  b8:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
  bc:	05231305 	streq	r1, [r3, #-773]!	; 0xfffffcfb
  c0:	1e05680e 	cdpne	8, 0, cr6, cr5, cr14, {0}
  c4:	3c0c053c 	cfstr32cc	mvfx0, [ip], {60}	; 0x3c
  c8:	83211d05 			; <UNDEFINED> instruction: 0x83211d05
  cc:	05841205 	streq	r1, [r4, #517]	; 0x205
  d0:	11053c10 	tstne	r5, r0, lsl ip
  d4:	2021052f 	eorcs	r0, r1, pc, lsr #10
  d8:	05350105 	ldreq	r0, [r5, #-261]!	; 0xfffffefb
  dc:	21051c11 	tstcs	r5, r1, lsl ip
  e0:	32010520 	andcc	r0, r1, #32, 10	; 0x8000000
  e4:	05bc1405 	ldreq	r1, [ip, #1029]!	; 0x405
  e8:	28053005 	stmdacs	r5, {r0, r2, ip, sp}
  ec:	3d050520 	cfstr32cc	mvfx0, [r5, #-128]	; 0xffffff80
  f0:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
  f4:	27052f05 	strcs	r2, [r5, -r5, lsl #30]
  f8:	31050520 	tstcc	r5, r0, lsr #10
  fc:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
 100:	27052f05 	strcs	r2, [r5, -r5, lsl #30]
 104:	31150520 	tstcc	r5, r0, lsr #10
 108:	67691005 	strbvs	r1, [r9, -r5]!
 10c:	69110567 	ldmdbvs	r1, {r0, r1, r2, r5, r6, r8, sl}
 110:	05056767 	streq	r6, [r5, #-1895]	; 0xfffff899
 114:	20140568 	andscs	r0, r4, r8, ror #10
 118:	052f0505 	streq	r0, [pc, #-1285]!	; fffffc1b <count+0xdffff9af>
 11c:	05052014 	streq	r2, [r5, #-20]	; 0xffffffec
 120:	2014052f 	andscs	r0, r4, pc, lsr #10
 124:	75311205 	ldrvc	r1, [r1, #-517]!	; 0xfffffdfb
 128:	68010567 	stmdavs	r1, {r0, r1, r2, r5, r6, r8, sl}
 12c:	05142602 	ldreq	r2, [r4, #-1538]	; 0xfffff9fe
 130:	1a052f05 	bne	14bd4c <startup-0x1feb42b4>
 134:	01040200 	mrseq	r0, R12_usr
 138:	00090530 	andeq	r0, r9, r0, lsr r5
 13c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 140:	02001a05 	andeq	r1, r0, #20480	; 0x5000
 144:	02200104 	eoreq	r0, r0, #4, 2
 148:	01010007 	tsteq	r1, r7

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	5f717269 	svcpl	0x00717269
  80:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
  84:	3272656c 	rsbscc	r6, r2, #108, 10	; 0x1b000000
  88:	71726900 	cmnvc	r2, r0, lsl #18
  8c:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
  90:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
  94:	6e690031 	mcrvs	0, 3, r0, cr9, cr1, {1}
  98:	615f7469 	cmpvs	pc, r9, ror #8
  9c:	73007070 	movwvc	r7, #112	; 0x70
  a0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  a4:	63007075 	movwvs	r7, #117	; 0x75
  a8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
  ac:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  b0:	3a44006e 	bcc	1100270 <startup-0x1eeffd90>
  b4:	706f6d5c 	rsbvc	r6, pc, ip, asr sp	; <UNPREDICTABLE>
  b8:	62616c5c 	rsbvs	r6, r1, #92, 24	; 0x5c00
  bc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
  c0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
  c4:	6f6d5c72 	svcvs	0x006d5c72
  c8:	342d3470 	strtcc	r3, [sp], #-1136	; 0xfffffb90
  cc:	2f3a4400 	svccs	0x003a4400
  d0:	2f706f6d 	svccs	0x00706f6d
  d4:	6f62616c 	svcvs	0x0062616c
  d8:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
  dc:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
  e0:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  e4:	2f342d34 	svccs	0x00342d34
  e8:	70696c66 	rsbvc	r6, r9, r6, ror #24
  ec:	706f6c66 	rsbvc	r6, pc, r6, ror #24
  f0:	7172695f 	cmnvc	r2, pc, asr r9
  f4:	6365765f 	cmnvs	r5, #99614720	; 0x5f00000
  f8:	65726f74 	ldrbvs	r6, [r2, #-3956]!	; 0xfffff08c
  fc:	00632e64 	rsbeq	r2, r3, r4, ror #28
 100:	5f717269 	svcpl	0x00717269
 104:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 108:	3072656c 	rsbscc	r6, r2, ip, ror #10
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000068 	andeq	r0, r0, r8, rrx
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000078 	andcs	r0, r0, r8, ror r0
  48:	00000064 	andeq	r0, r0, r4, rrx
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	200000dc 	ldrdcs	r0, [r0], -ip
  64:	00000078 	andeq	r0, r0, r8, ror r0
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
  74:	00000018 	andeq	r0, r0, r8, lsl r0
  78:	00000000 	andeq	r0, r0, r0
  7c:	20000154 	andcs	r0, r0, r4, asr r1
  80:	000000fc 	strdeq	r0, [r0], -ip
  84:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  88:	41018e02 	tstmi	r1, r2, lsl #28
  8c:	0000070d 	andeq	r0, r0, sp, lsl #14
  90:	00000018 	andeq	r0, r0, r8, lsl r0
  94:	00000000 	andeq	r0, r0, r0
  98:	20000250 	andcs	r0, r0, r0, asr r2
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  a4:	41018e02 	tstmi	r1, r2, lsl #28
  a8:	0000070d 	andeq	r0, r0, sp, lsl #14
